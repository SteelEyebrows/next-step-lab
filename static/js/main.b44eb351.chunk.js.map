{"version":3,"sources":["components/Navbar.js","components/utility/graphql.js","components/Home.js","components/utility/AboutFunction.js","components/auth/academyInfo.js","components/CSVtablepage.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","withStyles","theme","root","color","palette","getContrastText","backgroundColor","&:hover","Button","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","window","location","href","error","console","log","message","stop","react_default","createElement","style","position","width","className","role","aria-label","src","height","alt","id","this","logined","Link","to","Component","queryCstudent","Home","_getStudentData","API","graphql","graphqlOperation","then","data","alert","JSON","stringify","listMyTypes","items","componentDidMount","origin","destination","direction","index","react_fullpage_default","scrollOverflow","sectionsColor","onLeave","bind","afterLoad","render","_ref2","state","fullpageApi","align","padding","scrollAnimation_min_default","animateIn","animateOnce","IconTabs","React","TabPanel","children","value","other","Object","objectWithoutProperties","Typography","assign","component","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","flexGrow","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","Paper","elevation","square","Tabs","centered","onChange","newValue","variant","indicatorColor","textColor","Tab","icon","lib_default","axis","onChangeIndex","AboutFunction","open","setOpen","handleClose","iconstyle","IconButton","onClick","ContactSupport_default","Dialog","onClose","aria-describedby","DialogContent","DialogContentText","content","DialogActions","autoFocus","info","name","address","grade","class","config","require","steptitle","CsvTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchProducts","asyncToGenerator","mark","res","products","axios","get","api","invokeUrl","sent","setState","t0","handleChange","addchecked","addexpanded","deletechecked","deleteexpended","_makestudenttree","AllStu","treeSet","academy","map","g","classcomp","c","i","label","forEach","student","temptreeSet","parse","nowGrade","nowClass","studentInfo","percentage","assignment","words","gradeindex","findIndex","x","classindex","push","temp","filter","j","length","_callee2","_context2","selectATtree","w","tablevalue","csv","type","handleRadioChange","target","handleFileNameChange","filename","handleNext","activeStep","handleBack","_callee3","_context3","Promise","all","d","loading","newproduct","haveto","wordSet","_this2","react","react_notifications_lib","right","Stepper","orientation","Step","key","StepLabel","StepContent","FormControlLabel","control","Radio","checked","labelPlacement","display","marginTop","index_browser_default","nodes","expanded","deleteexpanded","onCheck","onExpand","icons","check","index_es","uncheck","halfCheck","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","borderRadius","alignItems","MakeCsvPage","TextField","InputLabelProps","shrink","react_csv","startIcon","disabled","columns","title","field","dist_default","App","isAuthenticated","isAuthenticating","user","note","authenticated","currentSession","currentAuthenticatedUser","authProps","HashRouter","Navbar_Navbar","Switch","Route","exact","path","Redirect","Home_Home","CSVtablepage_CsvTable","Boolean","hostname","match","Amplify","configure","mandatorySignIn","region","cognito","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","Storage","AWSS3","bucket","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b44eb351.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport { Auth } from 'aws-amplify';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText('rgba(90, 105, 191,1.0)'),\n    backgroundColor: 'rgba(90, 105, 191,1.0)',\n    '&:hover': {\n      backgroundColor: 'rgba(90, 105, 191,0.95)',\n      color: '#fff',\n    },\n  },\n}))(Button);\n\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n      window.location.href=\"/\";\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav style={{backgroundColor:'#fff',position:'absolute',width:'100%'}} className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          {\n            this.props.logined?\n\n            <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <div className=\"link-1\"> \n                  <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n                </div>\n              </Link>\n              {/* <Link to=\"/wordsetting\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"manual.png\"  width=\"20\" height=\"20\" alt=\"w\"/>\n                </div>\n              </Link> */}\n              {/* <Link to=\"/products\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"group.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n              <Link to=\"/csv\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n         \n        </div>\n        \n        \n        :\n\n          <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n              </Link>\n              <Link to=\"/csv\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n          </div>\n         \n          }\n          \n\n          {/* <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                     <Link to=\"/register\">\n                     <Button style={{borderColor:'#ddd',borderWidth:2,color:'#ddd'}} variant=\"outlined\">Register</Button>\n                    </Link>\n                    <Link to=\"/login\">\n                      <ColorButton style={{marginLeft:10}}  variant=\"contained\" disableElevation>\n                        Log in\n                      </ColorButton>\n                    </Link>                  \n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <Link to=\"/\">\n                    <ColorButton style={{marginLeft:10}} variant=\"contained\" onClick={this.handleLogOut} disableElevation>\n                    Logout\n                  </ColorButton>\n                 </Link>\n                 \n                )}\n              </div>\n            </div>\n          </div> */}\n        </div>\n      </nav>\n\n\n    )\n  }\n}\n","export const queryCall=`\r\nquery list{\r\n  listMyTypes{\r\n    items{\r\n      id type name grade class link todo words{\r\n        id name link percentage haveto\r\n      } record{id month day words etc}}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const queryCstudent=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}},limit:100){\r\n    items{\r\n      id type name grade class link todo haveto due \r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n      test{id name score month day}\r\n      homework{id name assignment done month day}\r\n    }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const studentsWords = `query list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}}){\r\n    items{\r\n      id name words{id name link due haveto deleted}\r\n    }\r\n}}` //for deleteWord\r\n\r\n\r\nexport const queryCteacher=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"teacher\"}}){\r\n    items{\r\n      id type name grade class\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const queryCword=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"word\"}}  limit:100){\r\n    items{\r\n      id name link haveto due deleted\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const createSample= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto} \r\n      record{id month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\n\r\n// id: Math.random().toString(36).substring(7),\r\n// type: \"sample\",\r\n// name: this.state.username,\r\n// address:this.state.company,\r\n// words:[{\r\n//   id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n//   name:\"2020 VOCA.json\",\r\n//   link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n//   haveto:100,\r\n//   due: due\r\n// },{\r\n// id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n// name:\"2020 VOCA2.json\",\r\n// link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n// haveto:100,\r\n// due: due\r\n// }],\r\n// record:record\r\n// });\r\n\r\n\r\nexport const createStudent= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\nexport const createStudent2= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto}\r\n      record{\r\n        id bookid month day words etc\r\n      }\r\n  }\r\n}\r\n`;\r\nexport const createStudent3= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\nexport const createWord = `mutation createMyType($input: CreateMyTypeInput!) {\r\n    createMyType(input: $input) {\r\n        id\r\n        type\r\n        name\r\n        grade\r\n        link\r\n        address\r\n        deleted\r\n    }\r\n  }\r\n  `;// address => 기간  grade => have to\r\n\r\n  export const updateAll = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        name\r\n        grade\r\n    }\r\n  }\r\n  `;\r\n\r\n  export const updateWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        words{name link due haveto deleted}\r\n    }\r\n  }\r\n  `;\r\n  export const updateHomework = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      homework{id name assignment done month day}\r\n    }\r\n  }\r\n  `;\r\n  export const updateTestRecord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      test{id name score month day}\r\n    }\r\n  }\r\n  `;\r\n  export const deleteWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        deleted\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  export const deleteWordOrigin = `mutation deleteMyType($input: DeleteMyTypeInput!) {\r\n    deleteMyType(input: $input) {\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"465tq4\"\r\n\t// \t\thomework:{name:\"숙제1\" assignment:50 done:20 date:\"20/02/13\"}\r\n  //   }){\r\n  //     homework{name assignment done date}\r\n  //   }\r\n  // }   \r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:[{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"},\r\n  //     {id:\"sdfgsdfg\"month:2,day:3,words:\"test.json\"},\r\n  //     {id:\"strwebsf\"month:2,day:2,words:\"test.json\"},]\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"}\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"test.json\"\r\n  //     type:\"word\"\r\n  //     name:\"test.json\"\r\n  //     link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //     words:[\r\n  //       {\r\n  //         id: null\r\n  //         name: null\r\n  //         link:null\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name link words{id name link}\r\n  //   }\r\n  // }  \r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"oatem28pmc\"\r\n  //     type:\"student\"\r\n  //     name:\"이병건\"\r\n  //     grade:\"m1\"\r\n  //     percentage:50,\r\n  //     words:[\r\n  //       {\r\n  //         id: \"test.json\"\r\n  //         name: \"test.json\"\r\n  //         link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name grade percentage words{id name link}\r\n  //   }\r\n  // }\r\n\r\n\r\n// mutation create{\r\n//   createToNote(input:{\r\n//     name:\"note\"\r\n//   \tdescription:\"전체숙제\"\r\n//     grades:[{id:\"01\", name:\"중등 1학년\", students:[\r\n//       {id:\"011\" name:\"홍길동\",percentage:86,assignment:\"숙제\"},\r\n//       {id:\"012\" name:\"이민정\",percentage:30,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"02\", name:\"중등 2학년\", students:[\r\n//       {id:\"021\" name:\"박보영\",percentage:100,assignment:\"숙제\"},\r\n//       {id:\"022\" name:\"신민아\",percentage:60,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"03\", name:\"중등 3학년\", students:[\r\n//       {id:\"031\" name:\"이병건\",percentage:50,assignment:\"숙제\"},\r\n//       {id:\"032\" name:\"주호민\",percentage:90,assignment:\"숙제\"}\r\n//     ]}  \r\n//     ]\r\n//   }){\r\n//     id name description grades{id name students{\r\n//       id name percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n// mutation {\r\n//   deleteToNote (\r\n//     input:{\r\n//       id:\"48f61355-996a-4a46-8638-3799aca806c7\"\r\n//     }\r\n//   ) {\r\n//   \tid\r\n//   }\r\n// }\r\n\r\n// const nodes = [{\r\n//   value: 'mid',\r\n//   label: '중학교',\r\n//   children: [\r\n//       { value: 'm1', label: '1학년' },\r\n//       { value: 'm2', label: '2학년' },\r\n//       { value: 'm3', label: '3학년' },\r\n//   ],\r\n// },{\r\n//   value: 'high',\r\n//   label: '고등학교',\r\n//   children: [\r\n//     { value: 'h1', label: '1학년' },\r\n//     { value: 'h2', label: '2학년' },\r\n//     { value: 'h3', label: '3학년' },\r\n//   ],\r\n// }];\r\n\r\n\r\n\r\n\r\n// mutation create{\r\n//   updateToNote(input:{\r\n//     id:\"9957304a-191c-4f7d-b2a5-192ba1151717\"\r\n//     grades:[{ id:\"01\"\r\n//       students:[{id:\"011\" percentage: 30 assignment: \"string\"}]}]    \r\n//   }){\r\n//     id grades{id students{\r\n//       id percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n\r\n// mutation create{\r\n// \tcreateMyType(input:{\r\n//     \ttype:\"word\"\r\n//     \tname:\"중3단어\"\r\n// \t\t\tgrade: \"m3\"\r\n//     \twords:\"단어\"\r\n//   }){\r\n// \ttype name grade words\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// input CreateToNoteInput {\r\n// \tid: ID\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [GradeInput]\r\n// }\r\n\r\n// input DeleteToNoteInput {\r\n// \tid: ID\r\n// }\r\n\r\n// type Grade {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [Student]\r\n// }\r\n\r\n// input GradeInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input ModelBooleanFilterInput {\r\n// \tne: Boolean\r\n// \teq: Boolean\r\n// }\r\n\r\n// input ModelFloatFilterInput {\r\n// \tne: Float\r\n// \teq: Float\r\n// \tle: Float\r\n// \tlt: Float\r\n// \tge: Float\r\n// \tgt: Float\r\n// \tcontains: Float\r\n// \tnotContains: Float\r\n// \tbetween: [Float]\r\n// }\r\n\r\n// input ModelIDFilterInput {\r\n// \tne: ID\r\n// \teq: ID\r\n// \tle: ID\r\n// \tlt: ID\r\n// \tge: ID\r\n// \tgt: ID\r\n// \tcontains: ID\r\n// \tnotContains: ID\r\n// \tbetween: [ID]\r\n// \tbeginsWith: ID\r\n// }\r\n\r\n// input ModelIntFilterInput {\r\n// \tne: Int\r\n// \teq: Int\r\n// \tle: Int\r\n// \tlt: Int\r\n// \tge: Int\r\n// \tgt: Int\r\n// \tcontains: Int\r\n// \tnotContains: Int\r\n// \tbetween: [Int]\r\n// }\r\n\r\n// enum ModelSortDirection {\r\n// \tASC\r\n// \tDESC\r\n// }\r\n\r\n// input ModelStringFilterInput {\r\n// \tne: String\r\n// \teq: String\r\n// \tle: String\r\n// \tlt: String\r\n// \tge: String\r\n// \tgt: String\r\n// \tcontains: String\r\n// \tnotContains: String\r\n// \tbetween: [String]\r\n// \tbeginsWith: String\r\n// }\r\n\r\n// type ModelToNoteConnection {\r\n// \titems: [ToNote]\r\n// \tnextToken: String\r\n// }\r\n\r\n// input ModelToNoteFilterInput {\r\n// \tid: ModelIDFilterInput\r\n// \tname: ModelStringFilterInput\r\n// \tdescription: ModelStringFilterInput\r\n// \tand: [ModelToNoteFilterInput]\r\n// \tor: [ModelToNoteFilterInput]\r\n// \tnot: ModelToNoteFilterInput\r\n// }\r\n\r\n// type Mutation {\r\n// \tcreateToNote(input: CreateToNoteInput!): ToNote\r\n// \tupdateToNote(input: UpdateToNoteInput!): ToNote\r\n// \tUpdateGrade(input: UpdateGradeInput!): [Grade]\r\n// \tUpdateStudent(input: UpdateStudentInput!): Student\r\n// \tdeleteToNote(input: DeleteToNoteInput!): ToNote\r\n// \taddGrade(input: [GradeInput]): [Grade]\r\n// \taddStudent(input: [StudentInput]): Student\r\n// }\r\n\r\n// type Query {\r\n// \tgetToNote(id: ID!): ToNote\r\n// \tlistToNotes(filter: ModelToNoteFilterInput, limit: Int, nextToken: String): ModelToNoteConnection\r\n// }\r\n\r\n// type Student {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input StudentInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// type Subscription {\r\n// \tonCreateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"createToNote\"])\r\n// \tonUpdateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"updateToNote\"])\r\n// \tonDeleteToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"deleteToNote\"])\r\n// }\r\n\r\n// type ToNote {\r\n// \tid: ID!\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [Grade]\r\n// }\r\n\r\n// input UpdateGradeInput {\r\n// \tid: ID\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input UpdateStudentInput {\r\n// \tid: ID!\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input UpdateToNoteInput {\r\n// \tid: ID!\r\n// \tgrades: [GradeInput]\r\n// }","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './utility/graphql';\n\nexport default class Home extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \n      alert(JSON.stringify(data.data.listMyTypes.items))\n    })\n  }\n  componentDidMount=()=>{\n    this._getStudentData()\n  }\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"#fff\", \"#fff\", \"#fff\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div align=\"center\" className=\"section section1\">\n                <div style={{padding:80}} >\n                <ScrollAnimation animateIn='fadeIn'animateOnce={false}>\n\n                <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n                </ScrollAnimation>\n                  \n                  <img style={{height:400}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n                </div>\n              </div>\n              <div className=\"section\">\n              <div style={{height:700}} align=\"center\" >\n                    <img style={{height:500}} src=\"선생님효과.png\" alt=\"teacher\"/>\n              </div>\n              </div>\n              <div className=\"section\">\n                <IconTabs/>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n  \nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n\n    },\n  });\n \nfunction IconTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const handleChangeIndex = index => {\n        setValue(index);\n      };\n    return (\n        <div >\n      <Paper elevation={0} square className={classes.root}>\n        <Tabs\n        centered\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<img width={100} height={100} src=\"1.png\" alt=\"11111\" />}  {...a11yProps(0)} aria-label=\"phone\" />\n          <Tab icon={<img width={100} height={100} src=\"2.png\" alt=\"22222\" />}  {...a11yProps(1)} aria-label=\"favorite\" />\n          <Tab icon={<img width={100} height={100} src=\"3.png\" alt=\"33333\" />}  {...a11yProps(2)} aria-label=\"person\" />\n        </Tabs>\n      </Paper>\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect1.png\" alt=\"effect1\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect2.png\" alt=\"effect2\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect3.png\" alt=\"effect3\" />\n            </div>\n      </TabPanel>\n      </SwipeableViews>\n      </div>\n    );\n  }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nexport default function AboutFunction(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div style={props.style}>\r\n          <div style={props.iconstyle}>\r\n        <IconButton onClick={handleClickOpen} aria-label=\"delete\">\r\n          <ContactSupportIcon style={{ color: '#5a69bf' }} />\r\n        </IconButton>\r\n            </div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {props.content}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }","export const info={\r\n    name:\"정인학원\",\r\n    address:\"의왕시오전동\",\r\n    grade:[14,15,16,17,18],\r\n    class:[\"c\",\"b\",\"a\",\"s\"]\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport MaterialTable from 'material-table';\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport {CSVLink, CSVDownload} from \"react-csv\";\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport * as academy from './auth/academyInfo'\r\n\r\nconst config = require('../config.json');\r\n\r\nconst steptitle =[\r\n    '어떠한 작업을 하시겠습니까?', \r\n    '대상 학생을 선택해주세요', \r\n    '엑셀파일을 다운로드 받으세요.',\r\n    '다운받은 파일을 다음과 같은 형식으로 작성하신 후, 아래의 버튼을 눌러 업로드 해주세요'\r\n]\r\n\r\nexport default class CsvTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      value:1,  \r\n      newproduct: null,\r\n      tablevalue: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],activeStep:0,\r\n      type:\"숙제\",\r\n      filename:'filename'\r\n     };\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectATtree=(w)=>{\r\n      let tablevalue=[]\r\n    this.state.AllStu.forEach(i=>{\r\n        w.forEach(j=>{\r\n            if(i.value === j){\r\n                tablevalue.push(i)\r\n            }\r\n        })\r\n    })\r\n\r\n    tablevalue=tablevalue.map(x=>{\r\n        return {name:x.label,id:x.value}\r\n    })\r\n\r\n    let csv=null\r\n    if(this.state.type ===\"숙제\"){\r\n        csv =[\r\n            ['name', 'id','homework','asignment','done','month','day']\r\n          ];\r\n    }else{\r\n        csv =[\r\n            ['name', 'id','test','score','month','day']\r\n        ];\r\n    }\r\n\r\n    tablevalue.forEach(x=>{\r\n        let temp = [];\r\n        temp.push(x.name)\r\n        temp.push(x.id)\r\n        csv.push(temp);\r\n    })  \r\n    this.setState({csv:csv,tablevalue:tablevalue,deletechecked:w})\r\n  }\r\n\r\n  handleRadioChange = event => {\r\n    this.setState({type:event.target.value})\r\n  };\r\n  handleFileNameChange = event => {\r\n    this.setState({filename:event.target.value});\r\n  };\r\n\r\n  handleNext = () => {\r\n    this.setState({activeStep:this.state.activeStep+1})\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState({activeStep:this.state.activeStep-1})\r\n  };\r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n      <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n        {steptitle.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n                <div>\r\n                    {index===0&&\r\n                        <div style={{width:400}}>\r\n                            <FormControlLabel\r\n                                value=\"숙제\"\r\n                                control={<Radio\r\n                                color=\"default\"\r\n                                    checked={this.state.type === '숙제'}\r\n                                    onChange={this.handleRadioChange}\r\n                                />}\r\n                                label=\"숙제결과 입력\"\r\n                                labelPlacement=\"End\"\r\n                                />\r\n                             <FormControlLabel\r\n                                value=\"시험\"\r\n                                control={<Radio\r\n                                color=\"default\"\r\n                                    checked={this.state.type === '시험'}\r\n                                    onChange={this.handleRadioChange}\r\n                                />}\r\n                                label=\"시험결과 입력\"\r\n                                labelPlacement=\"End\"\r\n                                />     \r\n                                \r\n                          \r\n                        </div>\r\n                    }\r\n                    {index===1&&\r\n                    <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n                        <div style={{width:\"30%\"}}>\r\n                            <div className=\"tile is-ancestor\">\r\n                                <CheckboxTree\r\n                                nodes={this.state.treeSet}\r\n                                checked={this.state.deletechecked}\r\n                                expanded={this.state.deleteexpanded}\r\n                                onCheck={checked => this.selectATtree(checked)}\r\n                                onExpand={expanded => this.setState({ deleteexpanded:expanded })}\r\n                                icons={{\r\n                                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n                            }}\r\n                            />             \r\n                            </div>\r\n                        </div>\r\n                        <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                            <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                            <MakeCsvPage tablevalue={this.state.tablevalue}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n                    {index===2&&\r\n                        <div style={{height:150}}>\r\n                           <TextField\r\n                                value={this.state.filename}\r\n                                onChange={this.handleFileNameChange}\r\n                                type=\"text\"\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                            />\r\n                           <CSVLink filename={`${this.state.filename}.csv`} data={this.state.csv}>\r\n                           <Button variant=\"contained\" color=\"primary\" startIcon={<img src=\"spreadsheet.png\" width=\"20\" height=\"20\" alt=\"spreadsheet\"/>}>download</Button>\r\n                            </CSVLink>\r\n                        </div>\r\n                    }\r\n                           \r\n                </div>\r\n              <div>\r\n                <div>\r\n                  <Button\r\n                    disabled={this.state.activeStep === 0}\r\n                    onClick={this.handleBack}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleNext}\r\n                  >\r\n                    {this.state.activeStep === steptitle.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n       \r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nfunction MakeCsvPage(props) {\r\n    const [state, setState] = React.useState({\r\n      columns: [\r\n        { title: 'name', field: 'name' },\r\n        { title: 'full ID', field: 'id' },\r\n      ],\r\n    });\r\n\r\n    // 'homework','assignment','done','month','day'\r\n\r\n    return (\r\n        <div>\r\n      <MaterialTable\r\n        title=\"Select\"\r\n        columns={state.columns}\r\n        data={props.tablevalue }\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\n// import WordSetting from './components/WordSetting';\n// import Products from './components/Products';\n// import ProductAdmin from './components/ProductAdmin';\n// import LogIn from './components/auth/LogIn';\n// import Register from './components/auth/Register';\n// import ForgotPassword from './components/auth/ForgotPassword';\n// import ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\n// import ChangePassword from './components/auth/ChangePassword';\n// import ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\n// import Welcome from './components/auth/Welcome';\nimport CsvTable from './components/CSVtablepage'\n\n// import Sample from './components/Sample';\n// import MainConsole from './components/mainConsole'\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth} from 'aws-amplify';\n// library.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n    note:[]\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {      \n      \n      // const data = await API.graphql(graphqlOperation(query))\n      // alert(JSON.stringify(data));\n\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(\"ttttt\");\n      const user = await Auth.currentAuthenticatedUser();\n      // alert(`Hi ${user}!!`)\n      this.setUser(user);\n\n    } catch(error) {\n      if (error !== 'No current user') {\n        alert(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar logined={this.state.isAuthenticated} auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => (this.state.isAuthenticated?(<Redirect to=\"/mainconsole\" />):(<Home {...props} auth={authProps} />))}/>\n              {/* <Route exact path=\"/products\" render={(props) => (this.state.isAuthenticated?(<Products {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n              {/* <Route exact path=\"/wordsetting\" render={(props) => (this.state.isAuthenticated?(<WordSetting {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n               <Route exact path=\"/csv\" render={(props) => <CsvTable {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} /> */}\n              {/* <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} /> */}\n              {/* <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n              <Route exact path=\"/mainconsole\" render={(props) => <MainConsole {...props} auth={authProps} />} />\n              <Route exact path=\"/Sample\" render={(props) => <Sample {...props} auth={authProps} />} /> */} */}\n            </Switch>\n            \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      AWSS3: {\n          bucket: 'verdemo', //REQUIRED -  Amazon S3 bucket\n          region: 'ap-northeast-2', //OPTIONAL -  Amazon service region\n      }\n  },\n    \"aws_project_region\": \"ap-northeast-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://6rha74vb45elpo6wue7tw2ladm.appsync-api.ap-northeast-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-53xamyyb3vagfcwl5xylphc43u\"\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}