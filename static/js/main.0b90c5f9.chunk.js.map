{"version":3,"sources":["components/Home.js","App.js","serviceWorker.js","index.js"],"names":["Home","origin","destination","direction","console","log","index","react_default","a","createElement","react_fullpage_default","scrollOverflow","sectionsColor","onLeave","this","bind","afterLoad","render","_ref","state","fullpageApi","id","align","className","style","padding","scrollAnimation_min_default","animateIn","animateOnce","color","height","src","alt","IconTabs","React","Component","TabPanel","props","children","value","other","Object","objectWithoutProperties","Typography","assign","component","role","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","root","flexGrow","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","Paper","elevation","square","Tabs","centered","onChange","event","newValue","variant","indicatorColor","textColor","aria-label","Tab","icon","width","lib_default","axis","onChangeIndex","App","isAuthenticated","isAuthenticating","user","note","setAuthStatus","authenticated","_this","setState","setUser","Auth","currentSession","currentAuthenticatedUser","_context","t0","alert","_this2","authProps","HashRouter","Switch","Route","exact","path","Redirect","to","Home_Home","auth","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignIn","region","config","cognito","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","Storage","AWSS3","bucket","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b90c5f9.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport Hero from './Hero';\nimport Button from '@material-ui/core/Button';\nimport Footer from './Footer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport ScrollAnimation from 'react-animate-on-scroll';\n\n\nexport default class Home extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"#fff\", \"#fff\", \"#fff\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div align=\"center\" className=\"section section1\">\n                <div style={{padding:80}} >\n                <ScrollAnimation animateIn='fadeIn'animateOnce={false}>\n\n                <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n                </ScrollAnimation>\n                  \n                  <img style={{height:400}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n                </div>\n              </div>\n              <div className=\"section\">\n              <div style={{height:700}} align=\"center\" >\n                    <img style={{height:500}} src=\"선생님효과.png\" alt=\"teacher\"/>\n              </div>\n              </div>\n              <div className=\"section\">\n                <IconTabs/>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n  \nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n\n    },\n  });\n \nfunction IconTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const handleChangeIndex = index => {\n        setValue(index);\n      };\n    return (\n        <div >\n      <Paper elevation={0} square className={classes.root}>\n        <Tabs\n        centered\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<img width={100} height={100} src=\"1.png\" alt=\"11111\" />}  {...a11yProps(0)} aria-label=\"phone\" />\n          <Tab icon={<img width={100} height={100} src=\"2.png\" alt=\"22222\" />}  {...a11yProps(1)} aria-label=\"favorite\" />\n          <Tab icon={<img width={100} height={100} src=\"3.png\" alt=\"33333\" />}  {...a11yProps(2)} aria-label=\"person\" />\n        </Tabs>\n      </Paper>\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect1.png\" alt=\"effect1\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect2.png\" alt=\"effect2\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect3.png\" alt=\"effect3\" />\n            </div>\n      </TabPanel>\n      </SwipeableViews>\n      </div>\n    );\n  }","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport './App.css';\n// import Navbar from './components/Navbar';\nimport Home from './components/Home';\n// import WordSetting from './components/WordSetting';\n// import Products from './components/Products';\n// import ProductAdmin from './components/ProductAdmin';\n// import LogIn from './components/auth/LogIn';\n// import Register from './components/auth/Register';\n// import ForgotPassword from './components/auth/ForgotPassword';\n// import ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\n// import ChangePassword from './components/auth/ChangePassword';\n// import ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\n// import Welcome from './components/auth/Welcome';\n// import CsvTable from './components/CSVtablepage'\n\n// import Sample from './components/Sample';\n// import MainConsole from './components/mainConsole'\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth} from 'aws-amplify';\n// library.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n    note:[]\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {      \n      \n      // const data = await API.graphql(graphqlOperation(query))\n      // alert(JSON.stringify(data));\n\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(\"ttttt\");\n      const user = await Auth.currentAuthenticatedUser();\n      // alert(`Hi ${user}!!`)\n      this.setUser(user);\n\n    } catch(error) {\n      if (error !== 'No current user') {\n        alert(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            {/* <Navbar logined={this.state.isAuthenticated} auth={authProps} /> */}\n            <Switch>\n              <Route exact path=\"/\" render={(props) => (this.state.isAuthenticated?(<Redirect to=\"/mainconsole\" />):(<Home {...props} auth={authProps} />))}/>\n              {/* <Route exact path=\"/products\" render={(props) => (this.state.isAuthenticated?(<Products {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n              {/* <Route exact path=\"/wordsetting\" render={(props) => (this.state.isAuthenticated?(<WordSetting {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n              {/* <Route exact path=\"/csv\" render={(props) => <CsvTable {...props} auth={authProps} />} />\n              <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} />\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n              <Route exact path=\"/mainconsole\" render={(props) => <MainConsole {...props} auth={authProps} />} />\n              <Route exact path=\"/Sample\" render={(props) => <Sample {...props} auth={authProps} />} /> */}\n            </Switch>\n            \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      AWSS3: {\n          bucket: 'verdemo', //REQUIRED -  Amazon S3 bucket\n          region: 'ap-northeast-2', //OPTIONAL -  Amazon service region\n      }\n  },\n    \"aws_project_region\": \"ap-northeast-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://6rha74vb45elpo6wue7tw2ladm.appsync-api.ap-northeast-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-53xamyyb3vagfcwl5xylphc43u\"\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}