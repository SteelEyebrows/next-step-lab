{"version":3,"sources":["components/Navbar.js","components/utility/graphql.js","components/Home.js","components/auth/academyInfo.js","components/temp.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","withStyles","theme","root","color","palette","getContrastText","backgroundColor","&:hover","Button","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","window","location","href","error","console","log","message","stop","react_default","createElement","style","position","width","className","role","aria-label","src","height","alt","id","this","logined","Link","to","Component","queryCstudent","queryCword","createWord","updateWord","Home","_getStudentData","API","graphql","graphqlOperation","then","data","alert","JSON","stringify","listMyTypes","items","componentDidMount","origin","destination","direction","index","react_fullpage_default","scrollOverflow","sectionsColor","onLeave","bind","afterLoad","render","_ref2","state","fullpageApi","align","padding","scrollAnimation_min_default","animateIn","animateOnce","IconTabs","React","TabPanel","children","value","other","Object","objectWithoutProperties","Typography","assign","component","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","flexGrow","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","Paper","elevation","square","Tabs","centered","onChange","newValue","variant","indicatorColor","textColor","Tab","icon","lib_default","axis","onChangeIndex","info","name","address","grade","class","config","require","moment","extendMoment","originalMoment","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Temp","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchProducts","asyncToGenerator","mark","res","products","axios","get","api","invokeUrl","sent","setState","t0","handleChange","addchecked","addexpanded","deletechecked","deleteexpended","csvTojson","sender","result","reader","FileReader","target","files","readAsText","onload","lines","split","headers","i","length","obj","currentline","j","push","e","File","replace","type","handleFileInput","_callee2","_context2","S3","uploadFile","bucketName","dirName","region","accessKeyId","secretAccessKey","d","SaveWords","catch","err","_x","apply","arguments","_ref3","_callee3","tempD","input_query","_context3","Math","random","toString","substring","key","link","deleted","NotificationManager","success","input","_getWordData","_x2","_callee4","_context4","tt","filter","x","wordSet","_makestudenttree","AllStu","treeSet","academy","map","g","classcomp","c","label","forEach","student","temptreeSet","parse","nowGrade","nowClass","studentInfo","percentage","assignment","words","gradeindex","findIndex","classindex","temp","_callee5","_context5","selectWord","w","selectedWord","includes","toConsumableArray","word","addSendData","indexOf","wordset","select","_ref6","_callee6","sw","temp2","ass","_context6","warning","abrupt","haveto","due","calendarValue","start","format","end","_x3","_x4","oncalendarSelect","states","renderSelectionValue","display","fontSize","_callee7","_context7","Promise","all","loading","handleChangeMultiple","handleHavetoChange","today","newproduct","AddOrDelete","range","clone","subtract","_this2","react","react_notifications_lib","temp_TabPanel","marginBottom","marginTop","accept","htmlFor","marginLeft","FormControl","InputLabel","Select","labelId","multiple","Input","renderValue","selected","Chip","MenuItem","index_browser_default","nodes","checked","expanded","onCheck","onExpand","icons","check","index_es","uncheck","halfCheck","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","marginRight","react_custom_scrollbars_lib","borderRadius","margin","TextField","InputLabelProps","shrink","DateRangePicker_default","onSelect","singleDateRange","borderWidth","borderColor","onClick","deleteexpanded","alignItems","CommonWordsView","allstu","CommonWords","commonWords_id","perword","common","App","isAuthenticated","isAuthenticating","user","note","authenticated","currentSession","currentAuthenticatedUser","authProps","HashRouter","Navbar_Navbar","Switch","Route","exact","path","Redirect","Home_Home","temp_Temp","Boolean","hostname","match","Amplify","configure","mandatorySignIn","cognito","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","Storage","AWSS3","bucket","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0585efe.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport { Auth } from 'aws-amplify';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText('rgba(90, 105, 191,1.0)'),\n    backgroundColor: 'rgba(90, 105, 191,1.0)',\n    '&:hover': {\n      backgroundColor: 'rgba(90, 105, 191,0.95)',\n      color: '#fff',\n    },\n  },\n}))(Button);\n\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n      window.location.href=\"/\";\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav style={{backgroundColor:'#fff',position:'absolute',width:'100%'}} className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          {\n            this.props.logined?\n\n            <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <div className=\"link-1\"> \n                  <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n                </div>\n              </Link>\n              {/* <Link to=\"/wordsetting\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"manual.png\"  width=\"20\" height=\"20\" alt=\"w\"/>\n                </div>\n              </Link> */}\n              {/* <Link to=\"/products\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"group.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n              {/* <Link to=\"/csv\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n              <Link to=\"/temp\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n         \n        </div>\n        \n        \n        :\n\n          <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n              </Link>\n              <Link to=\"/temp\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n          </div>\n         \n          }\n          \n\n          {/* <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                     <Link to=\"/register\">\n                     <Button style={{borderColor:'#ddd',borderWidth:2,color:'#ddd'}} variant=\"outlined\">Register</Button>\n                    </Link>\n                    <Link to=\"/login\">\n                      <ColorButton style={{marginLeft:10}}  variant=\"contained\" disableElevation>\n                        Log in\n                      </ColorButton>\n                    </Link>                  \n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <Link to=\"/\">\n                    <ColorButton style={{marginLeft:10}} variant=\"contained\" onClick={this.handleLogOut} disableElevation>\n                    Logout\n                  </ColorButton>\n                 </Link>\n                 \n                )}\n              </div>\n            </div>\n          </div> */}\n        </div>\n      </nav>\n\n\n    )\n  }\n}\n","export const queryCall=`\r\nquery list{\r\n  listMyTypes{\r\n    items{\r\n      id type name grade class link todo words{\r\n        id name link percentage haveto\r\n      } record{id month day words etc}}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const queryCstudent=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}},limit:100){\r\n    items{\r\n      id type name grade class link todo haveto due \r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n      test{id name score month day}\r\n      homework{id name assignment done month day}\r\n    }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const studentsWords = `query list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}}){\r\n    items{\r\n      id name words{id name link due haveto deleted}\r\n    }\r\n}}` //for deleteWord\r\n\r\n\r\nexport const queryCteacher=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"teacher\"}}){\r\n    items{\r\n      id type name grade class\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const queryCword=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"word\"}}  limit:100){\r\n    items{\r\n      id name link haveto due deleted\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const createSample= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto} \r\n      record{id month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\n\r\n// id: Math.random().toString(36).substring(7),\r\n// type: \"sample\",\r\n// name: this.state.username,\r\n// address:this.state.company,\r\n// words:[{\r\n//   id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n//   name:\"2020 VOCA.json\",\r\n//   link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n//   haveto:100,\r\n//   due: due\r\n// },{\r\n// id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n// name:\"2020 VOCA2.json\",\r\n// link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n// haveto:100,\r\n// due: due\r\n// }],\r\n// record:record\r\n// });\r\n\r\n\r\nexport const createStudent= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\nexport const createStudent2= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto}\r\n      record{\r\n        id bookid month day words etc\r\n      }\r\n  }\r\n}\r\n`;\r\nexport const createStudent3= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\nexport const createWord = `mutation createMyType($input: CreateMyTypeInput!) {\r\n    createMyType(input: $input) {\r\n        id\r\n        type\r\n        name\r\n        grade\r\n        link\r\n        address\r\n        deleted\r\n    }\r\n  }\r\n  `;// address => 기간  grade => have to\r\n\r\n  export const updateAll = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        name\r\n        grade\r\n    }\r\n  }\r\n  `;\r\n\r\n  export const updateWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        words{name link due haveto deleted}\r\n    }\r\n  }\r\n  `;\r\n  export const updateHomework = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      homework{id name assignment done month day}\r\n    }\r\n  }\r\n  `;\r\n  export const updateTestRecord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      test{id name score month day}\r\n    }\r\n  }\r\n  `;\r\n  export const deleteWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        deleted\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  export const deleteWordOrigin = `mutation deleteMyType($input: DeleteMyTypeInput!) {\r\n    deleteMyType(input: $input) {\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"465tq4\"\r\n\t// \t\thomework:{name:\"숙제1\" assignment:50 done:20 date:\"20/02/13\"}\r\n  //   }){\r\n  //     homework{name assignment done date}\r\n  //   }\r\n  // }   \r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:[{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"},\r\n  //     {id:\"sdfgsdfg\"month:2,day:3,words:\"test.json\"},\r\n  //     {id:\"strwebsf\"month:2,day:2,words:\"test.json\"},]\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"}\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"test.json\"\r\n  //     type:\"word\"\r\n  //     name:\"test.json\"\r\n  //     link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //     words:[\r\n  //       {\r\n  //         id: null\r\n  //         name: null\r\n  //         link:null\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name link words{id name link}\r\n  //   }\r\n  // }  \r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"oatem28pmc\"\r\n  //     type:\"student\"\r\n  //     name:\"이병건\"\r\n  //     grade:\"m1\"\r\n  //     percentage:50,\r\n  //     words:[\r\n  //       {\r\n  //         id: \"test.json\"\r\n  //         name: \"test.json\"\r\n  //         link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name grade percentage words{id name link}\r\n  //   }\r\n  // }\r\n\r\n\r\n// mutation create{\r\n//   createToNote(input:{\r\n//     name:\"note\"\r\n//   \tdescription:\"전체숙제\"\r\n//     grades:[{id:\"01\", name:\"중등 1학년\", students:[\r\n//       {id:\"011\" name:\"홍길동\",percentage:86,assignment:\"숙제\"},\r\n//       {id:\"012\" name:\"이민정\",percentage:30,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"02\", name:\"중등 2학년\", students:[\r\n//       {id:\"021\" name:\"박보영\",percentage:100,assignment:\"숙제\"},\r\n//       {id:\"022\" name:\"신민아\",percentage:60,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"03\", name:\"중등 3학년\", students:[\r\n//       {id:\"031\" name:\"이병건\",percentage:50,assignment:\"숙제\"},\r\n//       {id:\"032\" name:\"주호민\",percentage:90,assignment:\"숙제\"}\r\n//     ]}  \r\n//     ]\r\n//   }){\r\n//     id name description grades{id name students{\r\n//       id name percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n// mutation {\r\n//   deleteToNote (\r\n//     input:{\r\n//       id:\"48f61355-996a-4a46-8638-3799aca806c7\"\r\n//     }\r\n//   ) {\r\n//   \tid\r\n//   }\r\n// }\r\n\r\n// const nodes = [{\r\n//   value: 'mid',\r\n//   label: '중학교',\r\n//   children: [\r\n//       { value: 'm1', label: '1학년' },\r\n//       { value: 'm2', label: '2학년' },\r\n//       { value: 'm3', label: '3학년' },\r\n//   ],\r\n// },{\r\n//   value: 'high',\r\n//   label: '고등학교',\r\n//   children: [\r\n//     { value: 'h1', label: '1학년' },\r\n//     { value: 'h2', label: '2학년' },\r\n//     { value: 'h3', label: '3학년' },\r\n//   ],\r\n// }];\r\n\r\n\r\n\r\n\r\n// mutation create{\r\n//   updateToNote(input:{\r\n//     id:\"9957304a-191c-4f7d-b2a5-192ba1151717\"\r\n//     grades:[{ id:\"01\"\r\n//       students:[{id:\"011\" percentage: 30 assignment: \"string\"}]}]    \r\n//   }){\r\n//     id grades{id students{\r\n//       id percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n\r\n// mutation create{\r\n// \tcreateMyType(input:{\r\n//     \ttype:\"word\"\r\n//     \tname:\"중3단어\"\r\n// \t\t\tgrade: \"m3\"\r\n//     \twords:\"단어\"\r\n//   }){\r\n// \ttype name grade words\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// input CreateToNoteInput {\r\n// \tid: ID\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [GradeInput]\r\n// }\r\n\r\n// input DeleteToNoteInput {\r\n// \tid: ID\r\n// }\r\n\r\n// type Grade {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [Student]\r\n// }\r\n\r\n// input GradeInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input ModelBooleanFilterInput {\r\n// \tne: Boolean\r\n// \teq: Boolean\r\n// }\r\n\r\n// input ModelFloatFilterInput {\r\n// \tne: Float\r\n// \teq: Float\r\n// \tle: Float\r\n// \tlt: Float\r\n// \tge: Float\r\n// \tgt: Float\r\n// \tcontains: Float\r\n// \tnotContains: Float\r\n// \tbetween: [Float]\r\n// }\r\n\r\n// input ModelIDFilterInput {\r\n// \tne: ID\r\n// \teq: ID\r\n// \tle: ID\r\n// \tlt: ID\r\n// \tge: ID\r\n// \tgt: ID\r\n// \tcontains: ID\r\n// \tnotContains: ID\r\n// \tbetween: [ID]\r\n// \tbeginsWith: ID\r\n// }\r\n\r\n// input ModelIntFilterInput {\r\n// \tne: Int\r\n// \teq: Int\r\n// \tle: Int\r\n// \tlt: Int\r\n// \tge: Int\r\n// \tgt: Int\r\n// \tcontains: Int\r\n// \tnotContains: Int\r\n// \tbetween: [Int]\r\n// }\r\n\r\n// enum ModelSortDirection {\r\n// \tASC\r\n// \tDESC\r\n// }\r\n\r\n// input ModelStringFilterInput {\r\n// \tne: String\r\n// \teq: String\r\n// \tle: String\r\n// \tlt: String\r\n// \tge: String\r\n// \tgt: String\r\n// \tcontains: String\r\n// \tnotContains: String\r\n// \tbetween: [String]\r\n// \tbeginsWith: String\r\n// }\r\n\r\n// type ModelToNoteConnection {\r\n// \titems: [ToNote]\r\n// \tnextToken: String\r\n// }\r\n\r\n// input ModelToNoteFilterInput {\r\n// \tid: ModelIDFilterInput\r\n// \tname: ModelStringFilterInput\r\n// \tdescription: ModelStringFilterInput\r\n// \tand: [ModelToNoteFilterInput]\r\n// \tor: [ModelToNoteFilterInput]\r\n// \tnot: ModelToNoteFilterInput\r\n// }\r\n\r\n// type Mutation {\r\n// \tcreateToNote(input: CreateToNoteInput!): ToNote\r\n// \tupdateToNote(input: UpdateToNoteInput!): ToNote\r\n// \tUpdateGrade(input: UpdateGradeInput!): [Grade]\r\n// \tUpdateStudent(input: UpdateStudentInput!): Student\r\n// \tdeleteToNote(input: DeleteToNoteInput!): ToNote\r\n// \taddGrade(input: [GradeInput]): [Grade]\r\n// \taddStudent(input: [StudentInput]): Student\r\n// }\r\n\r\n// type Query {\r\n// \tgetToNote(id: ID!): ToNote\r\n// \tlistToNotes(filter: ModelToNoteFilterInput, limit: Int, nextToken: String): ModelToNoteConnection\r\n// }\r\n\r\n// type Student {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input StudentInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// type Subscription {\r\n// \tonCreateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"createToNote\"])\r\n// \tonUpdateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"updateToNote\"])\r\n// \tonDeleteToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"deleteToNote\"])\r\n// }\r\n\r\n// type ToNote {\r\n// \tid: ID!\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [Grade]\r\n// }\r\n\r\n// input UpdateGradeInput {\r\n// \tid: ID\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input UpdateStudentInput {\r\n// \tid: ID!\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input UpdateToNoteInput {\r\n// \tid: ID!\r\n// \tgrades: [GradeInput]\r\n// }","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './utility/graphql';\n\nexport default class Home extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \n      alert(JSON.stringify(data.data.listMyTypes.items))\n    })\n  }\n  componentDidMount=()=>{\n    this._getStudentData()\n  }\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"#fff\", \"#fff\", \"#fff\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div align=\"center\" className=\"section section1\">\n                <div style={{padding:80}} >\n                <ScrollAnimation animateIn='fadeIn'animateOnce={false}>\n\n                <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n                </ScrollAnimation>\n                  \n                  <img style={{height:400}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n                </div>\n              </div>\n              <div className=\"section\">\n              <div style={{height:700}} align=\"center\" >\n                    <img style={{height:500}} src=\"선생님효과.png\" alt=\"teacher\"/>\n              </div>\n              </div>\n              <div className=\"section\">\n                <IconTabs/>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n  \nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n\n    },\n  });\n \nfunction IconTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const handleChangeIndex = index => {\n        setValue(index);\n      };\n    return (\n        <div >\n      <Paper elevation={0} square className={classes.root}>\n        <Tabs\n        centered\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<img width={100} height={100} src=\"1.png\" alt=\"11111\" />}  {...a11yProps(0)} aria-label=\"phone\" />\n          <Tab icon={<img width={100} height={100} src=\"2.png\" alt=\"22222\" />}  {...a11yProps(1)} aria-label=\"favorite\" />\n          <Tab icon={<img width={100} height={100} src=\"3.png\" alt=\"33333\" />}  {...a11yProps(2)} aria-label=\"person\" />\n        </Tabs>\n      </Paper>\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect1.png\" alt=\"effect1\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect2.png\" alt=\"effect2\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect3.png\" alt=\"effect3\" />\n            </div>\n      </TabPanel>\n      </SwipeableViews>\n      </div>\n    );\n  }","export const info={\r\n    name:\"정인학원\",\r\n    address:\"의왕시오전동\",\r\n    grade:[14,15,16,17,18],\r\n    class:[\"c\",\"b\",\"a\",\"s\"]\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport DateRangePicker from \"react-daterange-picker\";\r\nimport originalMoment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport * as academy from './auth/academyInfo';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\n\r\nconst config = require('../config.json');\r\nconst moment = extendMoment(originalMoment);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default class Temp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const today = moment();\r\n    this.state = { \r\n      value:0,  \r\n      newproduct: null,\r\n      products: [],\r\n      \r\n      addchecked: [],\r\n      addexpanded: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],\r\n      selectedWord:[],\r\n      AddOrDelete:true,\r\n      select:[],\r\n      calendarValue: moment.range(today.clone().subtract(1, \"days\"), today.clone())//calendar\r\n     };\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n\r\n\r\n  csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    let name = sender.target.files[0].name\r\n\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            let e = new File([JSON.stringify(result)], name.replace('.csv','.json'), {type: \"application/json\"})\r\n            this.handleFileInput(e);\r\n            // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\r\n            // var dlAnchorElem = document.createElement('a');\r\n            // dlAnchorElem.setAttribute(\"href\",dataStr);\r\n            // dlAnchorElem.setAttribute(\"download\", \"newworkbook.json\");\r\n            // dlAnchorElem.click();\r\n  }\r\n}\r\n  // ▽\r\n  handleFileInput =async(e)=>{\r\n      await S3.uploadFile(e, {\r\n          bucketName: config.S3.bucketName,\r\n          dirName:config.S3.dirName,\r\n          region: config.S3.region,\r\n          accessKeyId: config.S3.accessKeyId,\r\n          secretAccessKey: config.S3.secretAccessKey,\r\n      }).then( d =>{\r\n          this.SaveWords(d);\r\n        }).catch(err =>alert(err));\r\n  }\r\n  // ▽       \r\n\r\n  SaveWords = async(tempD)=>{\r\n    const input_query={\r\n      id: Math.random().toString(36).substring(7),\r\n      type: \"word\",\r\n      name: tempD.key.replace(`${config.S3.dirName}/`,\"\"),\r\n      grade:null, // haveto\r\n      link: tempD.location,\r\n      address:null,\r\n      deleted:false\r\n    };\r\n    // alert(JSON.stringify(input_query))\r\n    NotificationManager.success('Upload Success', '단어장을 저장하였습니다',3000); \r\n    await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(()=>\r\n      this._getWordData()\r\n    );\r\n  }\r\n  // ▽\r\n  _getWordData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCword)).then(data =>{\r\n      alert(data) \r\n    let tt = data.data.listMyTypes.items.filter(x=> x.deleted === null || x.deleted ===false);\r\n    // alert(JSON.stringify(tt))\r\n      this.setState({wordSet:tt})\r\n    })\r\n  }\r\n \r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{  \r\n      alert(data) \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectWord=(w)=>{\r\n        if(this.state.selectedWord.includes(w) === false){\r\n            this.setState({\r\n                selectedWord: [...this.state.selectedWord, w]\r\n            });\r\n        }else{\r\n            this.setState({selectedWord: this.state.selectedWord.filter(function(word) { \r\n                return word !== w\r\n            })});\r\n        }  \r\n  }\r\n\r\n  addSendData = () =>{\r\n    \r\n    this.state.AllStu.map((student, i)=>{    \r\n        if(this.state.addchecked.indexOf(student.value) !== -1){ \r\n\r\n              let wordset = this.state.wordSet\r\n\r\n            this.state.select.map(async(sw,i)=>{//선택된 단어장\r\n\r\n \r\n                let temp = student.words!==null?student.words.findIndex(x => x.label === sw):-2\r\n                let temp2 = this.state.wordSet.findIndex(x => x.name === sw)\r\n\r\n              if(temp!==-1&&temp!==-2){\r\n                    NotificationManager.warning('Upload Failed', `${student.label}이 이미 ${sw}을 가지고 있습니다.`,3000);\r\n                    return \"\";\r\n                }\r\n              else if(temp2 !== -1){\r\n\r\n                  wordset[temp2].haveto = this.state.haveto;\r\n                  wordset[temp2].due = `${this.state.calendarValue.start.format(\"YYYY-MM-DD\")}/${this.state.calendarValue.end.format(\"YYYY-MM-DD\")}`\r\n                  const ass = temp===-2?[wordset[temp2]]:student.words.concat(wordset[temp2])\r\n\r\n                  const input_query={\r\n                    id: student.value,\r\n                    words: ass,\r\n                  };\r\n\r\n                await API.graphql(graphqlOperation(graphql.updateWord, {input: input_query})).then(data =>{\r\n                     NotificationManager.success('Upload Success', `${student.label}에게 ${sw}을 업로드 하였습니다.`,3000);\r\n                })\r\n                }else return 0\r\n              })\r\n\r\n        }else return 0;\r\n    })\r\n  }\r\n  \r\n  oncalendarSelect = (calendarValue, states) => {\r\n    this.setState({ calendarValue, states });\r\n  };//calendar\r\n\r\n\r\n\r\n  renderSelectionValue = () => {\r\n    return (\r\n      <div style={{padding:25}}>\r\n        <div id=\"calendar\" style={{display:'flex'}}>\r\n          <strong>Start    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.start.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n        <div style={{display:'flex'}}>\r\n          <strong>End    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.end.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };//calendar\r\n\r\n  \r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData(), this._getWordData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n  handleChangeMultiple = event => {\r\n    // alert(event.target.value)\r\n    this.setState({select:event.target.value});\r\n  };\r\n\r\n  handleHavetoChange = event => {\r\n    this.setState({haveto:event.target.value});\r\n  };\r\n\r\n  render() {\r\n    alert(\"zzzz\")\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n\r\n       \r\n\r\n      <Paper elevation={0} position=\"static\">\r\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"단어장 추가\" {...this.a11yProps(0)} />\r\n          <Tab label=\"단어장 삭제\" {...this.a11yProps(1)} />\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={this.state.value} index={0}>\r\n        <div>\r\n\r\n        <div id=\"addWordToStudent\" style={{display:'flex'}}>\r\n\r\n        \r\n            <div style={{width:\"30%\"}}>\r\n\r\n\r\n            <div style={{marginBottom:50,display:'flex'}}>\r\n            <div style={{marginTop:15}}>\r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\"  name=\"file\" onChange={e => this.csvTojson(e)} accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  +\r\n                </Button>\r\n              </label>\r\n            </div>\r\n            \r\n            <div id=\"selecter\" style={{width:\"50%\",marginLeft:10}}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel id=\"demo-mutiple-chip-label\">select</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-chip-label\"\r\n            id=\"demo-mutiple-chip\"\r\n            multiple\r\n            value={this.state.select}\r\n            onChange={event =>this.handleChangeMultiple(event)}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            renderValue={selected => (\r\n              <div>\r\n                {\r\n                selected.map((w,i) => (\r\n                   <Chip\r\n                   key={i}\r\n                   label={w.replace('.json','')}\r\n                 />\r\n                ))\r\n                }\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >{this.state.wordSet.map(w => (\r\n            <MenuItem key={w.id} value={w.name}>\r\n              {w.name.replace('.json','')}\r\n            </MenuItem>\r\n          ))}\r\n          </Select>\r\n        </FormControl>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.addchecked}\r\n                expanded={this.state.addexpanded}\r\n                onCheck={checked =>{ this.setState({ addchecked:checked })}}\r\n                onExpand={expanded =>{ this.setState({ addexpanded:expanded })} }\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />             \r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"100%\",display:'flex'}} >\r\n              <div style={{marginRight:100}}>\r\n\r\n                <div>\r\n                  <strong>WordBook</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                     {//if selected, print that\r\n                          this.state.select.map((word,i)=>{\r\n                            return(\r\n                              <Chip\r\n                                style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                key={word}\r\n                                label={word.replace('.json','')}\r\n                              />\r\n                            );\r\n                        })\r\n                    }\r\n                  </Scrollbars>\r\n                  \r\n                </div>\r\n\r\n                <div>\r\n                  <strong>Students</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                  {\r\n                      this.state.AllStu.map((student, i)=>{    \r\n                          if(this.state.addchecked.indexOf(student.value) !== -1){\r\n                              return(\r\n                                <Chip\r\n                                  style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                  key={student.label}\r\n                                  label={student.label}\r\n                                />\r\n                          );\r\n                          }\r\n                          return \"\";\r\n                      })\r\n                      }\r\n                  </Scrollbars>\r\n                  \r\n                </div> \r\n\r\n                <div style={{ height: 80,width: 300}}>\r\n                  <strong>Have to</strong>\r\n                  <div>\r\n                      <TextField\r\n                        value={this.state.haveto}\r\n                        onChange={this.handleHavetoChange}\r\n                        id=\"outlined-number\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n\r\n                </div>  \r\n                <div>\r\n                  <div>{this.renderSelectionValue()}</div>\r\n                  <div>\r\n                    <DateRangePicker\r\n                      value={this.state.calendarValue}\r\n                      onSelect={this.oncalendarSelect}\r\n                      singleDateRange={true}\r\n                    />\r\n                  \r\n                </div>\r\n                <div>\r\n                        <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:300}} onClick={()=>{this.addSendData()}}>\r\n                            send\r\n                        </Button>\r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n      <TabPanel value={this.state.value} index={1}>\r\n      <div>\r\n    \r\n        <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n\r\n            <div style={{width:\"30%\"}}>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.deletechecked}\r\n                expanded={this.state.deleteexpanded}\r\n                onCheck={checked => this.setState({ deletechecked:checked })}\r\n                onExpand={expanded => this.setState({ deleteexpanded:expanded })}\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />             \r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                    <CommonWordsView wordSet={this.state.wordSet} allstu={this.state.AllStu} deletechecked={this.state.deletechecked}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n\r\n        </div>\r\n       \r\n\r\n\r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CommonWordsView(props) {\r\n    let CommonWords = [];\r\n    let commonWords_id =[];\r\n\r\n    props.allstu.map((student, i)=>{                            \r\n        if(props.deletechecked.indexOf(student.value) !== -1){\r\n            if(student.words !== null){\r\n            student.words.map((perword,i)=>{\r\n              if(props.wordSet.findIndex(x=>x.id===perword.id)!==-1){ //delete되지 않은 단어인가?  맞다       \r\n                if(CommonWords.length >0){//맨 처음 push하는 것인가? 아니다\r\n                    CommonWords.map((c,i)=>{\r\n                        \r\n                          if(c.id === perword.id){ // 해당 단어장이 이미 있는가? 없다\r\n                            CommonWords[i].common.push({name:student.label, id:student.value})\r\n                            }\r\n                            else if(commonWords_id.includes(perword.id)===false){// 해당 단어장이 이미 있는가? 있다\r\n                                CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                                commonWords_id.push(perword.id);\r\n                            } \r\n                        \r\n                    })\r\n                }else if(CommonWords.length === 0){//맨 처음 push하는 것인가? 맞다\r\n                    CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                    commonWords_id.push(perword.id);\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n    })\r\n    \r\n    return (\r\n      <Scrollbars style={{height:500}}>\r\n       \r\n      </Scrollbars>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\n// import WordSetting from './components/WordSetting';\n// import Products from './components/Products';\n// import ProductAdmin from './components/ProductAdmin';\n// import LogIn from './components/auth/LogIn';\n// import Register from './components/auth/Register';\n// import ForgotPassword from './components/auth/ForgotPassword';\n// import ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\n// import ChangePassword from './components/auth/ChangePassword';\n// import ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\n// import Welcome from './components/auth/Welcome';\n// import CsvTable from './components/CSVtablepage'\nimport Temp from './components/temp'\n\n// import Sample from './components/Sample';\n// import MainConsole from './components/mainConsole'\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth} from 'aws-amplify';\n// library.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n    note:[]\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {      \n      \n      // const data = await API.graphql(graphqlOperation(query))\n      // alert(JSON.stringify(data));\n\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(\"ttttt\");\n      const user = await Auth.currentAuthenticatedUser();\n      // alert(`Hi ${user}!!`)\n      this.setUser(user);\n\n    } catch(error) {\n      if (error !== 'No current user') {\n        alert(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar logined={this.state.isAuthenticated} auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => (this.state.isAuthenticated?(<Redirect to=\"/mainconsole\" />):(<Home {...props} auth={authProps} />))}/>\n              {/* <Route exact path=\"/products\" render={(props) => (this.state.isAuthenticated?(<Products {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n              {/* <Route exact path=\"/wordsetting\" render={(props) => (this.state.isAuthenticated?(<WordSetting {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n              {/* <Route exact path=\"/csv\" render={(props) => <CsvTable {...props} auth={authProps} />} /> */}\n               <Route exact path=\"/temp\" render={(props) => <Temp {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} /> */}\n              {/* <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} /> */}\n              {/* <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n              <Route exact path=\"/mainconsole\" render={(props) => <MainConsole {...props} auth={authProps} />} />\n              <Route exact path=\"/Sample\" render={(props) => <Sample {...props} auth={authProps} />} /> */} */}\n            </Switch>\n            \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      AWSS3: {\n          bucket: 'verdemo', //REQUIRED -  Amazon S3 bucket\n          region: 'ap-northeast-2', //OPTIONAL -  Amazon service region\n      }\n  },\n    \"aws_project_region\": \"ap-northeast-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://6rha74vb45elpo6wue7tw2ladm.appsync-api.ap-northeast-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-53xamyyb3vagfcwl5xylphc43u\"\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}