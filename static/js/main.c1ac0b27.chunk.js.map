{"version":3,"sources":["components/Navbar.js","components/utility/graphql.js","components/Home.js","components/utility/AboutFunction.js","components/utility/confirmreq.js","components/utility/deleteListComp.js","components/auth/academyInfo.js","components/WordSetting.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","withStyles","theme","root","color","palette","getContrastText","backgroundColor","&:hover","Button","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","window","location","href","error","console","log","message","stop","react_default","createElement","style","position","width","className","role","aria-label","src","height","alt","id","this","logined","Link","to","Component","queryCstudent","studentsWords","queryCword","createWord","updateWord","deleteWord","Home","_getStudentData","API","graphql","graphqlOperation","then","data","alert","JSON","stringify","listMyTypes","items","componentDidMount","origin","destination","direction","index","react_fullpage_default","scrollOverflow","sectionsColor","onLeave","bind","afterLoad","render","_ref2","state","fullpageApi","align","padding","scrollAnimation_min_default","animateIn","animateOnce","IconTabs","React","TabPanel","children","value","other","Object","objectWithoutProperties","Typography","assign","component","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","flexGrow","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","Paper","elevation","square","Tabs","centered","onChange","newValue","variant","indicatorColor","textColor","Tab","icon","lib_default","axis","onChangeIndex","AboutFunction","open","setOpen","handleClose","iconstyle","IconButton","onClick","ContactSupport_default","Dialog","onClose","aria-describedby","DialogContent","DialogContentText","content","DialogActions","autoFocus","Confirm","button","DialogTitle","title","send","DeleteListComp","dense","updateDeleted","_ref","asyncToGenerator","mark","query","input","r","NotificationManager","success","IDBIndex","reload","_x","apply","arguments","handleAllDelete","_callee2","_context2","deleted","map","d","i","words","temp","find","x","input_query","_x2","handleDeletefor","_ref3","_callee3","word","man","_context3","_x3","_x4","react_notifications_lib","List","CommonWords","secondary","common","one","push","name","ListItem","ListItemAvatar","Avatar","Description_default","ListItemText","primary","ListItemSecondaryAction","display","forEach","handleDelete","info","address","grade","class","config","require","moment","extendMoment","originalMoment","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","WordSetting","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchProducts","res","products","axios","get","api","invokeUrl","sent","setState","t0","handleChange","addchecked","addexpanded","deletechecked","deleteexpended","csvTojson","sender","result","reader","FileReader","target","files","readAsText","onload","lines","split","headers","length","obj","currentline","j","e","File","replace","type","handleFileInput","S3","uploadFile","bucketName","dirName","region","accessKeyId","secretAccessKey","SaveWords","catch","err","tempD","Math","random","toString","substring","key","link","_getWordData","_callee4","_context4","tt","filter","wordSet","_makestudenttree","AllStu","treeSet","academy","g","classcomp","c","label","student","temptreeSet","parse","nowGrade","nowClass","studentInfo","percentage","assignment","gradeindex","findIndex","classindex","_callee5","_context5","selectWord","w","selectedWord","includes","toConsumableArray","addSendData","indexOf","wordset","select","_ref6","_callee6","sw","temp2","ass","_context6","warning","abrupt","haveto","due","calendarValue","start","format","end","oncalendarSelect","states","renderSelectionValue","fontSize","_callee7","_context7","Promise","all","loading","handleChangeMultiple","handleHavetoChange","today","newproduct","AddOrDelete","range","clone","subtract","_this2","react","WordSetting_TabPanel","right","marginBottom","marginTop","accept","htmlFor","marginLeft","FormControl","InputLabel","Select","labelId","multiple","Input","renderValue","selected","Chip","MenuItem","index_browser_default","nodes","checked","expanded","onCheck","onExpand","icons","check","index_es","uncheck","halfCheck","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","marginRight","react_custom_scrollbars_lib","borderRadius","margin","TextField","InputLabelProps","shrink","DateRangePicker_default","onSelect","singleDateRange","borderWidth","borderColor","deleteexpanded","alignItems","CommonWordsView","allstu","commonWords_id","perword","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","inputs","document","getElementsByClassName","classList","contains","remove","hasOwnProperty","username","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","handleSubmit","user","Validate","objectSpread","signIn","history","onInputChange","defineProperty","onSubmit","placeholder","components_FormErrors","App","isAuthenticated","isAuthenticating","note","authenticated","currentSession","currentAuthenticatedUser","authProps","HashRouter","Navbar_Navbar","Switch","Route","exact","path","Redirect","Home_Home","WordSetting_WordSetting","auth_LogIn","Boolean","hostname","match","Amplify","configure","mandatorySignIn","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","Storage","AWSS3","bucket","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1ac0b27.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport { Auth } from 'aws-amplify';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText('rgba(90, 105, 191,1.0)'),\n    backgroundColor: 'rgba(90, 105, 191,1.0)',\n    '&:hover': {\n      backgroundColor: 'rgba(90, 105, 191,0.95)',\n      color: '#fff',\n    },\n  },\n}))(Button);\n\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n      window.location.href=\"/\";\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav style={{backgroundColor:'#fff',position:'absolute',width:'100%'}} className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          {\n            this.props.logined?\n\n            <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <div className=\"link-1\"> \n                  <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n                </div>\n              </Link>\n              <Link to=\"/wordsetting\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"manual.png\"  width=\"20\" height=\"20\" alt=\"w\"/>\n                </div>\n              </Link>\n              {/* <Link to=\"/products\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"group.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n              {/* <Link to=\"/csv\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n         \n        </div>\n        \n        \n        :\n\n          <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n              </Link>\n          </div>\n         \n          }\n          \n\n          {/* <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                     <Link to=\"/register\">\n                     <Button style={{borderColor:'#ddd',borderWidth:2,color:'#ddd'}} variant=\"outlined\">Register</Button>\n                    </Link>\n                    <Link to=\"/login\">\n                      <ColorButton style={{marginLeft:10}}  variant=\"contained\" disableElevation>\n                        Log in\n                      </ColorButton>\n                    </Link>                  \n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <Link to=\"/\">\n                    <ColorButton style={{marginLeft:10}} variant=\"contained\" onClick={this.handleLogOut} disableElevation>\n                    Logout\n                  </ColorButton>\n                 </Link>\n                 \n                )}\n              </div>\n            </div>\n          </div> */}\n        </div>\n      </nav>\n\n\n    )\n  }\n}\n","export const queryCall=`\r\nquery list{\r\n  listMyTypes{\r\n    items{\r\n      id type name grade class link todo words{\r\n        id name link percentage haveto\r\n      } record{id month day words etc}}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const queryCstudent=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}},limit:100){\r\n    items{\r\n      id type name grade class link todo haveto due \r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n      test{id name score month day}\r\n      homework{id name assignment done month day}\r\n    }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const studentsWords = `query list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}}){\r\n    items{\r\n      id name words{id name link due haveto deleted}\r\n    }\r\n}}` //for deleteWord\r\n\r\n\r\nexport const queryCteacher=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"teacher\"}}){\r\n    items{\r\n      id type name grade class\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const queryCword=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"word\"}}  limit:100){\r\n    items{\r\n      id name link haveto due deleted\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const createSample= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto} \r\n      record{id month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\n\r\n// id: Math.random().toString(36).substring(7),\r\n// type: \"sample\",\r\n// name: this.state.username,\r\n// address:this.state.company,\r\n// words:[{\r\n//   id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n//   name:\"2020 VOCA.json\",\r\n//   link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n//   haveto:100,\r\n//   due: due\r\n// },{\r\n// id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n// name:\"2020 VOCA2.json\",\r\n// link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n// haveto:100,\r\n// due: due\r\n// }],\r\n// record:record\r\n// });\r\n\r\n\r\nexport const createStudent= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\nexport const createStudent2= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto}\r\n      record{\r\n        id bookid month day words etc\r\n      }\r\n  }\r\n}\r\n`;\r\nexport const createStudent3= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\nexport const createWord = `mutation createMyType($input: CreateMyTypeInput!) {\r\n    createMyType(input: $input) {\r\n        id\r\n        type\r\n        name\r\n        grade\r\n        link\r\n        address\r\n        deleted\r\n    }\r\n  }\r\n  `;// address => 기간  grade => have to\r\n\r\n  export const updateAll = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        name\r\n        grade\r\n    }\r\n  }\r\n  `;\r\n\r\n  export const updateWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        words{name link due haveto deleted}\r\n    }\r\n  }\r\n  `;\r\n  export const updateHomework = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      homework{id name assignment done month day}\r\n    }\r\n  }\r\n  `;\r\n  export const updateTestRecord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      test{id name score month day}\r\n    }\r\n  }\r\n  `;\r\n  export const deleteWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        deleted\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  export const deleteWordOrigin = `mutation deleteMyType($input: DeleteMyTypeInput!) {\r\n    deleteMyType(input: $input) {\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"465tq4\"\r\n\t// \t\thomework:{name:\"숙제1\" assignment:50 done:20 date:\"20/02/13\"}\r\n  //   }){\r\n  //     homework{name assignment done date}\r\n  //   }\r\n  // }   \r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:[{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"},\r\n  //     {id:\"sdfgsdfg\"month:2,day:3,words:\"test.json\"},\r\n  //     {id:\"strwebsf\"month:2,day:2,words:\"test.json\"},]\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"}\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"test.json\"\r\n  //     type:\"word\"\r\n  //     name:\"test.json\"\r\n  //     link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //     words:[\r\n  //       {\r\n  //         id: null\r\n  //         name: null\r\n  //         link:null\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name link words{id name link}\r\n  //   }\r\n  // }  \r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"oatem28pmc\"\r\n  //     type:\"student\"\r\n  //     name:\"이병건\"\r\n  //     grade:\"m1\"\r\n  //     percentage:50,\r\n  //     words:[\r\n  //       {\r\n  //         id: \"test.json\"\r\n  //         name: \"test.json\"\r\n  //         link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name grade percentage words{id name link}\r\n  //   }\r\n  // }\r\n\r\n\r\n// mutation create{\r\n//   createToNote(input:{\r\n//     name:\"note\"\r\n//   \tdescription:\"전체숙제\"\r\n//     grades:[{id:\"01\", name:\"중등 1학년\", students:[\r\n//       {id:\"011\" name:\"홍길동\",percentage:86,assignment:\"숙제\"},\r\n//       {id:\"012\" name:\"이민정\",percentage:30,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"02\", name:\"중등 2학년\", students:[\r\n//       {id:\"021\" name:\"박보영\",percentage:100,assignment:\"숙제\"},\r\n//       {id:\"022\" name:\"신민아\",percentage:60,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"03\", name:\"중등 3학년\", students:[\r\n//       {id:\"031\" name:\"이병건\",percentage:50,assignment:\"숙제\"},\r\n//       {id:\"032\" name:\"주호민\",percentage:90,assignment:\"숙제\"}\r\n//     ]}  \r\n//     ]\r\n//   }){\r\n//     id name description grades{id name students{\r\n//       id name percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n// mutation {\r\n//   deleteToNote (\r\n//     input:{\r\n//       id:\"48f61355-996a-4a46-8638-3799aca806c7\"\r\n//     }\r\n//   ) {\r\n//   \tid\r\n//   }\r\n// }\r\n\r\n// const nodes = [{\r\n//   value: 'mid',\r\n//   label: '중학교',\r\n//   children: [\r\n//       { value: 'm1', label: '1학년' },\r\n//       { value: 'm2', label: '2학년' },\r\n//       { value: 'm3', label: '3학년' },\r\n//   ],\r\n// },{\r\n//   value: 'high',\r\n//   label: '고등학교',\r\n//   children: [\r\n//     { value: 'h1', label: '1학년' },\r\n//     { value: 'h2', label: '2학년' },\r\n//     { value: 'h3', label: '3학년' },\r\n//   ],\r\n// }];\r\n\r\n\r\n\r\n\r\n// mutation create{\r\n//   updateToNote(input:{\r\n//     id:\"9957304a-191c-4f7d-b2a5-192ba1151717\"\r\n//     grades:[{ id:\"01\"\r\n//       students:[{id:\"011\" percentage: 30 assignment: \"string\"}]}]    \r\n//   }){\r\n//     id grades{id students{\r\n//       id percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n\r\n// mutation create{\r\n// \tcreateMyType(input:{\r\n//     \ttype:\"word\"\r\n//     \tname:\"중3단어\"\r\n// \t\t\tgrade: \"m3\"\r\n//     \twords:\"단어\"\r\n//   }){\r\n// \ttype name grade words\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// input CreateToNoteInput {\r\n// \tid: ID\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [GradeInput]\r\n// }\r\n\r\n// input DeleteToNoteInput {\r\n// \tid: ID\r\n// }\r\n\r\n// type Grade {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [Student]\r\n// }\r\n\r\n// input GradeInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input ModelBooleanFilterInput {\r\n// \tne: Boolean\r\n// \teq: Boolean\r\n// }\r\n\r\n// input ModelFloatFilterInput {\r\n// \tne: Float\r\n// \teq: Float\r\n// \tle: Float\r\n// \tlt: Float\r\n// \tge: Float\r\n// \tgt: Float\r\n// \tcontains: Float\r\n// \tnotContains: Float\r\n// \tbetween: [Float]\r\n// }\r\n\r\n// input ModelIDFilterInput {\r\n// \tne: ID\r\n// \teq: ID\r\n// \tle: ID\r\n// \tlt: ID\r\n// \tge: ID\r\n// \tgt: ID\r\n// \tcontains: ID\r\n// \tnotContains: ID\r\n// \tbetween: [ID]\r\n// \tbeginsWith: ID\r\n// }\r\n\r\n// input ModelIntFilterInput {\r\n// \tne: Int\r\n// \teq: Int\r\n// \tle: Int\r\n// \tlt: Int\r\n// \tge: Int\r\n// \tgt: Int\r\n// \tcontains: Int\r\n// \tnotContains: Int\r\n// \tbetween: [Int]\r\n// }\r\n\r\n// enum ModelSortDirection {\r\n// \tASC\r\n// \tDESC\r\n// }\r\n\r\n// input ModelStringFilterInput {\r\n// \tne: String\r\n// \teq: String\r\n// \tle: String\r\n// \tlt: String\r\n// \tge: String\r\n// \tgt: String\r\n// \tcontains: String\r\n// \tnotContains: String\r\n// \tbetween: [String]\r\n// \tbeginsWith: String\r\n// }\r\n\r\n// type ModelToNoteConnection {\r\n// \titems: [ToNote]\r\n// \tnextToken: String\r\n// }\r\n\r\n// input ModelToNoteFilterInput {\r\n// \tid: ModelIDFilterInput\r\n// \tname: ModelStringFilterInput\r\n// \tdescription: ModelStringFilterInput\r\n// \tand: [ModelToNoteFilterInput]\r\n// \tor: [ModelToNoteFilterInput]\r\n// \tnot: ModelToNoteFilterInput\r\n// }\r\n\r\n// type Mutation {\r\n// \tcreateToNote(input: CreateToNoteInput!): ToNote\r\n// \tupdateToNote(input: UpdateToNoteInput!): ToNote\r\n// \tUpdateGrade(input: UpdateGradeInput!): [Grade]\r\n// \tUpdateStudent(input: UpdateStudentInput!): Student\r\n// \tdeleteToNote(input: DeleteToNoteInput!): ToNote\r\n// \taddGrade(input: [GradeInput]): [Grade]\r\n// \taddStudent(input: [StudentInput]): Student\r\n// }\r\n\r\n// type Query {\r\n// \tgetToNote(id: ID!): ToNote\r\n// \tlistToNotes(filter: ModelToNoteFilterInput, limit: Int, nextToken: String): ModelToNoteConnection\r\n// }\r\n\r\n// type Student {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input StudentInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// type Subscription {\r\n// \tonCreateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"createToNote\"])\r\n// \tonUpdateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"updateToNote\"])\r\n// \tonDeleteToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"deleteToNote\"])\r\n// }\r\n\r\n// type ToNote {\r\n// \tid: ID!\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [Grade]\r\n// }\r\n\r\n// input UpdateGradeInput {\r\n// \tid: ID\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input UpdateStudentInput {\r\n// \tid: ID!\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input UpdateToNoteInput {\r\n// \tid: ID!\r\n// \tgrades: [GradeInput]\r\n// }","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './utility/graphql';\n\nexport default class Home extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \n      alert(JSON.stringify(data.data.listMyTypes.items))\n    })\n  }\n  componentDidMount=()=>{\n    this._getStudentData()\n  }\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"#fff\", \"#fff\", \"#fff\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div align=\"center\" className=\"section section1\">\n                <div style={{padding:80}} >\n                <ScrollAnimation animateIn='fadeIn'animateOnce={false}>\n\n                <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n                </ScrollAnimation>\n                  \n                  <img style={{height:400}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n                </div>\n              </div>\n              <div className=\"section\">\n              <div style={{height:700}} align=\"center\" >\n                    <img style={{height:500}} src=\"선생님효과.png\" alt=\"teacher\"/>\n              </div>\n              </div>\n              <div className=\"section\">\n                <IconTabs/>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n  \nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n\n    },\n  });\n \nfunction IconTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const handleChangeIndex = index => {\n        setValue(index);\n      };\n    return (\n        <div >\n      <Paper elevation={0} square className={classes.root}>\n        <Tabs\n        centered\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<img width={100} height={100} src=\"1.png\" alt=\"11111\" />}  {...a11yProps(0)} aria-label=\"phone\" />\n          <Tab icon={<img width={100} height={100} src=\"2.png\" alt=\"22222\" />}  {...a11yProps(1)} aria-label=\"favorite\" />\n          <Tab icon={<img width={100} height={100} src=\"3.png\" alt=\"33333\" />}  {...a11yProps(2)} aria-label=\"person\" />\n        </Tabs>\n      </Paper>\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect1.png\" alt=\"effect1\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect2.png\" alt=\"effect2\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect3.png\" alt=\"effect3\" />\n            </div>\n      </TabPanel>\n      </SwipeableViews>\n      </div>\n    );\n  }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nexport default function AboutFunction(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div style={props.style}>\r\n          <div style={props.iconstyle}>\r\n        <IconButton onClick={handleClickOpen} aria-label=\"delete\">\r\n          <ContactSupportIcon style={{ color: '#5a69bf' }} />\r\n        </IconButton>\r\n            </div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {props.content}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Confirm(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    props.send();\r\n    setOpen(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.button}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>handleSend()} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { Paper } from '@material-ui/core';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Confirm from './confirmreq'\r\n\r\nexport default function DeleteListComp(props) {\r\n  const [dense, setDense] = React.useState(false);\r\n\r\n\r\n\r\nconst updateDeleted = async(query) =>{\r\n    await API.graphql(graphqlOperation(graphql.updateWord, {input: query})).then(r =>{\r\n        NotificationManager.success('delete Success', `${IDBIndex} 단어장이 삭제 되었습니다`,3000);\r\n    });\r\n    window.location.reload();\r\n}\r\n\r\nconst handleAllDelete = async(id) =>{\r\n\r\n        await API.graphql(graphqlOperation(graphql.deleteWord, {input: {\r\n            id: id,\r\n            deleted:true\r\n          }}))\r\n          \r\n        await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n            data.data.listMyTypes.items.map((d,i)=>{\r\n                if(d.words !==null){\r\n                    let temp = d.words.find(x=>x.id !== id);\r\n                    let input_query={\r\n                        id: d.id,\r\n                        words:temp \r\n                    }\r\n                    updateDeleted(input_query);\r\n                }\r\n            })\r\n        });\r\n}\r\n\r\nconst handleDeletefor = async(word,man) =>{\r\n\r\n  await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n    // alert(JSON.stringify(data))\r\n      data.data.listMyTypes.items.map((d,i)=>{\r\n        if(d.id ===man){\r\n          if(d.words !==null){\r\n            let temp = d.words.find(x=>x.id !== word);\r\n            let input_query={\r\n                id: d.id,\r\n                words:temp \r\n            }\r\n            // alert(JSON.stringify(input_query))\r\n            updateDeleted(input_query);\r\n        }\r\n        }\r\n      })\r\n  });\r\n}\r\n\r\nconst handleDelete = (id,data) =>{\r\n    data.forEach(d =>{\r\n      handleDeletefor(id,d.id)\r\n    })\r\n}\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n        <NotificationContainer/>\r\n            <List dense={dense}>\r\n            {\r\n              props.CommonWords.map((data,i)=>{\r\n                  let secondary = [];\r\n                   data.common.map(one=> secondary.push(` ${one.name} `))\r\n                    return(\r\n                        <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <DescriptionIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                          primary={data.name}\r\n                          secondary={secondary}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <div style={{display:'flex'}}>\r\n                            <Confirm button=\"delete\" title=\"delete\" content={`${secondary}학생의 ${data.name}을 삭제하겠습니까?`} send={()=>handleDelete(data.id,data.common)}/>\r\n                            <Confirm button=\"delete All\" title=\"delete\" content={` ${data.name}을 가진 모든 학생에게서 ${data.name}을 삭제하겠습니까?`} send={()=>handleAllDelete(data.id)}/>\r\n                          </div>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    );\r\n                })      \r\n            }\r\n            </List>\r\n            </Paper>\r\n  );\r\n}\r\n\r\n                      \r\n                        // <div style={{display:'flex'}}>\r\n                        //     <div style={{width:80,margin:10}}>\r\n                        //         {data.name}\r\n                        //     </div>\r\n                        //     <div style={{display:'flex'}}>\r\n                        //         {\r\n                        //             data.common.map((one,i)=>{\r\n                        //                 return(\r\n                        //                 <div style={{margin:10}}>{one.name}</div>\r\n                        //                 );\r\n                        //             })\r\n                        //         }\r\n                        //     </div>\r\n                        // </div>","export const info={\r\n    name:\"정인학원\",\r\n    address:\"의왕시오전동\",\r\n    grade:[14,15,16,17,18],\r\n    class:[\"c\",\"b\",\"a\",\"s\"]\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport DateRangePicker from \"react-daterange-picker\";\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport originalMoment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DeleteListComp from './utility/deleteListComp'\r\nimport * as academy from './auth/academyInfo'\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst config = require('../config.json');\r\nconst moment = extendMoment(originalMoment);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default class WordSetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const today = moment();\r\n    this.state = { \r\n      value:0,  \r\n      newproduct: null,\r\n      products: [],\r\n      \r\n      addchecked: [],\r\n      addexpanded: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],\r\n      selectedWord:[],\r\n      AddOrDelete:true,\r\n      select:[],\r\n      calendarValue: moment.range(today.clone().subtract(1, \"days\"), today.clone())//calendar\r\n     };\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n\r\n\r\n  csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    let name = sender.target.files[0].name\r\n\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            let e = new File([JSON.stringify(result)], name.replace('.csv','.json'), {type: \"application/json\"})\r\n            this.handleFileInput(e);\r\n            // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\r\n            // var dlAnchorElem = document.createElement('a');\r\n            // dlAnchorElem.setAttribute(\"href\",dataStr);\r\n            // dlAnchorElem.setAttribute(\"download\", \"newworkbook.json\");\r\n            // dlAnchorElem.click();\r\n  }\r\n}\r\n  // ▽\r\n  handleFileInput =async(e)=>{\r\n      await S3.uploadFile(e, {\r\n          bucketName: config.S3.bucketName,\r\n          dirName:config.S3.dirName,\r\n          region: config.S3.region,\r\n          accessKeyId: config.S3.accessKeyId,\r\n          secretAccessKey: config.S3.secretAccessKey,\r\n      }).then( d =>{\r\n          this.SaveWords(d);\r\n        }).catch(err =>alert(err));\r\n  }\r\n  // ▽       \r\n\r\n  SaveWords = async(tempD)=>{\r\n    const input_query={\r\n      id: Math.random().toString(36).substring(7),\r\n      type: \"word\",\r\n      name: tempD.key.replace(`${config.S3.dirName}/`,\"\"),\r\n      grade:null, // haveto\r\n      link: tempD.location,\r\n      address:null,\r\n      deleted:false\r\n    };\r\n    // alert(JSON.stringify(input_query))\r\n    NotificationManager.success('Upload Success', '단어장을 저장하였습니다',3000); \r\n    await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(()=>\r\n      this._getWordData()\r\n    );\r\n  }\r\n  // ▽\r\n  _getWordData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCword)).then(data =>{\r\n   \r\n    let tt = data.data.listMyTypes.items.filter(x=> x.deleted === null || x.deleted ===false);\r\n    // alert(JSON.stringify(tt))\r\n      this.setState({wordSet:tt})\r\n    })\r\n  }\r\n \r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectWord=(w)=>{\r\n        if(this.state.selectedWord.includes(w) === false){\r\n            this.setState({\r\n                selectedWord: [...this.state.selectedWord, w]\r\n            });\r\n        }else{\r\n            this.setState({selectedWord: this.state.selectedWord.filter(function(word) { \r\n                return word !== w\r\n            })});\r\n        }  \r\n  }\r\n\r\n  addSendData = () =>{\r\n    \r\n    this.state.AllStu.map((student, i)=>{    \r\n        if(this.state.addchecked.indexOf(student.value) !== -1){ \r\n\r\n              let wordset = this.state.wordSet\r\n\r\n            this.state.select.map(async(sw,i)=>{//선택된 단어장\r\n\r\n \r\n                let temp = student.words!==null?student.words.findIndex(x => x.label === sw):-2\r\n                let temp2 = this.state.wordSet.findIndex(x => x.name === sw)\r\n\r\n              if(temp!==-1&&temp!==-2){\r\n                    NotificationManager.warning('Upload Failed', `${student.label}이 이미 ${sw}을 가지고 있습니다.`,3000);\r\n                    return \"\";\r\n                }\r\n              else if(temp2 !== -1){\r\n\r\n                  wordset[temp2].haveto = this.state.haveto;\r\n                  wordset[temp2].due = `${this.state.calendarValue.start.format(\"YYYY-MM-DD\")}/${this.state.calendarValue.end.format(\"YYYY-MM-DD\")}`\r\n                  const ass = temp===-2?[wordset[temp2]]:student.words.concat(wordset[temp2])\r\n\r\n                  const input_query={\r\n                    id: student.value,\r\n                    words: ass,\r\n                  };\r\n\r\n                await API.graphql(graphqlOperation(graphql.updateWord, {input: input_query})).then(data =>{\r\n                     NotificationManager.success('Upload Success', `${student.label}에게 ${sw}을 업로드 하였습니다.`,3000);\r\n                })\r\n                }else return 0\r\n              })\r\n\r\n        }else return 0;\r\n    })\r\n  }\r\n  \r\n  oncalendarSelect = (calendarValue, states) => {\r\n    this.setState({ calendarValue, states });\r\n  };//calendar\r\n\r\n\r\n\r\n  renderSelectionValue = () => {\r\n    return (\r\n      <div style={{padding:25}}>\r\n        <div id=\"calendar\" style={{display:'flex'}}>\r\n          <strong>Start    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.start.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n        <div style={{display:'flex'}}>\r\n          <strong>End    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.end.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };//calendar\r\n\r\n  \r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData(), this._getWordData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n  handleChangeMultiple = event => {\r\n    // alert(event.target.value)\r\n    this.setState({select:event.target.value});\r\n  };\r\n\r\n  handleHavetoChange = event => {\r\n    this.setState({haveto:event.target.value});\r\n  };\r\n\r\n  render() {\r\n    alert(\"zzzz\")\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n\r\n       \r\n\r\n      <Paper elevation={0} position=\"static\">\r\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"단어장 추가\" {...this.a11yProps(0)} />\r\n          <Tab label=\"단어장 삭제\" {...this.a11yProps(1)} />\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={this.state.value} index={0}>\r\n        <div>\r\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex'}}>\r\n\r\n        \r\n            <div style={{width:\"30%\"}}>\r\n\r\n\r\n            <div style={{marginBottom:50,display:'flex'}}>\r\n            <div style={{marginTop:15}}>\r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\"  name=\"file\" onChange={e => this.csvTojson(e)} accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  +\r\n                </Button>\r\n              </label>\r\n            </div>\r\n            \r\n            <div id=\"selecter\" style={{width:\"50%\",marginLeft:10}}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel id=\"demo-mutiple-chip-label\">select</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-chip-label\"\r\n            id=\"demo-mutiple-chip\"\r\n            multiple\r\n            value={this.state.select}\r\n            onChange={event =>this.handleChangeMultiple(event)}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            renderValue={selected => (\r\n              <div>\r\n                {\r\n                selected.map((w,i) => (\r\n                   <Chip\r\n                   key={i}\r\n                   label={w.replace('.json','')}\r\n                 />\r\n                ))\r\n                }\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >{this.state.wordSet.map(w => (\r\n            <MenuItem key={w.id} value={w.name}>\r\n              {w.name.replace('.json','')}\r\n            </MenuItem>\r\n          ))}\r\n          </Select>\r\n        </FormControl>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.addchecked}\r\n                expanded={this.state.addexpanded}\r\n                onCheck={checked =>{ this.setState({ addchecked:checked })}}\r\n                onExpand={expanded =>{ this.setState({ addexpanded:expanded })} }\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />             \r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"100%\",display:'flex'}} >\r\n              <div style={{marginRight:100}}>\r\n\r\n                <div>\r\n                  <strong>WordBook</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                     {//if selected, print that\r\n                          this.state.select.map((word,i)=>{\r\n                            return(\r\n                              <Chip\r\n                                style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                key={word}\r\n                                label={word.replace('.json','')}\r\n                              />\r\n                            );\r\n                        })\r\n                    }\r\n                  </Scrollbars>\r\n                  \r\n                </div>\r\n\r\n                <div>\r\n                  <strong>Students</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                  {\r\n                      this.state.AllStu.map((student, i)=>{    \r\n                          if(this.state.addchecked.indexOf(student.value) !== -1){\r\n                              return(\r\n                                <Chip\r\n                                  style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                  key={student.label}\r\n                                  label={student.label}\r\n                                />\r\n                          );\r\n                          }\r\n                          return \"\";\r\n                      })\r\n                      }\r\n                  </Scrollbars>\r\n                  \r\n                </div> \r\n\r\n                <div style={{ height: 80,width: 300}}>\r\n                  <strong>Have to</strong>\r\n                  <div>\r\n                      <TextField\r\n                        value={this.state.haveto}\r\n                        onChange={this.handleHavetoChange}\r\n                        id=\"outlined-number\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n\r\n                </div>  \r\n                <div>\r\n                  <div>{this.renderSelectionValue()}</div>\r\n                  <div>\r\n                    <DateRangePicker\r\n                      value={this.state.calendarValue}\r\n                      onSelect={this.oncalendarSelect}\r\n                      singleDateRange={true}\r\n                    />\r\n                  \r\n                </div>\r\n                <div>\r\n                        <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:300}} onClick={()=>{this.addSendData()}}>\r\n                            send\r\n                        </Button>\r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n      <TabPanel value={this.state.value} index={1}>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n\r\n            <div style={{width:\"30%\"}}>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.deletechecked}\r\n                expanded={this.state.deleteexpanded}\r\n                onCheck={checked => this.setState({ deletechecked:checked })}\r\n                onExpand={expanded => this.setState({ deleteexpanded:expanded })}\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />             \r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                    <CommonWordsView wordSet={this.state.wordSet} allstu={this.state.AllStu} deletechecked={this.state.deletechecked}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n\r\n        </div>\r\n       \r\n\r\n\r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CommonWordsView(props) {\r\n    let CommonWords = [];\r\n    let commonWords_id =[];\r\n\r\n    props.allstu.map((student, i)=>{                            \r\n        if(props.deletechecked.indexOf(student.value) !== -1){\r\n            if(student.words !== null){\r\n            student.words.map((perword,i)=>{\r\n              if(props.wordSet.findIndex(x=>x.id===perword.id)!==-1){ //delete되지 않은 단어인가?  맞다       \r\n                if(CommonWords.length >0){//맨 처음 push하는 것인가? 아니다\r\n                    CommonWords.map((c,i)=>{\r\n                        \r\n                          if(c.id === perword.id){ // 해당 단어장이 이미 있는가? 없다\r\n                            CommonWords[i].common.push({name:student.label, id:student.value})\r\n                            }\r\n                            else if(commonWords_id.includes(perword.id)===false){// 해당 단어장이 이미 있는가? 있다\r\n                                CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                                commonWords_id.push(perword.id);\r\n                            } \r\n                        \r\n                    })\r\n                }else if(CommonWords.length === 0){//맨 처음 push하는 것인가? 맞다\r\n                    CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                    commonWords_id.push(perword.id);\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n    })\r\n    \r\n    return (\r\n      <Scrollbars style={{height:500}}>\r\n          <div style={{width:\"80%\"}}><DeleteListComp commonWords_id={commonWords_id} CommonWords={CommonWords}/></div>\r\n      </Scrollbars>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\nimport Paper from '@material-ui/core/Paper';\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\");\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <div style={{backgroundColor:'#fff'}}>\n      <div style={{height:150}}/>\n      <section className=\"section auth\">\n        <div style={{display:'flex'}}  className=\"container\">\n          <div style={{width:'50%'}}>\n            <img src=\"secure.jpg\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\n          \n          </div>\n       \n          <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\n          <form onSubmit={this.handleSubmit}>\n            <h1>Login</h1>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>User ID</p>\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>Password</p>\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <FormErrors formerrors={this.state.errors} />\n                <button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </Paper>\n        </div>\n      </section>\n      <div style={{height:150}}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport WordSetting from './components/WordSetting';\n// import Products from './components/Products';\n// import ProductAdmin from './components/ProductAdmin';\nimport LogIn from './components/auth/LogIn';\n// import Register from './components/auth/Register';\n// import ForgotPassword from './components/auth/ForgotPassword';\n// import ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\n// import ChangePassword from './components/auth/ChangePassword';\n// import ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\n// import Welcome from './components/auth/Welcome';\n// import CsvTable from './components/CSVtablepage'\n\n// import Sample from './components/Sample';\n// import MainConsole from './components/mainConsole'\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth} from 'aws-amplify';\n// library.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n    note:[]\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {      \n      \n      // const data = await API.graphql(graphqlOperation(query))\n      // alert(JSON.stringify(data));\n\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(\"ttttt\");\n      const user = await Auth.currentAuthenticatedUser();\n      // alert(`Hi ${user}!!`)\n      this.setUser(user);\n\n    } catch(error) {\n      if (error !== 'No current user') {\n        alert(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar logined={this.state.isAuthenticated} auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => (this.state.isAuthenticated?(<Redirect to=\"/mainconsole\" />):(<Home {...props} auth={authProps} />))}/>\n              {/* <Route exact path=\"/products\" render={(props) => (this.state.isAuthenticated?(<Products {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n              <Route exact path=\"/wordsetting\" render={(props) => (this.state.isAuthenticated?(<WordSetting {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} />\n               {/* <Route exact path=\"/csv\" render={(props) => <CsvTable {...props} auth={authProps} />} /> */}\n              {/* <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} /> */}\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n              <Route exact path=\"/mainconsole\" render={(props) => <MainConsole {...props} auth={authProps} />} />\n              <Route exact path=\"/Sample\" render={(props) => <Sample {...props} auth={authProps} />} /> */} */}\n            </Switch>\n            \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      AWSS3: {\n          bucket: 'verdemo', //REQUIRED -  Amazon S3 bucket\n          region: 'ap-northeast-2', //OPTIONAL -  Amazon service region\n      }\n  },\n    \"aws_project_region\": \"ap-northeast-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://6rha74vb45elpo6wue7tw2ladm.appsync-api.ap-northeast-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-53xamyyb3vagfcwl5xylphc43u\"\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}