{"version":3,"sources":["components/Navbar.js","components/Home.js","components/utility/graphql.js","components/utility/editstudent.js","components/utility/perWeekTabs.js","components/utility/detailmorestudent.js","components/utility/totalchart.js","components/utility/expansion.js","components/auth/academyInfo.js","components/utility/AboutFunction.js","components/utility/addstudent.js","components/utility/addTestRecord.js","components/utility/addHomework.js","components/utility/confirmreq.js","components/utility/sendMail.js","components/utility/tableview.js","components/Products.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/utility/deleteListComp.js","components/temp.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","withStyles","theme","root","color","palette","getContrastText","backgroundColor","&:hover","Button","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","window","location","href","error","console","log","message","stop","react_default","createElement","style","position","width","className","role","aria-label","src","height","alt","id","this","logined","Link","to","Component","Home","origin","destination","direction","index","react_fullpage_default","scrollOverflow","sectionsColor","onLeave","bind","afterLoad","render","_ref","state","fullpageApi","align","padding","scrollAnimation_min_default","animateIn","animateOnce","IconTabs","React","TabPanel","children","value","other","Object","objectWithoutProperties","Typography","assign","component","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","flexGrow","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","Paper","elevation","square","Tabs","centered","onChange","newValue","variant","indicatorColor","textColor","Tab","icon","lib_default","axis","onChangeIndex","queryCstudent","studentsWords","queryCword","createStudent","createWord","updateAll","updateWord","updateHomework","updateTestRecord","deleteWord","EditStudent","open","setOpen","_React$useState3","_React$useState4","name","setName","_React$useState5","_React$useState6","grade","setGrade","handleClose","handleFileInput","asyncToGenerator","mark","API","graphql","graphqlOperation","input","then","alert","apply","arguments","thisname","All","find","x","thisgrade","onClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","e","target","autoFocus","margin","label","placeholder","type","fullWidth","DialogActions","AntTabs","borderBottom","indicator","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","fontFamily","join","opacity","&$selected","fontWeightMedium","&:focus","selected","disableRipple","demo1","background","paper","demo2","CustomizedTabs","data","detaila","undefined","detailh","detailt","PhoneAndroid_default","NoteAdd_default","PostAdd_default","perWeekTabs_TabPanel","react_custom_scrollbars_lib","map","ListItem","ListItemIcon","Inbox_default","ListItemText","primary","words","replace","secondary","etc","done","score","average","arr","length","Math","round","reduce","c","Line","react","dx_react_chart_material_ui_es","Path","path","line","arg","y","_ref2","val","curve","curveCatmullRom","Root","display","flexDirection","_ref3","restProps","Label","marginBottom","whiteSpace","_ref4","Item","item","_ref5","compare","_ref6","_ref7","series","point","targetSeries","targetPoint","TotalChart","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCalendar","setState","calendarOpen","toggleCalendarfalse","oncalendarSelect","calendarValue","states","forWeekChart","yyyy","Number","format","mm","dd","record","homework","test","count","weekly","month","week","app","td","moment","m","d","w","perRecord1","perRecord2","perHomework1","perHomework2","perTest1","perTest2","i","subtract","weekOfMonth","isNaN","findIndex","filter","day","assignment","forEach","loading","forDayChart","tendays","push","fordaychart","DayChart","info","perRecord","perHomework","percentage","perTest","daychart","componentDidMount","selection","click","_ref8","targets","_ref9","_this$state","chartData","aria-describedby","DateRangePicker_default","selectionType","onSelect","singleDateRange","valueField","argumentField","seriesComponent","rootComponent","itemComponent","labelComponent","dx_react_chart_es","firstDayOfMonth","clone","startOf","firstDayOfWeek","offset","diff","ceil","date","heading","fontSize","pxToRem","secondaryHeading","text","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","link","main","textDecoration","DetailedExpansionPanel","Tavg","Aavg","TodayAssemble","accumulator","currentValue","AllAssemble","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","styles","index_esm","textAlign","marginLeft","buildStyles","pathColor","ExpansionPanelDetails","totalchart_TotalChart","Divider","ExpansionPanelActions","address","class","AboutFunction","iconstyle","IconButton","ContactSupport_default","content","AddStudent","age","setAge","aclass","setClass","_React$useState7","_React$useState8","handleRegister","input_query","random","toString","substring","r","NotificationManager","success","res","JSON","parse","_callee2","man","_context2","_x","_x2","err","react_notifications_lib","Tooltip","title","arrow","PersonAdd_default","size","buttontitle","float","FormControl","InputLabel","Select","labelId","academy","g","MenuItem","sender","result","reader","FileReader","readAsText","files","onload","lines","split","headers","obj","currentline","j","accept","htmlFor","HandleTestRecord","save","query","stackid","_loop","_context3","includes","Data","listMyTypes","items","arrayObj","delegateYield","pop","stringify","HandleHomework","Confirm","button","send","css","trim","sourceURL","react_html_email_lib","headCSS","cellSpacing","borderTop","lineHeight","data-mc-bar","data-mc-baz","download","descendingComparator","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","key","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","dark","flex","checkeddelete","selectedid","reload","_x3","EnhancedTableToolbar","Selectedid","Selected","num","Toolbar","clsx","defineProperty","Grid","container","justify","placement","Delete_default","FilterList_default","table","border","clip","overflow","top","EnhancedTable","setOrder","setOrderBy","setSelected","setSelectedid","_React$useState9","_React$useState10","page","setPage","_React$useState11","_React$useState12","dense","setDense","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","emptyRows","min","total","today","tableview_EnhancedTableToolbar","TableContainer","Table","newSelecteds","n","newSelectedsid","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","todayAvg","totalAvg","hover","selectedIndex","newSelected","newSelectedid","handleClick","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch_Switch","config","require","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Products","handleChange","addchecked","addexpanded","deletechecked","deleteexpended","fetchProducts","products","axios","get","api","invokeUrl","sent","t0","_makestudenttree","AllStu","treeSet","classcomp","student","temptreeSet","nowGrade","nowClass","Date","getMonth","getDate","Today","Total","studentInfo","todo","gradeindex","classindex","temp","selectgrade","selectclass","_getStudentData","_callee3","Promise","all","handleChangeMultiplegrade","handleChangeMultipleclass","valuetext","handleSliderChange","login","isAuthenticated","newproduct","expanded","todayfilter","totalfilter","_this2","marginTop","Products_TabPanel","right","multiple","Input","renderValue","Chip","deleteIcon","Done_default","OutlinedInput","endAdornment","InputAdornment","labelWidth","Slider","Slider2","Pageview_default","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","inputs","document","getElementsByClassName","classList","contains","remove","hasOwnProperty","username","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","handleSubmit","user","Validate","objectSpread","signIn","history","onInputChange","onSubmit","components_FormErrors","borderWidth","borderColor","DeleteListComp","updateDeleted","IDBIndex","handleAllDelete","deleted","handleDeletefor","word","_x4","List","CommonWords","common","one","ListItemAvatar","Avatar","Description_default","ListItemSecondaryAction","handleDelete","extendMoment","originalMoment","Temp","csvTojson","File","S3","uploadFile","bucketName","dirName","region","accessKeyId","secretAccessKey","SaveWords","catch","tempD","_getWordData","_callee4","_context4","tt","wordSet","_callee5","_context5","selectWord","selectedWord","toConsumableArray","addSendData","wordset","select","_callee6","sw","temp2","ass","_context6","warning","abrupt","haveto","due","start","end","renderSelectionValue","_callee7","_context7","handleChangeMultiple","handleHavetoChange","AddOrDelete","range","temp_TabPanel","borderRadius","InputLabelProps","shrink","CommonWordsView","allstu","commonWords_id","perword","App","isAuthenticating","note","authenticated","currentSession","currentAuthenticatedUser","authProps","HashRouter","Navbar_Navbar","Switch","Route","exact","Redirect","Home_Home","Products_Products","temp_Temp","auth_LogIn","Boolean","hostname","match","Amplify","configure","mandatorySignIn","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","Storage","AWSS3","bucket","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34b90038.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport { Auth } from 'aws-amplify';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText('rgba(90, 105, 191,1.0)'),\n    backgroundColor: 'rgba(90, 105, 191,1.0)',\n    '&:hover': {\n      backgroundColor: 'rgba(90, 105, 191,0.95)',\n      color: '#fff',\n    },\n  },\n}))(Button);\n\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n      window.location.href=\"/\";\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav style={{backgroundColor:'#fff',position:'absolute',width:'100%'}} className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          {\n            this.props.logined?\n\n            <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <div className=\"link-1\"> \n                  <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n                </div>\n              </Link>\n              {/* <Link to=\"/wordsetting\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"manual.png\"  width=\"20\" height=\"20\" alt=\"w\"/>\n                </div>\n              </Link> */}\n              {/* <Link to=\"/products\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"group.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n              {/* <Link to=\"/csv\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n              <Link to=\"/temp\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n         \n        </div>\n        \n        \n        :\n\n          <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n              </Link>\n              <Link to=\"/temp\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n          </div>\n         \n          }\n          \n\n          {/* <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                     <Link to=\"/register\">\n                     <Button style={{borderColor:'#ddd',borderWidth:2,color:'#ddd'}} variant=\"outlined\">Register</Button>\n                    </Link>\n                    <Link to=\"/login\">\n                      <ColorButton style={{marginLeft:10}}  variant=\"contained\" disableElevation>\n                        Log in\n                      </ColorButton>\n                    </Link>                  \n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <Link to=\"/\">\n                    <ColorButton style={{marginLeft:10}} variant=\"contained\" onClick={this.handleLogOut} disableElevation>\n                    Logout\n                  </ColorButton>\n                 </Link>\n                 \n                )}\n              </div>\n            </div>\n          </div> */}\n        </div>\n      </nav>\n\n\n    )\n  }\n}\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport ScrollAnimation from 'react-animate-on-scroll';\n\n\nexport default class Home extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"#fff\", \"#fff\", \"#fff\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div align=\"center\" className=\"section section1\">\n                <div style={{padding:80}} >\n                <ScrollAnimation animateIn='fadeIn'animateOnce={false}>\n\n                <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n                </ScrollAnimation>\n                  \n                  <img style={{height:400}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n                </div>\n              </div>\n              <div className=\"section\">\n              <div style={{height:700}} align=\"center\" >\n                    <img style={{height:500}} src=\"선생님효과.png\" alt=\"teacher\"/>\n              </div>\n              </div>\n              <div className=\"section\">\n                <IconTabs/>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n  \nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n\n    },\n  });\n \nfunction IconTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const handleChangeIndex = index => {\n        setValue(index);\n      };\n    return (\n        <div >\n      <Paper elevation={0} square className={classes.root}>\n        <Tabs\n        centered\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<img width={100} height={100} src=\"1.png\" alt=\"11111\" />}  {...a11yProps(0)} aria-label=\"phone\" />\n          <Tab icon={<img width={100} height={100} src=\"2.png\" alt=\"22222\" />}  {...a11yProps(1)} aria-label=\"favorite\" />\n          <Tab icon={<img width={100} height={100} src=\"3.png\" alt=\"33333\" />}  {...a11yProps(2)} aria-label=\"person\" />\n        </Tabs>\n      </Paper>\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect1.png\" alt=\"effect1\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect2.png\" alt=\"effect2\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect3.png\" alt=\"effect3\" />\n            </div>\n      </TabPanel>\n      </SwipeableViews>\n      </div>\n    );\n  }","export const queryCall=`\r\nquery list{\r\n  listMyTypes{\r\n    items{\r\n      id type name grade class link todo words{\r\n        id name link percentage haveto\r\n      } record{id month day words etc}}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const queryCstudent=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}},limit:100){\r\n    items{\r\n      id type name grade class link todo haveto due \r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n      test{id name score month day}\r\n      homework{id name assignment done month day}\r\n    }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const studentsWords = `query list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}}){\r\n    items{\r\n      id name words{id name link due haveto deleted}\r\n    }\r\n}}` //for deleteWord\r\n\r\n\r\nexport const queryCteacher=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"teacher\"}}){\r\n    items{\r\n      id type name grade class\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const queryCword=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"word\"}}  limit:100){\r\n    items{\r\n      id name link haveto due deleted\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const createSample= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto} \r\n      record{id month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\n\r\n// id: Math.random().toString(36).substring(7),\r\n// type: \"sample\",\r\n// name: this.state.username,\r\n// address:this.state.company,\r\n// words:[{\r\n//   id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n//   name:\"2020 VOCA.json\",\r\n//   link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n//   haveto:100,\r\n//   due: due\r\n// },{\r\n// id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n// name:\"2020 VOCA2.json\",\r\n// link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n// haveto:100,\r\n// due: due\r\n// }],\r\n// record:record\r\n// });\r\n\r\n\r\nexport const createStudent= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\nexport const createStudent2= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto}\r\n      record{\r\n        id bookid month day words etc\r\n      }\r\n  }\r\n}\r\n`;\r\nexport const createStudent3= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\nexport const createWord = `mutation createMyType($input: CreateMyTypeInput!) {\r\n    createMyType(input: $input) {\r\n        id\r\n        type\r\n        name\r\n        grade\r\n        link\r\n        address\r\n        deleted\r\n    }\r\n  }\r\n  `;// address => 기간  grade => have to\r\n\r\n  export const updateAll = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        name\r\n        grade\r\n    }\r\n  }\r\n  `;\r\n\r\n  export const updateWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        words{name link due haveto deleted}\r\n    }\r\n  }\r\n  `;\r\n  export const updateHomework = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      homework{id name assignment done month day}\r\n    }\r\n  }\r\n  `;\r\n  export const updateTestRecord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      test{id name score month day}\r\n    }\r\n  }\r\n  `;\r\n  export const deleteWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        deleted\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  export const deleteWordOrigin = `mutation deleteMyType($input: DeleteMyTypeInput!) {\r\n    deleteMyType(input: $input) {\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"465tq4\"\r\n\t// \t\thomework:{name:\"숙제1\" assignment:50 done:20 date:\"20/02/13\"}\r\n  //   }){\r\n  //     homework{name assignment done date}\r\n  //   }\r\n  // }   \r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:[{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"},\r\n  //     {id:\"sdfgsdfg\"month:2,day:3,words:\"test.json\"},\r\n  //     {id:\"strwebsf\"month:2,day:2,words:\"test.json\"},]\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"}\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"test.json\"\r\n  //     type:\"word\"\r\n  //     name:\"test.json\"\r\n  //     link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //     words:[\r\n  //       {\r\n  //         id: null\r\n  //         name: null\r\n  //         link:null\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name link words{id name link}\r\n  //   }\r\n  // }  \r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"oatem28pmc\"\r\n  //     type:\"student\"\r\n  //     name:\"이병건\"\r\n  //     grade:\"m1\"\r\n  //     percentage:50,\r\n  //     words:[\r\n  //       {\r\n  //         id: \"test.json\"\r\n  //         name: \"test.json\"\r\n  //         link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name grade percentage words{id name link}\r\n  //   }\r\n  // }\r\n\r\n\r\n// mutation create{\r\n//   createToNote(input:{\r\n//     name:\"note\"\r\n//   \tdescription:\"전체숙제\"\r\n//     grades:[{id:\"01\", name:\"중등 1학년\", students:[\r\n//       {id:\"011\" name:\"홍길동\",percentage:86,assignment:\"숙제\"},\r\n//       {id:\"012\" name:\"이민정\",percentage:30,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"02\", name:\"중등 2학년\", students:[\r\n//       {id:\"021\" name:\"박보영\",percentage:100,assignment:\"숙제\"},\r\n//       {id:\"022\" name:\"신민아\",percentage:60,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"03\", name:\"중등 3학년\", students:[\r\n//       {id:\"031\" name:\"이병건\",percentage:50,assignment:\"숙제\"},\r\n//       {id:\"032\" name:\"주호민\",percentage:90,assignment:\"숙제\"}\r\n//     ]}  \r\n//     ]\r\n//   }){\r\n//     id name description grades{id name students{\r\n//       id name percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n// mutation {\r\n//   deleteToNote (\r\n//     input:{\r\n//       id:\"48f61355-996a-4a46-8638-3799aca806c7\"\r\n//     }\r\n//   ) {\r\n//   \tid\r\n//   }\r\n// }\r\n\r\n// const nodes = [{\r\n//   value: 'mid',\r\n//   label: '중학교',\r\n//   children: [\r\n//       { value: 'm1', label: '1학년' },\r\n//       { value: 'm2', label: '2학년' },\r\n//       { value: 'm3', label: '3학년' },\r\n//   ],\r\n// },{\r\n//   value: 'high',\r\n//   label: '고등학교',\r\n//   children: [\r\n//     { value: 'h1', label: '1학년' },\r\n//     { value: 'h2', label: '2학년' },\r\n//     { value: 'h3', label: '3학년' },\r\n//   ],\r\n// }];\r\n\r\n\r\n\r\n\r\n// mutation create{\r\n//   updateToNote(input:{\r\n//     id:\"9957304a-191c-4f7d-b2a5-192ba1151717\"\r\n//     grades:[{ id:\"01\"\r\n//       students:[{id:\"011\" percentage: 30 assignment: \"string\"}]}]    \r\n//   }){\r\n//     id grades{id students{\r\n//       id percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n\r\n// mutation create{\r\n// \tcreateMyType(input:{\r\n//     \ttype:\"word\"\r\n//     \tname:\"중3단어\"\r\n// \t\t\tgrade: \"m3\"\r\n//     \twords:\"단어\"\r\n//   }){\r\n// \ttype name grade words\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// input CreateToNoteInput {\r\n// \tid: ID\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [GradeInput]\r\n// }\r\n\r\n// input DeleteToNoteInput {\r\n// \tid: ID\r\n// }\r\n\r\n// type Grade {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [Student]\r\n// }\r\n\r\n// input GradeInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input ModelBooleanFilterInput {\r\n// \tne: Boolean\r\n// \teq: Boolean\r\n// }\r\n\r\n// input ModelFloatFilterInput {\r\n// \tne: Float\r\n// \teq: Float\r\n// \tle: Float\r\n// \tlt: Float\r\n// \tge: Float\r\n// \tgt: Float\r\n// \tcontains: Float\r\n// \tnotContains: Float\r\n// \tbetween: [Float]\r\n// }\r\n\r\n// input ModelIDFilterInput {\r\n// \tne: ID\r\n// \teq: ID\r\n// \tle: ID\r\n// \tlt: ID\r\n// \tge: ID\r\n// \tgt: ID\r\n// \tcontains: ID\r\n// \tnotContains: ID\r\n// \tbetween: [ID]\r\n// \tbeginsWith: ID\r\n// }\r\n\r\n// input ModelIntFilterInput {\r\n// \tne: Int\r\n// \teq: Int\r\n// \tle: Int\r\n// \tlt: Int\r\n// \tge: Int\r\n// \tgt: Int\r\n// \tcontains: Int\r\n// \tnotContains: Int\r\n// \tbetween: [Int]\r\n// }\r\n\r\n// enum ModelSortDirection {\r\n// \tASC\r\n// \tDESC\r\n// }\r\n\r\n// input ModelStringFilterInput {\r\n// \tne: String\r\n// \teq: String\r\n// \tle: String\r\n// \tlt: String\r\n// \tge: String\r\n// \tgt: String\r\n// \tcontains: String\r\n// \tnotContains: String\r\n// \tbetween: [String]\r\n// \tbeginsWith: String\r\n// }\r\n\r\n// type ModelToNoteConnection {\r\n// \titems: [ToNote]\r\n// \tnextToken: String\r\n// }\r\n\r\n// input ModelToNoteFilterInput {\r\n// \tid: ModelIDFilterInput\r\n// \tname: ModelStringFilterInput\r\n// \tdescription: ModelStringFilterInput\r\n// \tand: [ModelToNoteFilterInput]\r\n// \tor: [ModelToNoteFilterInput]\r\n// \tnot: ModelToNoteFilterInput\r\n// }\r\n\r\n// type Mutation {\r\n// \tcreateToNote(input: CreateToNoteInput!): ToNote\r\n// \tupdateToNote(input: UpdateToNoteInput!): ToNote\r\n// \tUpdateGrade(input: UpdateGradeInput!): [Grade]\r\n// \tUpdateStudent(input: UpdateStudentInput!): Student\r\n// \tdeleteToNote(input: DeleteToNoteInput!): ToNote\r\n// \taddGrade(input: [GradeInput]): [Grade]\r\n// \taddStudent(input: [StudentInput]): Student\r\n// }\r\n\r\n// type Query {\r\n// \tgetToNote(id: ID!): ToNote\r\n// \tlistToNotes(filter: ModelToNoteFilterInput, limit: Int, nextToken: String): ModelToNoteConnection\r\n// }\r\n\r\n// type Student {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input StudentInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// type Subscription {\r\n// \tonCreateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"createToNote\"])\r\n// \tonUpdateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"updateToNote\"])\r\n// \tonDeleteToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"deleteToNote\"])\r\n// }\r\n\r\n// type ToNote {\r\n// \tid: ID!\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [Grade]\r\n// }\r\n\r\n// input UpdateGradeInput {\r\n// \tid: ID\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input UpdateStudentInput {\r\n// \tid: ID!\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input UpdateToNoteInput {\r\n// \tid: ID!\r\n// \tgrades: [GradeInput]\r\n// }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n\r\nexport default function EditStudent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [name, setName] =  React.useState('');\r\n  const [grade, setGrade] =  React.useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n//   alert(JSON.stringify(props.All));\r\n\r\n  const handleFileInput = async()=>{\r\n      if(name !==''&& grade!==''){\r\n        await API.graphql(graphqlOperation(graphql.updateAll, {input: {\r\n            id: props.id,\r\n            name: name,\r\n            grade:grade,\r\n          }})).then(handleClose())\r\n      }else{\r\n          alert(\"모두 입력해주세요\")\r\n      }\r\n}\r\n\r\nconst thisname = props.All.find(x => x.id === props.id).name;\r\nconst thisgrade = props.All.find(x => x.id === props.id).grade;\r\n// const todo = props.All.find(x => x.id === props.id).todo;\r\n\r\n\r\n  //   id type name grade link words\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen}>\r\n        Edit\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"name\"\r\n            placeholder={thisname}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            value={grade}\r\n            onChange={(e) => setGrade(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"grade\"\r\n            placeholder={thisgrade}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleFileInput} color=\"primary\">\r\n            Edit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd'; //test\r\nimport PostAddIcon from '@material-ui/icons/PostAdd'; //test\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: '1px solid #e8e8e8',\r\n  },\r\n  indicator: {\r\n    backgroundColor: '#5a69bf',\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles(theme => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    minWidth: 50,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      color: '#5a69bf',\r\n      opacity: 1,\r\n    },\r\n    '&$selected': {\r\n      color: '#5a69bf',\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    '&:focus': {\r\n      color: '#5a69bf',\r\n    },\r\n  },\r\n  selected: {},\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: '#2e1534',\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const data = props.data===[]?[]:props.data;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const detaila = data.detaila===undefined?[]:data.detaila;\r\n  const detailh = data.detailh===undefined?[]:data.detailh;\r\n  const detailt = data.detailt===undefined?[]:data.detailt;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n          <AntTab  icon={<PhoneAndroidIcon />} {...a11yProps(0)} />\r\n          <AntTab  icon={<NoteAddIcon />}  {...a11yProps(1)} />\r\n          <AntTab  icon={<PostAddIcon />}  {...a11yProps(2)}/>\r\n        </AntTabs>\r\n    </div>\r\n    <div>\r\n                  <TabPanel value={value} index={0}>\r\n                   \r\n                    <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detaila.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.words.replace(\"https://wowproject-wow.s3.amazonaws.com/demo/\",\"\").replace(\".json\",\"\")} secondary={x.etc} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Scrollbars>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                  <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detailh.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.name} secondary={x.done} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Scrollbars>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={2}>\r\n                  <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detailt.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.name} secondary={x.score} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                   </Scrollbars>\r\n                  </TabPanel>\r\n                </div>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  ","import React,{Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Sparklines, SparklinesBars } from 'react-sparklines';\r\n\r\nconst average = arr => {\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\nexport default class DetailMoreStudent extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading:true,  \r\n          expanded:false,\r\n          dialog:false,\r\n          words:this.props.words,\r\n          weekly:this.props.weekly,\r\n          detaila:null\r\n         };\r\n    };\r\n\r\n    handleChange = panel => (event, isExpanded) => {\r\n      this.setState({expanded:isExpanded ? panel : false});\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({dialog:true})\r\n      };\r\n    \r\n    handleClose = () => {\r\n        this.setState({dialog:false})\r\n      };\r\n\r\n    componentDidMount =()=>{\r\n        let app =[];\r\n        let homework =[];\r\n        let test =[];\r\n\r\n        this.props.weekly.forEach(x=>{\r\n            let aa = x.detaila.map(a=>a.etc);\r\n            app.push(average(aa))\r\n        })\r\n        alert(JSON.stringify(app))\r\n        this.setState({detaila:app,loading:false})\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.loading?\r\n                    <div></div>:\r\n                    <div>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                            More\r\n                        </Button>\r\n                        <Dialog\r\n                            open={this.state.dialog}\r\n                            onClose={this.handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n\r\n                            <DialogContent>\r\n                                <div style={{width:100,height:20}}>\r\n\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>\r\n                                <div style={{width:100,height:20}}>\r\n\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>                                \r\n                                <div style={{width:100,height:20}}>\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>                              \r\n                                {\r\n                                    this.state.words.map((x,i)=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <ExpansionPanel expanded={this.state.expanded === x.id} onChange={this.handleChange(x.id)}>\r\n                                                <ExpansionPanelSummary\r\n                                                    expandIcon={<ExpandMoreIcon />}\r\n                                                    aria-controls=\"panel1bh-content\"\r\n                                                    id={x.id}\r\n                                                >\r\n                                                    <Typography>{x.name}</Typography>\r\n                                                </ExpansionPanelSummary>\r\n                                                <ExpansionPanelDetails>\r\n                                                    <Typography>\r\n                                                    Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget\r\n                                                    maximus est, id dignissim quam.\r\n                                                    </Typography>\r\n                                                </ExpansionPanelDetails>\r\n                                                </ExpansionPanel>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                                Agree\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                }\r\n    </div>\r\n        );\r\n    }\r\n    \r\n  }","\r\n  \r\n  import * as React from 'react';\r\n  import {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    LineSeries,\r\n    Legend,BarSeries,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\n\r\n\r\n  import { Animation,EventTracker,SelectionState,Stack } from '@devexpress/dx-react-chart';\r\n  import {\r\n    curveCatmullRom,\r\n    line,\r\n  } from 'd3-shape';\r\n  import moment from 'moment'\r\n  import DateRangePicker from \"react-daterange-picker\";\r\n  import Dialog from '@material-ui/core/Dialog';\r\n  import DialogActions from '@material-ui/core/DialogActions';\r\n  import DialogContent from '@material-ui/core/DialogContent';\r\n  import Button from '@material-ui/core/Button';\r\n  import { withStyles } from '@material-ui/core/styles';\r\n  import CustomizedTabs from './perWeekTabs'\r\n  import DetailMoreStudent from './detailmorestudent'\r\n  const Line = props => (\r\n    <LineSeries.Path\r\n      {...props}\r\n      path={line()\r\n        .x(({ arg }) => arg)\r\n        .y(({ val }) => val)\r\n        .curve(curveCatmullRom)}\r\n    />\r\n  );\r\n  \r\n  const legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n  const legendLabelStyles = theme => ({\r\n    label: {\r\n      marginBottom: theme.spacing(1),\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  });\r\n  const legendItemStyles = () => ({\r\n    item: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  });\r\n  \r\n  const legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n  );\r\n  const legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n  );\r\n  const legendItemBase = ({ classes, ...restProps }) => (\r\n    <Legend.Item className={classes.item} {...restProps} />\r\n  );\r\n  const Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n  const Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n  const Item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\r\n\r\n\r\n\r\n  const compare = (\r\n    { series, point }, { series: targetSeries, point: targetPoint },\r\n  ) => series === targetSeries && point === targetPoint;\r\n\r\n\r\n  export default class TotalChart extends React.PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        loading:false,\r\n        calendarValue: moment(),//calendar\r\n        selection: [],\r\n        calendarOpen:false,\r\n        selected:0,\r\n        daychart:undefined,\r\n        weekly:[],\r\n        };\r\n\r\n\r\n        this.click = ({ targets }) => {\r\n          const target = targets[0];\r\n          if (target) {\r\n          if(target.point!==undefined){\r\n              this.setState(({ selection,daychart }) => ({\r\n                selection: selection[0] && compare(selection[0], target) ? [] : [target],\r\n                selected:target.point\r\n              }));\r\n            }\r\n          }\r\n        };\r\n      }\r\n\r\n      toggleCalendar=()=>{\r\n        this.setState({ calendarOpen:true });\r\n      }\r\n      toggleCalendarfalse=()=>{\r\n        this.setState({ calendarOpen:false });\r\n      }\r\n      oncalendarSelect = (calendarValue, states) => {\r\n        this.toggleCalendarfalse()\r\n        this.setState({ calendarValue });\r\n        this.forWeekChart()\r\n      };//calendar\r\n\r\n    \r\n      forWeekChart=()=>{\r\n        const yyyy = Number(this.state.calendarValue.format(\"YYYY\"));\r\n        const mm = Number(this.state.calendarValue.format(\"MM\"));\r\n        const dd = Number(this.state.calendarValue.format(\"DD\"));\r\n  \r\n        const record = this.props.record\r\n        const homework = this.props.homework\r\n        const test = this.props.test\r\n        let count = 0;\r\n        let weekly = [\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n\r\n      ];\r\n        let td = moment([yyyy, mm, dd]);\r\n\r\n        let m =0;\r\n        let d =0;\r\n        let w =0;\r\n        let index=0;\r\n        let perRecord1 = []\r\n        let perRecord2 = []\r\n        let perHomework1 = []\r\n        let perHomework2 = [];\r\n        let percentage =0\r\n        let perTest1 = []\r\n        let perTest2 = []\r\n\r\n        for(let i=40;i>-1;i--){\r\n\r\n          m = moment(td).subtract(i, 'day').subtract(1, 'month').format('MM')\r\n          d = moment(td).subtract(i, 'day').format('DD')\r\n          w = weekOfMonth(moment(`${d}/${m}/2020`, \"DD/MM/YYYY\"))\r\n          \r\n          if(isNaN(w)===false){\r\n            // alert(`${m}월${d}일 // ${JSON.stringify(weekly[index])}`);\r\n            m=Number(m)\r\n            d=Number(d)\r\n            index = weekly.findIndex(x=>x.month === m&&x.week ===w);\r\n  \r\n            if(index===-1){\r\n              count++\r\n              index = count\r\n              weekly[index].month = m; \r\n              weekly[index].week = w;\r\n              weekly[index].arg =`${m}월${w}주`\r\n            }\r\n  \r\n            if(record !==null){\r\n                perRecord1 = record.filter(x=>x.month===m && Number(x.day)===d);\r\n                perRecord2 = perRecord1.map(x => x.etc)\r\n                weekly[index].detaila=weekly[index].detaila.concat(perRecord1);\r\n                weekly[index].app=weekly[index].app.concat(perRecord2);\r\n            }\r\n              \r\n            if(homework!==null){\r\n                perHomework1 = homework.filter(x=>Number(x.month)===m && Number(x.day)===d)\r\n                perHomework2 = perHomework1.map(x => {\r\n                percentage = Math.round((x.done/x.assignment)*100)\r\n                  return percentage\r\n                });\r\n                weekly[index].detailh=weekly[index].detailh.concat(perHomework1);\r\n                weekly[index].homework=weekly[index].homework.concat(perHomework2);\r\n            }\r\n              \r\n             if(test!==null){\r\n                perTest1 = test.filter(x=>x.month===m && Number(x.day)===d)\r\n                perTest2 = perTest1.map(x => {\r\n                  return x.score\r\n                });\r\n                weekly[index].detailt=weekly[index].detailt.concat(perTest1);\r\n                weekly[index].test=weekly[index].test.concat(perTest2);\r\n             }   \r\n\r\n          }\r\n      }\r\n      \r\n      weekly.forEach((x,i)=>{\r\n        weekly[i].app = average(x.app)\r\n        weekly[i].homework = average(x.homework)\r\n        weekly[i].test = average(x.test)\r\n      })\r\n\r\n      this.setState({weekly:weekly,loading:true})\r\n      }\r\n    \r\n      forDayChart=(y,m,d)=>{\r\n      let tendays = [];\r\n      let td = [y, m, d];\r\n      for(let i=9;i>-1;i--){\r\n          const d = moment(td).subtract(i, 'day').format('DD')\r\n          tendays.push(d);\r\n      }\r\n      \r\n      return tendays\r\n    }//for day chart 1\r\n    \r\n    updateAll=(y,m,d)=>{\r\n      const record = this.props.record\r\n      const homework = this.props.homework\r\n      const test = this.props.test\r\n\r\n    \r\n      const fordaychart = this.forDayChart(y,m,d);\r\n      \r\n      let DayChart = [\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        ]\r\n\r\n        fordaychart.forEach((day,i)=>{\r\n          if(DayChart[i].day ===null){DayChart[i].day = day;}\r\n          // record.forEach(x=> alert(`${x.day}   ${day}  ${Number(x.day)===Number(day)}`  ))\r\n         \r\n          let perRecord = record.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => x.etc);\r\n          DayChart[i].app=DayChart[i].app.concat(perRecord);\r\n          \r\n\r\n          let perHomework = homework.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => {\r\n            const percentage = Math.round((x.done/x.assignment)*100)\r\n            DayChart[i].info.homework.push({name:percentage,percentage:percentage});\r\n            return percentage\r\n          });\r\n          DayChart[i].homework=DayChart[i].homework.concat(perHomework);\r\n          \r\n\r\n          let perTest = test.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => {\r\n            DayChart[i].info.test.push({name:x.score,score:x.score});\r\n            return x.score\r\n          });\r\n          DayChart[i].test=DayChart[i].test.concat(perTest);\r\n          \r\n          \r\n      })\r\n\r\n      this.setState({daychart:DayChart,loading:true})\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount=()=>{\r\n      this.forWeekChart()\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n      const {weekly: chartData,selection,selected} = this.state;\r\n\r\n      return (\r\n            <div>\r\n            {\r\n              this.state.loading?\r\n              <div style={{display:'flex'}}>\r\n                <div style={{width:400}}>\r\n                  \r\n                  <div style={{margin:20}}>\r\n                                        {/* <DetailMoreStudent words={this.props.words} weekly={chartData}/> */}\r\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={this.toggleCalendar}>\r\n                                            {this.state.calendarValue.format(\"YY/MM/DD\")}\r\n                                        </Button>\r\n                                        <Dialog\r\n                                            open={this.state.calendarOpen}\r\n                                            onClose={this.toggleCalendarfalse}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            \r\n                                            <DialogContent>\r\n                                                <DateRangePicker\r\n                                                    selectionType='single'\r\n                                                    value={this.state.calendarValue}\r\n                                                    onSelect={this.oncalendarSelect}\r\n                                                    singleDateRange={true}\r\n                                                />\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                            <Button onClick={this.toggleCalendarfalse} color=\"primary\">\r\n                                                Disagree\r\n                                            </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                        </div>\r\n              <Chart\r\n                data={chartData}\r\n              >\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <BarSeries\r\n                name=\"homework\"\r\n                color='#F4F5F7'\r\n                valueField=\"homework\"\r\n                argumentField=\"arg\"\r\n              />\r\n                <BarSeries\r\n                name=\"app\"\r\n                color='#5a69bf'\r\n                valueField=\"app\"\r\n                argumentField=\"arg\"\r\n              />\r\n                <LineSeries\r\n                  name=\"test\"\r\n                  color='#ddd'\r\n                  valueField=\"test\"\r\n                  argumentField=\"arg\"\r\n                  seriesComponent={Line}\r\n                />\r\n              \r\n                <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} />\r\n                <Animation />\r\n                <Stack />\r\n                <EventTracker onClick={this.click} />\r\n                <SelectionState selection={selection} />\r\n\r\n              </Chart>\r\n                </div>\r\n                <div style={{width:300}}>\r\n                <CustomizedTabs data={chartData[selected]}/>\r\n                </div>\r\n               \r\n              </div>\r\n              :<div>\r\n                <p>loading</p>\r\n              </div>\r\n            }\r\n          </div>\r\n         \r\n      );\r\n    }\r\n  }\r\n  \r\n  const average = arr => {\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\n  function weekOfMonth (input) {\r\n    const firstDayOfMonth = input.clone().startOf('month');\r\n    const firstDayOfWeek = firstDayOfMonth.clone().startOf('week');\r\n    const offset = firstDayOfMonth.diff(firstDayOfWeek, 'days');\r\n  \r\n    return Math.ceil((input.date() + offset) / 7);\r\n  }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {  buildStyles,CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EditStudent from './editstudent'\r\nimport TotalChart from './totalchart';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '50%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DetailedExpansionPanel(props) {\r\n  const classes = useStyles();\r\n  const [selected, setselected] = React.useState('');\r\n  let Tavg = 0;\r\n  let Aavg = 0;\r\n  const words = props.All.find(x => x.id === props.id).words;\r\n  \r\n  if(props.TodayAssemble.length >0){\r\n    Tavg =props.TodayAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/props.TodayAssemble.length;\r\n  }\r\n  if(props.AllAssemble.length>0){\r\n    Aavg =props.AllAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/props.AllAssemble.length;\r\n  }\r\n\r\n  // alert(props.record)\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded={false}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div styles={{width:50}} className={classes.column}>\r\n            <Typography className={classes.heading}>{props.name}</Typography>\r\n          </div>\r\n          <div style={{display:'flex'}} className={classes.column}>\r\n\r\n              <div style={{width:100}}>\r\n              <CircularProgressbarWithChildren value={Math.round(Tavg)}>\r\n                <div style={{textAlign:'center' }}>\r\n                  <p style={{ fontSize: 15,marginBottom:-10}}>Today</p>                   \r\n                  <strong style={{ fontSize: 35}}>{Math.round(Tavg)}</strong> \r\n                  <strong style={{ fontSize: 20}}>%</strong> \r\n                </div>\r\n\r\n              </CircularProgressbarWithChildren>\r\n              </div>\r\n\r\n              <div style={{width:100,marginLeft:30}}>\r\n              <CircularProgressbarWithChildren \r\n              styles={buildStyles({\r\n                textColor: '#DC2C1A',\r\n                pathColor: '#5a69bf',\r\n                backgroundColor: '#DC2C1A',\r\n                })} value={Math.round(Aavg)}>\r\n                <div style={{textAlign:'center' }}>\r\n                  <p id=\"pfont\" style={{ fontSize: 15,marginBottom:-10}}>Total</p>                   \r\n                  <strong style={{ fontSize: 35,color:'#5a69bf'}}>{Math.round(Aavg)}</strong> \r\n                  <strong style={{ fontSize: 20,color:'#5a69bf'}}>%</strong> \r\n                </div>\r\n              </CircularProgressbarWithChildren>\r\n              </div>\r\n\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n\r\n        {words !== null?\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <div style={{width:'100%'}}>\r\n            <TotalChart\r\n              words={words}\r\n              record={props.record}\r\n              homework={props.homework}\r\n              test={props.test}\r\n            />\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n        :\r\n        <div></div>\r\n        }\r\n        <Divider />\r\n        <ExpansionPanelActions>\r\n          \r\n          <EditStudent id={props.id} All={props.All}/>\r\n        </ExpansionPanelActions>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\n","export const info={\r\n    name:\"정인학원\",\r\n    address:\"의왕시오전동\",\r\n    grade:[14,15,16,17,18],\r\n    class:[\"c\",\"b\",\"a\",\"s\"]\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nexport default function AboutFunction(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div style={props.style}>\r\n          <div style={props.iconstyle}>\r\n        <IconButton onClick={handleClickOpen} aria-label=\"delete\">\r\n          <ContactSupportIcon style={{ color: '#5a69bf' }} />\r\n        </IconButton>\r\n            </div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {props.content}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as academy from '../auth/academyInfo';\r\nimport AboutMultiple from './AboutFunction'\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nexport default function AddStudent() {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState('');  \r\n  const [aclass, setClass] = React.useState('');\r\n  const [name, setName] = React.useState('');\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const handleRegister = async() =>{\r\n    if(age !== '' && aclass !== '' && name !==''){\r\n      const input_query={\r\n        id: Math.random().toString(36).substring(7),\r\n        type: \"student\",\r\n        name: name,\r\n        grade:age,\r\n        class:aclass\r\n      };\r\n      await API.graphql(graphqlOperation(graphql.createStudent, {input: input_query})).then(r =>{\r\n          NotificationManager.success('Upload Success', `${name} 학생이 저장 되었습니다`,3000);\r\n          handleClose()     \r\n      });\r\n    }else{\r\n      NotificationManager.error('failed', `항목을 모두 채워주세요`,3000);\r\n    }\r\n  }\r\n\r\n  const handleAgeChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n  const handleclassChange = event => {\r\n    setClass(event.target.value);\r\n  };\r\n  const handlenameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n\r\n const csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            handleFileInput(result);\r\n  }\r\n}\r\n\r\n  const handleFileInput =(e)=>{ //multiple\r\n    try {\r\n        let res = JSON.parse(e)\r\n        res.map(async(man,i)=>{\r\n          const input_query={\r\n            id: Math.random().toString(36).substring(7),\r\n            type: \"student\",\r\n            name: man.name,\r\n            grade:man.grade,\r\n            class:man.class\r\n          };\r\n          await API.graphql(graphqlOperation(graphql.createStudent, {input: input_query})).then(r =>{\r\n            if(i === res.length-1){\r\n              // alert(`${i}--${res.length}--${res[0].name} 외 ${res.length}명이 저장 되었습니다`)\r\n              NotificationManager.success('Upload Success', `${res[0].name} 외 ${res.length}명이 저장 되었습니다`,3000);             \r\n          }\r\n         });\r\n      });\r\n  } catch (err) {\r\n      console.error(err);\r\n  }\r\n      // const input_query={\r\n      //   id: tempD.key,\r\n      //   type: \"word\",\r\n      //   name: tempD.key,\r\n      //   grade:null,\r\n      //   percentage:null ,\r\n      //   words: tempD.location,\r\n      // };\r\n      \r\n      // await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(this._getWordData());\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer/>\r\n      <Tooltip title=\"Add Student\" arrow>\r\n      <IconButton  onClick={handleClickOpen}>\r\n                        <PersonAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                    </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">학생추가</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            한명의 학생을 등록하는 페이지입니다. 여러명의 학생을 한번에 등록하려면 아래의 링크를 참조하세요.\r\n              <AboutMultiple buttontitle={\"Multiple 기능 사용법\"} content={\"f\"}/>\r\n          </DialogContentText>\r\n          <div style={{float:'right'}}>\r\n              <FormControl style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">학년</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={age}\r\n                onChange={handleAgeChange}\r\n                >\r\n                {\r\n                  academy.info.grade.map((g,i)=>{\r\n                    return(\r\n                    <MenuItem value={g}>{g}</MenuItem>\r\n                    );\r\n                  })\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">반</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={aclass}\r\n                onChange={handleclassChange}\r\n                >\r\n                {\r\n                  academy.info.class.map((c,i)=>{\r\n                    return(\r\n                    <MenuItem value={c}>{c}</MenuItem>\r\n                    );\r\n                  })\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            </div>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"학생이름\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={name}\r\n          onChange={handlenameChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n         \r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\" onChange={csvTojson}  name=\"file\" accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Multiple\r\n                </Button>\r\n              </label>\r\n\r\n        \r\n          <Button onClick={handleRegister} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function HandleTestRecord() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n  \r\n                    if(lines[0] ===\"name,id,test,score,month,day\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,assignment,done,date`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n    const save = async(query) =>{\r\n        await API.graphql(graphqlOperation(graphql.updateTestRecord, {input: query})).then(r =>{\r\n            console.log(r);\r\n         });\r\n    }\r\n\r\n      const handleFileInput = async(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n\r\n            let stackid =[];\r\n\r\n            for(let i =0;i<res.length-1;i++){\r\n                if(stackid.includes(res[i].id)){\r\n\r\n                }else{\r\n                    let input_query=undefined;\r\n                         \r\n                    await API.graphql(graphqlOperation( `\r\n                         query list{\r\n                             listMyTypes(filter:{id:{contains:\"${res[i].id}\"}}){\r\n                               items{\r\n                                 id test{id name score month day}\r\n                               }\r\n                             }\r\n                           }`)).then(r =>{\r\n                            \r\n                             let Data = r.data.listMyTypes.items[0].test\r\n\r\n                             const filtered = res.filter(x=>x.id === res[i].id)\r\n                             const arrayObj = filtered.map(man => {\r\n                                     return {\r\n                                         id:Math.random().toString(36).substring(7),\r\n                                         name:man.test,\r\n                                         score:man.score,\r\n                                         month:man.month,\r\n                                         day:man.day\r\n                                     };\r\n                                   });\r\n                                   \r\n                            if(Data !== null){     \r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    test:Data.concat(arrayObj)\r\n                                }\r\n                            }else{\r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    test:arrayObj\r\n                                }\r\n                            }  \r\n                           \r\n                            save(input_query)\r\n                            NotificationManager.success('Upload Success', `${res[i].name} 외 ${arrayObj.length}개의 숙제결과가 저장 되었습니다`,3000);\r\n                        })     \r\n                        stackid.push(res[i].id)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n          <Tooltip title=\"Add Test\" arrow>\r\n                <IconButton onClick={handleClickOpen} color=\"primary\" aria-label=\"upload homeworkDialog\" component=\"span\">\r\n                <NoteAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                </IconButton>\r\n                </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <img src=\"testmanual.png\" alt=\"students setting\"/>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <input onChange={csvTojson}  name=\"file\" accept=\".csv\"  style={{display:'none'}} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n      );\r\n\r\n}","import React from 'react';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function HandleHomework() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n  \r\n                    if(lines[0] ===\"name,id,homework,assignment,done,month,day\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,assignment,done,date`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n    const save = async(query) =>{\r\n        await API.graphql(graphqlOperation(graphql.updateHomework, {input: query})).then(r =>{\r\n            console.log(r);\r\n         });\r\n    }\r\n\r\n      const handleFileInput = async(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n\r\n            let stackid =[];\r\n\r\n            for(let i =0;i<res.length-1;i++){\r\n                if(stackid.includes(res[i].id)){\r\n\r\n                }else{\r\n                    let input_query=undefined;\r\n                         \r\n                    await API.graphql(graphqlOperation( `\r\n                         query list{\r\n                             listMyTypes(filter:{id:{contains:\"${res[i].id}\"}}){\r\n                               items{\r\n                                 id homework{id name assignment done month day}\r\n                               }\r\n                             }\r\n                           }`)).then(r =>{\r\n                             let Data = r.data.listMyTypes.items[0].homework\r\n\r\n                             const filtered = res.filter(x=>x.id === res[i].id)\r\n                             const arrayObj = filtered.map(man => {\r\n                                     return {\r\n                                         id:Math.random().toString(36).substring(7),\r\n                                         name:man.homework,\r\n                                         assignment:man.assignment,\r\n                                         done:man.done,\r\n                                         month:man.month,\r\n                                         day:man.day\r\n                                     };\r\n                                   });\r\n                            \r\n                            if(Data !== null){     \r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    homework:Data.concat(arrayObj)\r\n                                }\r\n                            }else{\r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    homework:arrayObj\r\n                                }\r\n                            }  \r\n                            save(input_query)\r\n                            NotificationManager.success('Upload Success', `${res[i].name} 외 ${arrayObj.length}개의 숙제결과가 저장 되었습니다`,3000);\r\n                        })     \r\n                        stackid.push(res[i].id)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n          <Tooltip title=\"Add Homework\" arrow>\r\n                <IconButton onClick={handleClickOpen} color=\"primary\" aria-label=\"upload homeworkDialog\" component=\"span\">\r\n                <PostAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                </IconButton>\r\n                </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                <img src=\"homeworkmanual.png\" alt=\"students setting\"/>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <input onChange={csvTojson}  name=\"file\" accept=\".csv\"  style={{display:'none'}} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n      );\r\n\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Confirm(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    props.send();\r\n    setOpen(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.button}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>handleSend()} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { Box, Email, Image, Item, Span, A,renderEmail } from 'react-html-email'\r\nimport axios from 'axios';\r\n\r\nconst css = `\r\n@media only screen and (max-device-width: 480px) {\r\n  font-size: 20px !important;\r\n}`.trim()\r\n\r\nconst sourceURL = 'https://raw.githubusercontent.com/chromakode/react-html-email/master/examples/kitchenSink.js'\r\n\r\nconst email = (\r\n  <Email title=\"Test Email\" headCSS={css}>\r\n    <Item>\r\n      <Span fontSize={15}>Hello, world!</Span>\r\n    </Item>\r\n    <Item>\r\n      <Box cellSpacing={20} width=\"100%\" style={{ borderTop: '3px solid black' }}>\r\n        <Item>\r\n          <Span color=\"gray\" lineHeight={20}>Generated by <A href=\"https://github.com/chromakode/react-html-email\">react-html-email</A></Span>\r\n          <Image data-mc-bar=\"bar\" data-mc-baz=\"baz\" alt=\"react\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/React.js_logo.svg/100px-React.js_logo.svg.png\" width={100} height={100} />\r\n          <A download={sourceURL} href={sourceURL}>Source code</A>\r\n        </Item>\r\n      </Box>\r\n    </Item>\r\n  </Email>\r\n)\r\n\r\nexport default async function submitEmail(){\r\n\r\n    const messageHtml =  renderEmail(email);\r\n    alert(messageHtml);\r\n    await axios.post('/addUser',{\r\n        userName: 'Fred',\r\n        userEmail:\"sosdfg728@naver.com\"\r\n    }).then((response)=>{\r\n                if (response.data.msg === 'success'){\r\n                    alert(\"Email sent, awesome!\"); \r\n                }else if(response.data.msg === 'fail'){\r\n                    alert(\"Oops, something went wrong. Try again\")\r\n                }\r\n            })\r\n        }\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Confirm from './confirmreq';\r\nimport submitEmail from './sendMail'\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'name' },\r\n  { id: 'id', numeric: true, disablePadding:  false, label: 'id' },\r\n  { id: 'grade', numeric: true, disablePadding: false, label: 'grade' },\r\n  { id: 'class', numeric: true, disablePadding: false, label: 'class' },\r\n  { id: 'todayAvg', numeric: true, disablePadding: false, label: 'today' },\r\n  { id: 'totalAvg', numeric: true, disablePadding: false, label: 'total' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\n\r\nconst checkeddelete = async(selectedid) =>{\r\n  selectedid.map(async(d,i)=>{\r\n    await API.graphql(graphqlOperation(graphql.deleteWordOrigin,{input: {id:d}})).then(data =>{\r\n      if(selectedid.length-1 ===i){\r\n        window.location.reload();\r\n        // NotificationManager.success('delete Success', `${selectedid[0]}이외 ${selectedid.length-1} 명이 삭제 되었습니다`,3000);\r\n      }\r\n      })\r\n  })\r\n}//보류 시바ㅅ거스ㅡ\r\n\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const {Selected} = props;\r\n  const {Selectedid} = props;\r\n  const num = props.Selected.length\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: num > 0,\r\n      })}\r\n    >\r\n      {num > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {num} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Students\r\n        </Typography>\r\n      )}\r\n\r\n      {num > 0 ? (\r\n        <Grid   container direction=\"row\" justify=\"flex-end\">\r\n        \r\n          <Grid item>\r\n          <Tooltip title=\"Delete\" placement=\"top-end\">\r\n              {/* <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd'}} onClick={()=>checkeddelete(Selectedid)}>\r\n                Delete\r\n              </Button> */}\r\n              <IconButton onClick={()=>checkeddelete(Selectedid)} aria-label=\"delete\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\" >\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\n// EnhancedTableToolbar.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [selectedid, setSelectedid] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const All = props.All;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = All.map(n => n.label);\r\n      const newSelectedsid = All.map(n => n.value);\r\n      setSelected(newSelecteds);\r\n      setSelectedid(newSelectedsid);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n    setSelectedid([]);\r\n  };\r\n\r\n  const handleClick = (event, name,id) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n\r\n\r\n    let newSelected = [];\r\n    let newSelectedid = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n      newSelectedid = newSelectedid.concat(selectedid, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n      newSelectedid = newSelectedid.concat(selectedid.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n      newSelectedid = newSelectedid.concat(selectedid.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n      newSelectedid = newSelectedid.concat(\r\n        selectedid.slice(0, selectedIndex),\r\n        selectedid.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n    setSelectedid(newSelectedid);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, All.length - page * rowsPerPage);\r\n\r\n  const total =props.total;\r\n  const today =props.today;\r\n  const grade = props.grade;\r\n  const aclass = props.class;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NotificationContainer/>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar Selectedid={selectedid} Selected={selected} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={All.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(All, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.label);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    if(grade.includes(row.grade) && row.todayAvg <= today&& row.totalAvg <= total && aclass.includes(row.class) ){\r\n                        return (\r\n                            <TableRow\r\n                              hover\r\n                              onClick={event => handleClick(event, row.label, row.value)}\r\n                              role=\"checkbox\"\r\n                              aria-checked={isItemSelected}\r\n                              tabIndex={-1}\r\n                              key={row.value}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                {row.label}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{row.value.split(\"-\")[0]}</TableCell>\r\n                              <TableCell align=\"right\">{row.grade}</TableCell>\r\n                              <TableCell align=\"right\">{row.class}</TableCell>\r\n                              <TableCell align=\"right\">{row.todayAvg}</TableCell>\r\n                              <TableCell align=\"right\">{row.totalAvg}</TableCell>\r\n                              </TableRow>\r\n                          );\r\n                    }\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={All.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component, Fragment } from 'react';\n// import Product from './Product';\nimport axios from \"axios\";\n// import CheckboxTree from 'react-checkbox-tree';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './utility/graphql';\nimport DetailedExpansionPanel from './utility/expansion';\nimport AddStudent from './utility/addstudent'\n\n\nimport AboutFunction from './utility/AboutFunction';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\n\n// import { Scrollbars } from 'react-custom-scrollbars';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport HandleTestRecord from './utility/addTestRecord'\nimport HandleHomework from './utility/addHomework';\n// import Slider from '@material-ui/core/Slider';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport EnhancedTable from './utility/tableview';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport * as academy from './auth/academyInfo';\nimport IconButton from '@material-ui/core/IconButton';\nconst config = require('../config.json');\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nexport default class Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      login:this.props.auth.isAuthenticated,\n\n      addchecked: [],\n      addexpanded: [], // tree view\n\n      deletechecked:[],\n      deleteexpended:[], // table view\n\n      value:0,\n      newproduct: null,\n      products: [],\n      checked: [],\n      expanded: [],\n      loading:true,\n      AllStu:null,\n      treeSet:null, date: new Date(),\n      All:null,\n\n      selectgrade:[],\n      selectclass:[],\n\n      todayfilter:100,\n      totalfilter:100,\n     };\n};\nhandleChange = (event, newValue) => {\n  this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\n}\n\na11yProps = (index) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nonChange = date => this.setState({ date })\n\n  fetchProducts = async () => {\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  _makestudenttree=(data)=>{\n    let AllStu = [];\n\n  \n    let treeSet = academy.info.grade.map((g)=>{\n      let classcomp = academy.info.class.map((c,i)=>{\n        return {value:`${c}${g}`,label:c,children:[]}\n      });\n     return {value:g,label:g,children:classcomp}\n   });\n\n     data.forEach((student,i)=>{\n        let temp =[];\n        let temptreeSet = JSON.parse(JSON.stringify(treeSet));\n       let nowGrade = student.grade;\n       let nowClass= student.class;\n       //react-checkbox-tree 양식에 맞도록 재가공\n       let TodayAssemble =[];\n       let AllAssemble = [];       \n\n   \n       if(student.record !== null){\n         temp = student.record.filter(item => \n           item.month === Number(new Date().getMonth())  && item.day === Number(new Date().getDate())\n         );\n         TodayAssemble=temp.map(data => {return data.etc});\n         \n         AllAssemble = student.record.map(item => {\n               return item.etc\n         });\n       }    \n       let Today =0;\n       let Total =0;\n       if(TodayAssemble.length >0){\n         Today =TodayAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/TodayAssemble.length;\n       }\n       if(AllAssemble.length>0){\n         Total =AllAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/AllAssemble.length;\n       }\n       let studentInfo = { \n         value: student.id , \n         grade: student.grade,\n         class:student.class,\n         label: student.name, \n         words:student.words, \n         todo:student.todo, \n         record:student.record,  \n         TodayAssemble:TodayAssemble,// 오늘 퍼센트 배열\n         AllAssemble:AllAssemble,//전체 퍼센트 배열\n         todayAvg:Math.round(Today),\n         totalAvg:Math.round(Total),\n         homework:student.homework,\n         test:student.test}\n      \n         let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\n       \n         let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\n\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\n        treeSet[gradeindex] = temptreeSet[gradeindex]\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\n           AllStu.push(studentInfo);   \n           // alert(JSON.stringify(treeSet))\n     })\n\n     treeSet.forEach((i,index)=>{\n       let temp = i.children.filter(j=>j.children.length!==0)    \n        treeSet[index].children =temp\n      })\n      treeSet= treeSet.filter(x=>x.children.length!==0);\n      this.setState({treeSet:treeSet,AllStu:AllStu,All:data,selectgrade:academy.info.grade,selectclass:academy.info.class});\n  }\n \n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{\n      this._makestudenttree(data.data.listMyTypes.items)\n      \n    })\n  }\n\n  componentDidMount = async() => {\n    await Promise.all([this._getStudentData()]).then((d)=>{\n      this.setState({loading:false})\n    }\n    )   \n  }\n\n  //selecter\n  handleChangeMultiplegrade = event => {\n    this.setState({selectgrade:event.target.value});\n    // alert(event.target.value)\n  };\n  handleChangeMultipleclass = event => {\n    this.setState({selectclass:event.target.value});\n    // alert(event.target.value)\n  };\n\n  //slider\n  valuetext=(value) =>{\n    return `${value}% 이하`;\n  }\n\n  handleSliderChange = (event, newValue) => {\n    // this.setState({Slider:Number(event.target.value)});\n   return newValue\n  };\n\n  \n\n  render() {\n    return (\n      <div>\n        {\n          this.state.loading?\n          <p>loading</p>\n          :\n        <Fragment>\n        \n        <div style={{height:70}}/>\n        <section style={{marginTop:-270,backgroundColor:'#fff'}} className=\"section\">\n        <div className=\"container\">\n        <h1 style={{color:'#5a69bf'}}>학생 데이터/관리</h1>\n        <p className=\"subtitle is-5\">학생들의 데이터를 확인하거나 등록/삭제를 할 수 있습니다.</p> \n        <br/><br/><br/><br/><br/><br/>\n        <div style={{float:'right'}}><AddStudent/></div>   \n        <div style={{float:'right'}}><HandleHomework/></div>   \n        <div style={{float:'right'}}><HandleTestRecord/></div>   \n        <Paper elevation={0} square>\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"table\" {...this.a11yProps(0)} />\n          <Tab label=\"tree\" {...this.a11yProps(1)} />\n        </Tabs>\n      </Paper>        \n        <br />\n        <TabPanel value={this.state.value} index={1}>\n          <div>\n          <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:30}} content={\"f\"}/>\n        <div style={{display:'flex',marginTop:30}}>\n          <div style={{width:\"30%\"}}>\n            {/* <div className=\"tile is-ancestor\">\n              <CheckboxTree\n              nodes={this.state.treeSet}\n              checked={this.state.checked}\n              expanded={this.state.expanded}\n              onCheck={checked => this.setState({ checked })}\n              onExpand={expanded => this.setState({ expanded })}\n              icons={{\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\n            }}\n          />             \n            </div> */}\n          </div>\n          <div  style={{width:750}}>\n\n            {\n              this.state.AllStu.map((student, i)=>{\n                if(this.state.checked.indexOf(student.value) !== -1){\n                  return(\n                    <DetailedExpansionPanel \n                      All={this.state.All} \n                      id={student.value} \n                      name={student.label} \n                      TodayAssemble={student.TodayAssemble}\n                      AllAssemble={student.AllAssemble}\n                      record={student.record}\n                      homework={student.homework}\n                      test={student.test}/>\n                  );// to utility/expansion  ->  calendar and editstudent\n                }\n                return \"\";\n              })\n            }\n\n          </div>   \n        </div>      \n        </div>          \n        </TabPanel>\n        <TabPanel value={this.state.value} index={0}> \n        <div>\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:30}} content={\"f\"}/>\n        <div style={{display:'flex',marginTop:30}}>\n          <div id=\"selecter\" style={{width:\"30%\"}}>\n            <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"demo-mutiple-chip-label\">반을 선택하세요</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-chip-label\"\n            id=\"demo-mutiple-chip\"\n            multiple\n            value={this.state.selectgrade}\n            onChange={event =>this.handleChangeMultiplegrade(event)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div>\n                {selected.map(value => (\n                  <Chip key={value} label={value} deleteIcon={<DoneIcon />}/>\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {academy.info.grade.map(grade => (\n              <MenuItem key={grade} value={grade}>\n                {grade}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n            </div>\n            <div id=\"selecter\" style={{width:\"30%\"}}>\n            <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"demo-mutiple-chip-label\">학년을 선택하세요</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-chip-label\"\n            id=\"demo-mutiple-chip\"\n            multiple\n            value={this.state.selectclass}\n            onChange={event =>this.handleChangeMultipleclass(event)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div>\n                {selected.map(value => (\n                  <Chip key={value} label={value} deleteIcon={<DoneIcon />}/>\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {academy.info.class.map(aclass => (\n              <MenuItem key={aclass} value={aclass}>\n                {aclass}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n            </div>\n            \n              <div style={{width:\"15%\",marginTop:20,marginLeft:30}}>\n              <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Total</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={this.state.todayfilter}\n              onChange={event=>this.setState({todayfilter:event.target.value})}\n              endAdornment={<InputAdornment position=\"end\">이하</InputAdornment>}\n              labelWidth={60}\n            />\n            </FormControl>\n              </div>\n              <div style={{width:\"15%\",marginTop:20,marginLeft:30}}>\n              <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Total</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={this.state.totalfilter}\n              onChange={event=>this.setState({totalfilter:event.target.value})}\n              endAdornment={<InputAdornment position=\"end\">이하</InputAdornment>}\n              labelWidth={60}\n            />\n            </FormControl>\n              </div>\n            <div id=\"slider\" style={{marginTop:10,marginLeft:30}}>\n            <IconButton onClick={()=>this.setState({Slider:this.state.Slider2})}  aria-label=\"search\">\n              <PageviewIcon fontSize=\"large\" style={{ color: '#5a69bf' }}/>\n            </IconButton>\n            </div>\n          </div>\n          <EnhancedTable \n            grade={this.state.selectgrade}\n            class={this.state.selectclass}\n            total={this.state.totalfilter}\n            today={this.state.todayfilter}\n            All={this.state.AllStu}/>\n             {/*to utility/Tableview  */}\n             </div>\n        </TabPanel>        \n      </div>  \n\n      {/* :<p>xxxxxxxxxx</p>} */}\n         \n        </section>\n      </Fragment>\n        }\n      </div>\n      \n    )\n  }\n}\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-prevent-tabpanel-${index}`}\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\nimport Paper from '@material-ui/core/Paper';\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\");\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <div style={{backgroundColor:'#fff'}}>\n      <div style={{height:150}}/>\n      <section className=\"section auth\">\n        <div style={{display:'flex'}}  className=\"container\">\n          <div style={{width:'50%'}}>\n            <img src=\"secure.jpg\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\n          \n          </div>\n       \n          <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\n          <form onSubmit={this.handleSubmit}>\n            <h1>Login</h1>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>User ID</p>\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>Password</p>\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <FormErrors formerrors={this.state.errors} />\n                <button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </Paper>\n        </div>\n      </section>\n      <div style={{height:150}}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default LogIn;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { Paper } from '@material-ui/core';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Confirm from './confirmreq'\r\n\r\nexport default function DeleteListComp(props) {\r\n  const [dense, setDense] = React.useState(false);\r\n\r\n\r\n\r\nconst updateDeleted = async(query) =>{\r\n    await API.graphql(graphqlOperation(graphql.updateWord, {input: query})).then(r =>{\r\n        NotificationManager.success('delete Success', `${IDBIndex} 단어장이 삭제 되었습니다`,3000);\r\n    });\r\n    window.location.reload();\r\n}\r\n\r\nconst handleAllDelete = async(id) =>{\r\n\r\n        await API.graphql(graphqlOperation(graphql.deleteWord, {input: {\r\n            id: id,\r\n            deleted:true\r\n          }}))\r\n          \r\n        await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n            data.data.listMyTypes.items.map((d,i)=>{\r\n                if(d.words !==null){\r\n                    let temp = d.words.find(x=>x.id !== id);\r\n                    let input_query={\r\n                        id: d.id,\r\n                        words:temp \r\n                    }\r\n                    updateDeleted(input_query);\r\n                }\r\n            })\r\n        });\r\n}\r\n\r\nconst handleDeletefor = async(word,man) =>{\r\n\r\n  await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n    // alert(JSON.stringify(data))\r\n      data.data.listMyTypes.items.map((d,i)=>{\r\n        if(d.id ===man){\r\n          if(d.words !==null){\r\n            let temp = d.words.find(x=>x.id !== word);\r\n            let input_query={\r\n                id: d.id,\r\n                words:temp \r\n            }\r\n            // alert(JSON.stringify(input_query))\r\n            updateDeleted(input_query);\r\n        }\r\n        }\r\n      })\r\n  });\r\n}\r\n\r\nconst handleDelete = (id,data) =>{\r\n    data.forEach(d =>{\r\n      handleDeletefor(id,d.id)\r\n    })\r\n}\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n        <NotificationContainer/>\r\n            <List dense={dense}>\r\n            {\r\n              props.CommonWords.map((data,i)=>{\r\n                  let secondary = [];\r\n                   data.common.map(one=> secondary.push(` ${one.name} `))\r\n                    return(\r\n                        <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <DescriptionIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                          primary={data.name}\r\n                          secondary={secondary}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <div style={{display:'flex'}}>\r\n                            <Confirm button=\"delete\" title=\"delete\" content={`${secondary}학생의 ${data.name}을 삭제하겠습니까?`} send={()=>handleDelete(data.id,data.common)}/>\r\n                            <Confirm button=\"delete All\" title=\"delete\" content={` ${data.name}을 가진 모든 학생에게서 ${data.name}을 삭제하겠습니까?`} send={()=>handleAllDelete(data.id)}/>\r\n                          </div>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    );\r\n                })      \r\n            }\r\n            </List>\r\n            </Paper>\r\n  );\r\n}\r\n\r\n                      \r\n                        // <div style={{display:'flex'}}>\r\n                        //     <div style={{width:80,margin:10}}>\r\n                        //         {data.name}\r\n                        //     </div>\r\n                        //     <div style={{display:'flex'}}>\r\n                        //         {\r\n                        //             data.common.map((one,i)=>{\r\n                        //                 return(\r\n                        //                 <div style={{margin:10}}>{one.name}</div>\r\n                        //                 );\r\n                        //             })\r\n                        //         }\r\n                        //     </div>\r\n                        // </div>","import React, { Component, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport DateRangePicker from \"react-daterange-picker\";\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport originalMoment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DeleteListComp from './utility/deleteListComp'\r\nimport * as academy from './auth/academyInfo'\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst config = require('../config.json');\r\nconst moment = extendMoment(originalMoment);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default class Temp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const today = moment();\r\n    this.state = { \r\n      value:0,  \r\n      newproduct: null,\r\n      products: [],\r\n      \r\n      addchecked: [],\r\n      addexpanded: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],\r\n      selectedWord:[],\r\n      AddOrDelete:true,\r\n      select:[],\r\n      calendarValue: moment.range(today.clone().subtract(1, \"days\"), today.clone())//calendar\r\n     };\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n\r\n\r\n  csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    let name = sender.target.files[0].name\r\n\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            let e = new File([JSON.stringify(result)], name.replace('.csv','.json'), {type: \"application/json\"})\r\n            this.handleFileInput(e);\r\n            // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\r\n            // var dlAnchorElem = document.createElement('a');\r\n            // dlAnchorElem.setAttribute(\"href\",dataStr);\r\n            // dlAnchorElem.setAttribute(\"download\", \"newworkbook.json\");\r\n            // dlAnchorElem.click();\r\n  }\r\n}\r\n  // ▽\r\n  handleFileInput =async(e)=>{\r\n      await S3.uploadFile(e, {\r\n          bucketName: config.S3.bucketName,\r\n          dirName:config.S3.dirName,\r\n          region: config.S3.region,\r\n          accessKeyId: config.S3.accessKeyId,\r\n          secretAccessKey: config.S3.secretAccessKey,\r\n      }).then( d =>{\r\n          this.SaveWords(d);\r\n        }).catch(err =>alert(err));\r\n  }\r\n  // ▽       \r\n\r\n  SaveWords = async(tempD)=>{\r\n    const input_query={\r\n      id: Math.random().toString(36).substring(7),\r\n      type: \"word\",\r\n      name: tempD.key.replace(`${config.S3.dirName}/`,\"\"),\r\n      grade:null, // haveto\r\n      link: tempD.location,\r\n      address:null,\r\n      deleted:false\r\n    };\r\n    // alert(JSON.stringify(input_query))\r\n    NotificationManager.success('Upload Success', '단어장을 저장하였습니다',3000); \r\n    await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(()=>\r\n      this._getWordData()\r\n    );\r\n  }\r\n  // ▽\r\n  _getWordData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCword)).then(data =>{\r\n   \r\n    let tt = data.data.listMyTypes.items.filter(x=> x.deleted === null || x.deleted ===false);\r\n    // alert(JSON.stringify(tt))\r\n      this.setState({wordSet:tt})\r\n    })\r\n  }\r\n \r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectWord=(w)=>{\r\n        if(this.state.selectedWord.includes(w) === false){\r\n            this.setState({\r\n                selectedWord: [...this.state.selectedWord, w]\r\n            });\r\n        }else{\r\n            this.setState({selectedWord: this.state.selectedWord.filter(function(word) { \r\n                return word !== w\r\n            })});\r\n        }  \r\n  }\r\n\r\n  addSendData = () =>{\r\n    \r\n    this.state.AllStu.map((student, i)=>{    \r\n        if(this.state.addchecked.indexOf(student.value) !== -1){ \r\n\r\n              let wordset = this.state.wordSet\r\n\r\n            this.state.select.map(async(sw,i)=>{//선택된 단어장\r\n\r\n \r\n                let temp = student.words!==null?student.words.findIndex(x => x.label === sw):-2\r\n                let temp2 = this.state.wordSet.findIndex(x => x.name === sw)\r\n\r\n              if(temp!==-1&&temp!==-2){\r\n                    NotificationManager.warning('Upload Failed', `${student.label}이 이미 ${sw}을 가지고 있습니다.`,3000);\r\n                    return \"\";\r\n                }\r\n              else if(temp2 !== -1){\r\n\r\n                  wordset[temp2].haveto = this.state.haveto;\r\n                  wordset[temp2].due = `${this.state.calendarValue.start.format(\"YYYY-MM-DD\")}/${this.state.calendarValue.end.format(\"YYYY-MM-DD\")}`\r\n                  const ass = temp===-2?[wordset[temp2]]:student.words.concat(wordset[temp2])\r\n\r\n                  const input_query={\r\n                    id: student.value,\r\n                    words: ass,\r\n                  };\r\n\r\n                await API.graphql(graphqlOperation(graphql.updateWord, {input: input_query})).then(data =>{\r\n                     NotificationManager.success('Upload Success', `${student.label}에게 ${sw}을 업로드 하였습니다.`,3000);\r\n                })\r\n                }else return 0\r\n              })\r\n\r\n        }else return 0;\r\n    })\r\n  }\r\n  \r\n  oncalendarSelect = (calendarValue, states) => {\r\n    this.setState({ calendarValue, states });\r\n  };//calendar\r\n\r\n\r\n\r\n  renderSelectionValue = () => {\r\n    return (\r\n      <div style={{padding:25}}>\r\n        <div id=\"calendar\" style={{display:'flex'}}>\r\n          <strong>Start    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.start.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n        <div style={{display:'flex'}}>\r\n          <strong>End    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.end.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };//calendar\r\n\r\n  \r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData(), this._getWordData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n  handleChangeMultiple = event => {\r\n    // alert(event.target.value)\r\n    this.setState({select:event.target.value});\r\n  };\r\n\r\n  handleHavetoChange = event => {\r\n    this.setState({haveto:event.target.value});\r\n  };\r\n\r\n  render() {\r\n    alert(\"zzzz\")\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n\r\n       \r\n\r\n      <Paper elevation={0} position=\"static\">\r\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"단어장 추가\" {...this.a11yProps(0)} />\r\n          <Tab label=\"단어장 삭제\" {...this.a11yProps(1)} />\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={this.state.value} index={0}>\r\n        <div>\r\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex'}}>\r\n\r\n        \r\n            <div style={{width:\"30%\"}}>\r\n\r\n\r\n            <div style={{marginBottom:50,display:'flex'}}>\r\n            <div style={{marginTop:15}}>\r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\"  name=\"file\" onChange={e => this.csvTojson(e)} accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  +\r\n                </Button>\r\n              </label>\r\n            </div>\r\n            \r\n            <div id=\"selecter\" style={{width:\"50%\",marginLeft:10}}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel id=\"demo-mutiple-chip-label\">select</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-chip-label\"\r\n            id=\"demo-mutiple-chip\"\r\n            multiple\r\n            value={this.state.select}\r\n            onChange={event =>this.handleChangeMultiple(event)}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            renderValue={selected => (\r\n              <div>\r\n                {\r\n                selected.map((w,i) => (\r\n                   <Chip\r\n                   key={i}\r\n                   label={w.replace('.json','')}\r\n                 />\r\n                ))\r\n                }\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >{this.state.wordSet.map(w => (\r\n            <MenuItem key={w.id} value={w.name}>\r\n              {w.name.replace('.json','')}\r\n            </MenuItem>\r\n          ))}\r\n          </Select>\r\n        </FormControl>\r\n            </div>\r\n            </div>\r\n\r\n           \r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"100%\",display:'flex'}} >\r\n              <div style={{marginRight:100}}>\r\n\r\n                <div>\r\n                  <strong>WordBook</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                     {//if selected, print that\r\n                          this.state.select.map((word,i)=>{\r\n                            return(\r\n                              <Chip\r\n                                style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                key={word}\r\n                                label={word.replace('.json','')}\r\n                              />\r\n                            );\r\n                        })\r\n                    }\r\n                  </Scrollbars>\r\n                  \r\n                </div>\r\n\r\n                <div>\r\n                  <strong>Students</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                  {\r\n                      this.state.AllStu.map((student, i)=>{    \r\n                          if(this.state.addchecked.indexOf(student.value) !== -1){\r\n                              return(\r\n                                <Chip\r\n                                  style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                  key={student.label}\r\n                                  label={student.label}\r\n                                />\r\n                          );\r\n                          }\r\n                          return \"\";\r\n                      })\r\n                      }\r\n                  </Scrollbars>\r\n                  \r\n                </div> \r\n\r\n                <div style={{ height: 80,width: 300}}>\r\n                  <strong>Have to</strong>\r\n                  <div>\r\n                      <TextField\r\n                        value={this.state.haveto}\r\n                        onChange={this.handleHavetoChange}\r\n                        id=\"outlined-number\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n\r\n                </div>  \r\n                <div>\r\n                  <div>{this.renderSelectionValue()}</div>\r\n                  <div>\r\n                    <DateRangePicker\r\n                      value={this.state.calendarValue}\r\n                      onSelect={this.oncalendarSelect}\r\n                      singleDateRange={true}\r\n                    />\r\n                  \r\n                </div>\r\n                <div>\r\n                        <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:300}} onClick={()=>{this.addSendData()}}>\r\n                            send\r\n                        </Button>\r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n      <TabPanel value={this.state.value} index={1}>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n\r\n            <div style={{width:\"30%\"}}>\r\n\r\n           \r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                    <CommonWordsView wordSet={this.state.wordSet} allstu={this.state.AllStu} deletechecked={this.state.deletechecked}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n\r\n        </div>\r\n       \r\n\r\n\r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CommonWordsView(props) {\r\n    let CommonWords = [];\r\n    let commonWords_id =[];\r\n\r\n    props.allstu.map((student, i)=>{                            \r\n        if(props.deletechecked.indexOf(student.value) !== -1){\r\n            if(student.words !== null){\r\n            student.words.map((perword,i)=>{\r\n              if(props.wordSet.findIndex(x=>x.id===perword.id)!==-1){ //delete되지 않은 단어인가?  맞다       \r\n                if(CommonWords.length >0){//맨 처음 push하는 것인가? 아니다\r\n                    CommonWords.map((c,i)=>{\r\n                        \r\n                          if(c.id === perword.id){ // 해당 단어장이 이미 있는가? 없다\r\n                            CommonWords[i].common.push({name:student.label, id:student.value})\r\n                            }\r\n                            else if(commonWords_id.includes(perword.id)===false){// 해당 단어장이 이미 있는가? 있다\r\n                                CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                                commonWords_id.push(perword.id);\r\n                            } \r\n                        \r\n                    })\r\n                }else if(CommonWords.length === 0){//맨 처음 push하는 것인가? 맞다\r\n                    CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                    commonWords_id.push(perword.id);\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n    })\r\n    \r\n    return (\r\n      <Scrollbars style={{height:500}}>\r\n          <div style={{width:\"80%\"}}><DeleteListComp commonWords_id={commonWords_id} CommonWords={CommonWords}/></div>\r\n      </Scrollbars>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './components/utility/graphql';\n\n// import WordSetting from './components/WordSetting';\nimport Products from './components/Products';\n// import ProductAdmin from './components/ProductAdmin';\nimport LogIn from './components/auth/LogIn';\n// import Register from './components/auth/Register';\n// import ForgotPassword from './components/auth/ForgotPassword';\n// import ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\n// import ChangePassword from './components/auth/ChangePassword';\n// import ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\n// import Welcome from './components/auth/Welcome';\n// import CsvTable from './components/CSVtablepage'\nimport Temp from './components/temp'\n\n// import Sample from './components/Sample';\n// import MainConsole from './components/mainConsole'\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth} from 'aws-amplify';\n// library.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n    note:[]\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {      \n      \n      // const data = await API.graphql(graphqlOperation(query))\n      // alert(JSON.stringify(data));\n      this._getStudentData()\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(\"ttttt\");\n      const user = await Auth.currentAuthenticatedUser();\n      // alert(`Hi ${user}!!`)\n      this.setUser(user);\n\n    } catch(error) {\n      if (error !== 'No current user') {\n        alert(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \n      alert(JSON.stringify(data.data.listMyTypes.items))\n    })\n  }\n\n  render() {\n\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar logined={this.state.isAuthenticated} auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => (this.state.isAuthenticated?(<Redirect to=\"/mainconsole\" />):(<Home {...props} auth={authProps} />))}/>\n              <Route exact path=\"/products\" render={(props) => (this.state.isAuthenticated?(<Products {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} />\n              {/* <Route exact path=\"/wordsetting\" render={(props) => (this.state.isAuthenticated?(<WordSetting {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n              {/* <Route exact path=\"/csv\" render={(props) => <CsvTable {...props} auth={authProps} />} /> */}\n               <Route exact path=\"/temp\" render={(props) => <Temp {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} /> */}\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n              <Route exact path=\"/mainconsole\" render={(props) => <MainConsole {...props} auth={authProps} />} />\n              <Route exact path=\"/Sample\" render={(props) => <Sample {...props} auth={authProps} />} /> */} */}\n            </Switch>\n            \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      AWSS3: {\n          bucket: 'verdemo', //REQUIRED -  Amazon S3 bucket\n          region: 'ap-northeast-2', //OPTIONAL -  Amazon service region\n      }\n  },\n    \"aws_project_region\": \"ap-northeast-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://6rha74vb45elpo6wue7tw2ladm.appsync-api.ap-northeast-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-53xamyyb3vagfcwl5xylphc43u\"\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}