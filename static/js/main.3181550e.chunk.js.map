{"version":3,"sources":["../node_modules/nexmo/lib sync","components/Navbar.js","components/Home.js","components/utility/graphql.js","components/utility/AboutFunction.js","components/utility/confirmreq.js","components/utility/deleteListComp.js","components/auth/academyInfo.js","components/utility/treeview.js","components/WordSetting.js","components/utility/editstudent.js","components/utility/perWeekTabs.js","components/utility/detailmorestudent.js","components/utility/totalchart.js","components/utility/expansion.js","components/utility/addstudent.js","components/utility/addTestRecord.js","components/utility/addHomework.js","components/utility/sendMail.js","components/utility/tableview.js","components/Products.js","components/ProductAdmin.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","components/CSVtablepage.js","components/temp.js","components/Sample.js","components/utility/multiAddStudent.js","components/Footer.js","components/mainConsole.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ColorButton","withStyles","theme","root","color","palette","getContrastText","backgroundColor","&:hover","Button","Navbar","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","window","location","href","error","console","log","message","stop","react_default","createElement","style","position","width","className","role","aria-label","src","height","alt","this","logined","Link","to","isAuthenticated","user","username","borderColor","borderWidth","variant","marginLeft","disableElevation","onClick","Component","Home","origin","destination","direction","index","react_fullpage_default","scrollOverflow","sectionsColor","onLeave","bind","afterLoad","render","_ref","state","fullpageApi","align","padding","scrollAnimation_min_default","animateIn","animateOnce","IconTabs","React","TabPanel","children","value","other","Object","objectWithoutProperties","Typography","assign","component","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","flexGrow","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","Paper","elevation","square","Tabs","centered","onChange","newValue","indicatorColor","textColor","Tab","icon","lib_default","axis","onChangeIndex","queryCstudent","studentsWords","queryCword","createStudent","createStudent3","createWord","updateAll","updateWord","updateHomework","updateTestRecord","deleteWord","AboutFunction","open","setOpen","handleClose","iconstyle","IconButton","ContactSupport_default","Dialog","onClose","aria-describedby","DialogContent","DialogContentText","content","DialogActions","autoFocus","Confirm","button","DialogTitle","title","send","DeleteListComp","dense","updateDeleted","asyncToGenerator","mark","query","API","graphql","graphqlOperation","input","then","r","NotificationManager","success","IDBIndex","reload","_x","apply","arguments","handleAllDelete","_ref2","_callee2","_context2","deleted","data","listMyTypes","items","map","d","i","words","temp","find","x","input_query","_x2","handleDeletefor","_ref3","_callee3","word","man","_context3","_x3","_x4","react_notifications_lib","List","CommonWords","secondary","common","one","push","name","ListItem","ListItemAvatar","Avatar","Description_default","ListItemText","primary","ListItemSecondaryAction","display","forEach","handleDelete","info","address","grade","class","SelectTreeView","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_makestudenttree","AllStu","treeSet","academy","g","classcomp","c","label","student","temptreeSet","JSON","parse","stringify","nowGrade","nowClass","studentInfo","percentage","assignment","gradeindex","findIndex","classindex","filter","j","length","setState","loading","_getStudentData","componentDidMount","checked","expanded","_this2","index_browser_default","nodes","onCheck","onExpand","config","require","moment","extendMoment","originalMoment","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","WordSetting","fetchProducts","res","products","axios","get","api","invokeUrl","sent","t0","handleChange","addchecked","addexpanded","deletechecked","deleteexpended","csvTojson","sender","result","reader","FileReader","target","files","readAsText","onload","lines","split","headers","obj","currentline","File","replace","type","handleFileInput","S3","uploadFile","bucketName","dirName","region","accessKeyId","secretAccessKey","SaveWords","catch","err","alert","tempD","Math","random","toString","substring","key","link","_getWordData","_callee4","_context4","tt","wordSet","getTree","_callee5","_context5","selectWord","w","selectedWord","includes","toConsumableArray","addSendData","indexOf","wordset","select","_ref6","_callee6","sw","temp2","ass","_context6","warning","abrupt","haveto","due","calendarValue","start","format","end","oncalendarSelect","states","renderSelectionValue","fontSize","_callee7","_context7","Promise","all","handleChangeMultiple","handleHavetoChange","today","newproduct","AddOrDelete","range","clone","subtract","assertThisInitialized","react","WordSetting_TabPanel","right","marginBottom","marginTop","accept","htmlFor","FormControl","InputLabel","Select","labelId","multiple","Input","renderValue","selected","Chip","MenuItem","treeview_SelectTreeView","passChildData","marginRight","react_custom_scrollbars_lib","borderRadius","margin","TextField","InputLabelProps","shrink","DateRangePicker_default","onSelect","singleDateRange","alignItems","CommonWordsView","allstu","commonWords_id","perword","EditStudent","_React$useState3","_React$useState4","setName","_React$useState5","_React$useState6","setGrade","thisname","All","thisgrade","placeholder","fullWidth","AntTabs","borderBottom","indicator","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","spacing","fontFamily","join","opacity","&$selected","fontWeightMedium","&:focus","disableRipple","demo1","background","paper","demo2","CustomizedTabs","detaila","undefined","detailh","detailt","PhoneAndroid_default","NoteAdd_default","PostAdd_default","perWeekTabs_TabPanel","ListItemIcon","Inbox_default","etc","done","score","average","arr","round","reduce","Line","dx_react_chart_material_ui_es","Path","path","line","arg","y","val","curve","curveCatmullRom","Root","flexDirection","restProps","Label","whiteSpace","_ref4","Item","item","_ref5","compare","_ref7","series","point","targetSeries","targetPoint","TotalChart","toggleCalendar","calendarOpen","toggleCalendarfalse","forWeekChart","yyyy","Number","mm","dd","record","homework","test","count","weekly","month","week","app","td","m","perRecord1","perRecord2","perHomework1","perHomework2","perTest1","perTest2","weekOfMonth","isNaN","day","forDayChart","tendays","fordaychart","DayChart","perRecord","perHomework","perTest","daychart","selection","click","_ref8","targets","_ref9","_this$state","chartData","selectionType","valueField","argumentField","seriesComponent","rootComponent","itemComponent","labelComponent","dx_react_chart_es","firstDayOfMonth","startOf","firstDayOfWeek","offset","diff","ceil","date","heading","pxToRem","secondaryHeading","text","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","main","textDecoration","DetailedExpansionPanel","Tavg","Aavg","TodayAssemble","accumulator","currentValue","AllAssemble","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","styles","index_esm","textAlign","buildStyles","pathColor","ExpansionPanelDetails","totalchart_TotalChart","Divider","ExpansionPanelActions","AddStudent","age","setAge","aclass","setClass","_React$useState7","_React$useState8","handleRegister","Tooltip","arrow","PersonAdd_default","size","buttontitle","float","HandleTestRecord","save","stackid","_loop","Data","arrayObj","delegateYield","pop","HandleHomework","css","trim","sourceURL","react_html_email_lib","headCSS","cellSpacing","borderTop","lineHeight","data-mc-bar","data-mc-baz","download","descendingComparator","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox_Checkbox","indeterminate","inputProps","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","dark","flex","checkeddelete","selectedid","EnhancedTableToolbar","Selectedid","Selected","num","Toolbar","clsx","defineProperty","Grid","container","justify","placement","Delete_default","FilterList_default","table","border","clip","overflow","top","EnhancedTable","setOrder","setOrderBy","setSelected","setSelectedid","_React$useState9","_React$useState10","page","setPage","_React$useState11","_React$useState12","setDense","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","emptyRows","min","total","tableview_EnhancedTableToolbar","TableContainer","Table","newSelecteds","n","newSelectedsid","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","isItemSelected","todayAvg","totalAvg","hover","selectedIndex","newSelected","newSelectedid","handleClick","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch_Switch","Products","Date","getMonth","getDate","Today","Total","todo","selectgrade","selectclass","handleChangeMultiplegrade","handleChangeMultipleclass","valuetext","handleSliderChange","login","todayfilter","totalfilter","Products_TabPanel","deleteIcon","Done_default","OutlinedInput","endAdornment","InputAdornment","labelWidth","Slider","Slider2","Pageview_default","Checkbox","_ref$type","_ref$checked","ProductAdmin","callChecked","checkedlist","checkedItems","tempBox","comp","groupComp","checkboxes","Storage","put","Map","isChecked","prevState","set","Fragment","ProductAdmin_Checkbox","Products_Products","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","inputs","document","getElementsByClassName","classList","contains","remove","hasOwnProperty","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","handleSubmit","Validate","objectSpread","signIn","history","onInputChange","onSubmit","components_FormErrors","Register","signUpResponse","signUp","attributes","ForgotPassword","forgotPasswordHandler","ForgotPasswordVerification","passwordVerificationHandler","ChangePassword","ChangePasswordConfirmation","Welcome","steptitle","CsvTable","selectATtree","tablevalue","csv","handleRadioChange","handleFileNameChange","filename","handleNext","activeStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","Radio","labelPlacement","MakeCsvPage","react_csv","startIcon","disabled","columns","field","dist_default","temp_TabPanel","TreeView","defaultCollapseIcon","defaultExpandIcon","ChevronRight_default","onNodeToggle","nodeIds","onNodeSelect","multiSelect","TreeItem","nodeId","temp_CommonWordsView","Sample","company","generateRandom","max","floor","nowMonth","nowDay","bookid","createMyType","apiKey","apiSecret","MultiAddStudent","Footer","createStyles","formControlLabel","& label","CustomSwitch","switchBase","&$checked","&$checked + $track","track","Switch","MainConsole","formonthchart","thisMonth","thisDay","nowselected","MonthChart","assemble","Taa","Aaa","taa","aaa","ta","aa","rating","ratelength","noStudent","fivemonths","isValid","handleToggle","currentIndex","newChecked","splice","handleListChange","listIndex","handleChartChange","chartIndex","academyinfo","leng","two","justifyContent","borderTopRightRadius","borderBottomRightRadius","FormGroup","trailColor","mainConsole_TabPanel","AccountCircle_default","rotated","library","faEdit","App","isAuthenticating","note","authenticated","currentSession","currentAuthenticatedUser","authProps","HashRouter","Navbar_Navbar","Route","exact","Redirect","Home_Home","WordSetting_WordSetting","CSVtablepage_CsvTable","temp_WordSetting","ProductAdmin_ProductAdmin","auth_LogIn","auth_Register","auth_ForgotPassword","auth_ForgotPasswordVerification","auth_ChangePassword","ChangePasswordConfirm","mainConsole","Sample_Sample","Boolean","hostname","match","Amplify","configure","mandatorySignIn","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","AWSS3","bucket","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qLAAA,SAAAA,EAAAC,GACA,IAAAC,EAAA,IAAAC,MAAA,uBAAAF,EAAA,KAEA,MADAC,EAAAE,KAAA,mBACAF,EAEAF,EAAAK,KAAA,WAAuC,UACvCL,EAAAM,QAAAN,EACAO,EAAAC,QAAAR,EACAA,EAAAS,GAAA,uPCAMC,EAAcC,YAAW,SAAAC,GAAK,MAAK,CACvCC,KAAM,CACJC,MAAOF,EAAMG,QAAQC,gBAAgB,0BACrCC,gBAAiB,yBACjBC,UAAW,CACTD,gBAAiB,0BACjBH,MAAO,WANOH,CAShBQ,KAGiBC,6MACnBC,mDAAe,SAAAC,EAAMC,GAAN,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbN,EAAMO,iBACN,IACEC,IAAKC,UACLC,EAAKC,MAAMC,KAAKC,eAAc,GAC9BH,EAAKC,MAAMC,KAAKE,QAAQ,MACxBC,OAAOC,SAASC,KAAK,IACtB,MAAMC,GACLC,QAAQC,IAAIF,EAAMG,SARP,wBAAAjB,EAAAkB,SAAAvB,oIAYb,OACEwB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC/B,gBAAgB,OAAOgC,SAAS,WAAWC,MAAM,QAASC,UAAU,SAASC,KAAK,aAAaC,aAAW,mBACrHP,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,gBACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,cAAcX,KAAK,KAC9BM,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,cAAcJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,iBAItDV,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,qBAAqB0C,UAAU,gBAEnCM,KAAKvB,MAAMwB,QAEXZ,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,gBACbL,EAAArB,EAAAsB,cAACY,EAAA,EAAD,CAAMC,GAAG,KACPd,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,UACbL,EAAArB,EAAAsB,cAAA,OAAMI,UAAU,mBAAmBG,IAAI,YAAYJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,WAGlFV,EAAArB,EAAAsB,cAACY,EAAA,EAAD,CAAMC,GAAG,gBACPd,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,UACbL,EAAArB,EAAAsB,cAAA,OAAMI,UAAU,mBAAmBG,IAAI,aAAcJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,QAGpFV,EAAArB,EAAAsB,cAACY,EAAA,EAAD,CAAMC,GAAG,aACPd,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,UACbL,EAAArB,EAAAsB,cAAA,OAAMI,UAAU,mBAAmBG,IAAI,YAAaJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,QAGnFV,EAAArB,EAAAsB,cAACY,EAAA,EAAD,CAAMC,GAAG,QACPd,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,UACbL,EAAArB,EAAAsB,cAAA,OAAMI,UAAU,mBAAmBG,IAAI,cAAeJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,UA6CzFV,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,cACbL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,eACZM,KAAKvB,MAAMC,KAAK0B,iBAAmBJ,KAAKvB,MAAMC,KAAK2B,MAClDhB,EAAArB,EAAAsB,cAAA,kBACSU,KAAKvB,MAAMC,KAAK2B,KAAKC,UAGhCjB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,YACXM,KAAKvB,MAAMC,KAAK0B,iBAChBf,EAAArB,EAAAsB,cAAA,WACGD,EAAArB,EAAAsB,cAACY,EAAA,EAAD,CAAMC,GAAG,aACTd,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ6B,MAAO,CAACgB,YAAY,OAAOC,YAAY,EAAEnD,MAAM,QAASoD,QAAQ,YAAxE,aAEDpB,EAAArB,EAAAsB,cAACY,EAAA,EAAD,CAAMC,GAAG,UACPd,EAAArB,EAAAsB,cAACrC,EAAD,CAAasC,MAAO,CAACmB,WAAW,IAAMD,QAAQ,YAAYE,kBAAgB,GAA1E,YAMLX,KAAKvB,MAAMC,KAAK0B,iBACff,EAAArB,EAAAsB,cAACY,EAAA,EAAD,CAAMC,GAAG,KACPd,EAAArB,EAAAsB,cAACrC,EAAD,CAAasC,MAAO,CAACmB,WAAW,IAAKD,QAAQ,YAAYG,QAASZ,KAAKpC,aAAc+C,kBAAgB,GAArG,uBA9GgBE,wICRfC,kLACXC,EAAQC,EAAaC,GAC3BhC,QAAQC,IAAI,mBAAqB6B,EAAOG,yCAEhCH,EAAQC,EAAaC,GAC7BhC,QAAQC,IAAI,eAAiB8B,EAAYE,wCAIzC,OACE7B,EAAArB,EAAAsB,cAAC6B,EAAAnD,EAAD,CACEoD,gBAAgB,EAChBC,cAAe,CAAC,OAAQ,OAAQ,QAChCC,QAAStB,KAAKsB,QAAQC,KAAKvB,MAC3BwB,UAAWxB,KAAKwB,UAAUD,KAAKvB,MAC/ByB,OAAQ,SAAAC,GAA4BA,EAAzBC,MAAyBD,EAAlBE,YAChB,OACEvC,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,oBACNqC,EAAArB,EAAAsB,cAAA,OAAKuC,MAAM,SAASnC,UAAU,oBAC5BL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACuC,QAAQ,KACrBzC,EAAArB,EAAAsB,cAACyC,EAAA/D,EAAD,CAAiBgE,UAAU,SAAQC,aAAa,GAEhD5C,EAAArB,EAAAsB,cAAA,MAAIC,MAAO,CAAClC,MAAM,YAAlB,mEAGEgC,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,KAAMD,IAAI,iBAAiBE,IAAI,sBAGvDV,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,WACfL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,KAAM+B,MAAM,UAC1BxC,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,KAAMD,IAAI,qCAAYE,IAAI,cAGpDV,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,WACbL,EAAArB,EAAAsB,cAAC4C,EAAD,kBAlCkBC,IAAMtB,WA8CxC,SAASuB,EAAS3D,GAAO,IACb4D,EAAqC5D,EAArC4D,SAAUC,EAA2B7D,EAA3B6D,MAAOpB,EAAoBzC,EAApByC,MAAUqB,EADdC,OAAAC,EAAA,EAAAD,CACwB/D,EADxB,8BAGrB,OACEY,EAAArB,EAAAsB,cAACoD,EAAA,EAADF,OAAAG,OAAA,CACEC,UAAU,MACVjD,KAAK,WACLkD,OAAQP,IAAUpB,EAClBlE,GAAE,mBAAA8F,OAAqB5B,GACvB6B,kBAAA,cAAAD,OAA+B5B,IAC3BqB,GAEHD,IAAUpB,GAAS7B,EAAArB,EAAAsB,cAAC0D,EAAA,EAAD,CAAKC,EAAG,GAAIZ,IAKxC,SAASa,EAAUhC,GACf,MAAO,CACLlE,GAAE,cAAA8F,OAAgB5B,GAClBiC,gBAAA,mBAAAL,OAAoC5B,IAM1C,IAAMkC,EAAYC,YAAW,CACzBjG,KAAM,CACJkG,SAAU,KAKhB,SAASpB,IACL,IAAMqB,EAAUH,IADAI,EAEUrB,IAAMsB,SAAS,GAFzBC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAETlB,EAFSoB,EAAA,GAEFE,EAFEF,EAAA,GAUhB,OACIrE,EAAArB,EAAAsB,cAAA,WACFD,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOC,UAAW,EAAGC,QAAM,EAACrE,UAAW6D,EAAQnG,MAC7CiC,EAAArB,EAAAsB,cAAC0E,EAAA,EAAD,CACAC,UAAQ,EACN3B,MAAOA,EACP4B,SAZe,SAACpG,EAAOqG,GAC3BP,EAASO,IAYL1D,QAAQ,YACR2D,eAAe,UACfC,UAAU,UACVzE,aAAW,qBAEXP,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK4B,KAAMlF,EAAArB,EAAAsB,cAAA,OAAKG,MAAO,IAAKK,OAAQ,IAAKD,IAAI,QAAQE,IAAI,WAAiBmD,EAAU,GAApF,CAAwFtD,aAAW,WACnGP,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK4B,KAAMlF,EAAArB,EAAAsB,cAAA,OAAKG,MAAO,IAAKK,OAAQ,IAAKD,IAAI,QAAQE,IAAI,WAAiBmD,EAAU,GAApF,CAAwFtD,aAAW,cACnGP,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK4B,KAAMlF,EAAArB,EAAAsB,cAAA,OAAKG,MAAO,IAAKK,OAAQ,IAAKD,IAAI,QAAQE,IAAI,WAAiBmD,EAAU,GAApF,CAAwFtD,aAAW,cAGvGP,EAAArB,EAAAsB,cAACkF,EAAAxG,EAAD,CACEyG,KAAM,IACNvD,MAAOoB,EACPoC,cAvBsB,SAAAxD,GACtB0C,EAAS1C,KAwBT7B,EAAArB,EAAAsB,cAAC8C,EAAD,CAAUE,MAAOA,EAAOpB,MAAO,GAC3B7B,EAAArB,EAAAsB,cAAA,OAAKuC,MAAM,SAAStC,MAAO,CAACO,OAAO,MAC/BT,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,KAAMD,IAAI,cAAcE,IAAI,cAG1DV,EAAArB,EAAAsB,cAAC8C,EAAD,CAAUE,MAAOA,EAAOpB,MAAO,GACzB7B,EAAArB,EAAAsB,cAAA,OAAKuC,MAAM,SAAStC,MAAO,CAACO,OAAO,MAC/BT,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,KAAMD,IAAI,cAAcE,IAAI,cAG1DV,EAAArB,EAAAsB,cAAC8C,EAAD,CAAUE,MAAOA,EAAOpB,MAAO,GAC/B7B,EAAArB,EAAAsB,cAAA,OAAKuC,MAAM,SAAStC,MAAO,CAACO,OAAO,MACzBT,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,KAAMD,IAAI,cAAcE,IAAI,gBCvIzD,IAWM4E,EAAa,mVAebC,EAAa,+IAkBbC,EAAU,gJA6CVC,EAAa,iPA0BbC,EAAc,sOAYdC,EAAU,gNAaRC,EAAS,kJASTC,EAAU,kKAOVC,EAAc,uKAOdC,EAAgB,yJAOhBC,GAAU,2QClKV,SAASC,GAAc7G,GAAO,IAAA+E,EACjBrB,IAAMsB,UAAS,GADEC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAClC+B,EADkC7B,EAAA,GAC5B8B,EAD4B9B,EAAA,GAOnC+B,EAAc,WAClBD,GAAQ,IAGV,OACEnG,EAAArB,EAAAsB,cAAA,OAAKC,MAAOd,EAAMc,OACdF,EAAArB,EAAAsB,cAAA,OAAKC,MAAOd,EAAMiH,WACpBrG,EAAArB,EAAAsB,cAACqG,GAAA,EAAD,CAAY/E,QAXQ,WACtB4E,GAAQ,IAUgC5F,aAAW,UAC/CP,EAAArB,EAAAsB,cAACsG,GAAA5H,EAAD,CAAoBuB,MAAO,CAAElC,MAAO,eAGtCgC,EAAArB,EAAAsB,cAACuG,GAAA,EAAD,CACEN,KAAMA,EACNO,QAASL,EACT1C,kBAAgB,qBAChBgD,mBAAiB,4BAEjB1G,EAAArB,EAAAsB,cAAC0G,GAAA,EAAD,KACE3G,EAAArB,EAAAsB,cAAC2G,GAAA,EAAD,CAAmBjJ,GAAG,4BACnByB,EAAMyH,UAGX7G,EAAArB,EAAAsB,cAAC6G,GAAA,EAAD,KACE9G,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQkD,QAAS6E,EAAapI,MAAM,UAAU+I,WAAS,GAAvD,gQC9BG,SAASC,GAAQ5H,GAAO,IAAA+E,EACbrB,IAAMsB,UAAS,GADFC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAC9B+B,EAD8B7B,EAAA,GACxB8B,EADwB9B,EAAA,GAcrC,OACErE,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ+C,QAAQ,WAAWpD,MAAM,UAAUuD,QAbvB,WACtB4E,GAAQ,KAaH/G,EAAM6H,QAETjH,EAAArB,EAAAsB,cAACuG,GAAA,EAAD,CACEN,KAAMA,EACNO,QAVc,WAClBN,GAAQ,IAUJzC,kBAAgB,qBAChBgD,mBAAiB,4BAEjB1G,EAAArB,EAAAsB,cAACiH,GAAA,EAAD,CAAavJ,GAAG,sBAAsByB,EAAM+H,OAC5CnH,EAAArB,EAAAsB,cAAC0G,GAAA,EAAD,KACE3G,EAAArB,EAAAsB,cAAC2G,GAAA,EAAD,CAAmBjJ,GAAG,4BACnByB,EAAMyH,UAGX7G,EAAArB,EAAAsB,cAAC6G,GAAA,EAAD,KACE9G,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQkD,QAAS,kBAxBvBnC,EAAMgI,YACNjB,GAAQ,IAuBiCnI,MAAM,UAAU+I,WAAS,GAA5D,YC1BK,SAASM,GAAejI,GAAO,IAAA+E,EAClBrB,IAAMsB,UAAS,GADGC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GACrCmD,EADqCjD,EAAA,GAKxCkD,GALwClD,EAAA,GAK3B,eAAAhC,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAjJ,EAAMkJ,GAAN,OAAAhJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZ4I,IAAIC,QAAQC,YAAiBD,EAAoB,CAACE,MAAOJ,KAASK,KAAK,SAAAC,GACzEC,uBAAoBC,QAAQ,iBAA5B,GAAAzE,OAAiD0E,SAAjD,yEAA0E,OAF5D,OAIlB3I,OAAOC,SAAS2I,SAJE,wBAAAvJ,EAAAkB,SAAAvB,MAAH,gBAAA6J,GAAA,OAAAhG,EAAAiG,MAAA3H,KAAA4H,YAAA,IAObC,EAAe,eAAAC,EAAAtF,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAiB,EAAM/K,GAAN,OAAAe,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,cAAA4J,EAAA5J,KAAA,EAEV4I,IAAIC,QAAQC,YAAiBD,GAAoB,CAACE,MAAO,CAC3DnK,GAAIA,EACJiL,SAAQ,MAJI,cAAAD,EAAA5J,KAAA,EAOV4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,GAC5DA,EAAKA,KAAKC,YAAYC,MAAMC,IAAI,SAACC,EAAEC,GAC/B,GAAc,OAAXD,EAAEE,MAAc,CACf,IAAIC,EAAOH,EAAEE,MAAME,KAAK,SAAAC,GAAC,OAAEA,EAAE3L,KAAOA,IAChC4L,EAAY,CACZ5L,GAAIsL,EAAEtL,GACNwL,MAAMC,GAEV7B,EAAcgC,QAfV,wBAAAZ,EAAA5I,SAAA2I,MAAH,gBAAAc,GAAA,OAAAf,EAAAH,MAAA3H,KAAA4H,YAAA,GAqBfkB,EAAe,eAAAC,EAAAvG,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAkC,EAAMC,EAAKC,GAAX,OAAAnL,EAAAC,EAAAC,KAAA,SAAAkL,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA/K,MAAA,cAAA+K,EAAA/K,KAAA,EAEhB4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,GAE5DA,EAAKA,KAAKC,YAAYC,MAAMC,IAAI,SAACC,EAAEC,GACjC,GAAGD,EAAEtL,KAAMkM,GACK,OAAXZ,EAAEE,MAAc,CACjB,IAAIC,EAAOH,EAAEE,MAAME,KAAK,SAAAC,GAAC,OAAEA,EAAE3L,KAAOiM,IAChCL,EAAY,CACZ5L,GAAIsL,EAAEtL,GACNwL,MAAMC,GAGV7B,EAAcgC,QAbF,wBAAAO,EAAA/J,SAAA4J,MAAH,gBAAAI,EAAAC,GAAA,OAAAN,EAAApB,MAAA3H,KAAA4H,YAAA,GA0BnB,OACEvI,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOC,UAAW,GACdzE,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACIjK,EAAArB,EAAAsB,cAACiK,GAAA,EAAD,CAAM5C,MAAOA,GAEXlI,EAAM+K,YAAYnB,IAAI,SAACH,EAAKK,GACxB,IAAIkB,EAAY,GAEd,OADDvB,EAAKwB,OAAOrB,IAAI,SAAAsB,GAAG,OAAGF,EAAUG,KAAV,IAAA9G,OAAmB6G,EAAIE,KAAvB,QAEjBxK,EAAArB,EAAAsB,cAACwK,GAAA,EAAD,KACAzK,EAAArB,EAAAsB,cAACyK,GAAA,EAAD,KACE1K,EAAArB,EAAAsB,cAAC0K,GAAA,EAAD,KACE3K,EAAArB,EAAAsB,cAAC2K,GAAAjM,EAAD,QAGJqB,EAAArB,EAAAsB,cAAC4K,GAAA,EAAD,CACEC,QAASjC,EAAK2B,KACdJ,UAAWA,IAEbpK,EAAArB,EAAAsB,cAAC8K,GAAA,EAAD,KACE/K,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,SACnBhL,EAAArB,EAAAsB,cAAC+G,GAAD,CAASC,OAAO,SAASE,MAAM,SAASN,QAAO,GAAApD,OAAK2G,EAAL,uBAAA3G,OAAqBoF,EAAK2B,KAA1B,sDAA4CpD,KAAM,kBA3BxG,SAACzJ,EAAGkL,GACrBA,EAAKoC,QAAQ,SAAAhC,GACXQ,EAAgB9L,EAAGsL,EAAEtL,MAyBsGuN,CAAarC,EAAKlL,GAAGkL,EAAKwB,WAC/HrK,EAAArB,EAAAsB,cAAC+G,GAAD,CAASC,OAAO,aAAaE,MAAM,SAASN,QAAO,IAAApD,OAAMoF,EAAK2B,KAAX,oEAAA/G,OAAgCoF,EAAK2B,KAArC,sDAAuDpD,KAAM,kBAAIoB,EAAgBK,EAAKlL,cC/F9J,IAAMwN,GAAK,CACdX,KAAK,2BACLY,QAAQ,uCACRC,MAAM,CAAC,GAAG,GAAG,GAAG,GAAG,IACnBC,MAAM,CAAC,IAAI,IAAI,IAAI,oCCUFC,wBACjB,SAAAA,EAAYnM,GAAO,IAAAD,EAAA,OAAAgE,OAAAqI,EAAA,EAAArI,CAAAxC,KAAA4K,IACfpM,EAAAgE,OAAAsI,EAAA,EAAAtI,CAAAxC,KAAAwC,OAAAuI,EAAA,EAAAvI,CAAAoI,GAAAI,KAAAhL,KAAMvB,KAUVwM,iBAAiB,SAAC/C,GACd,IAAIgD,EAAS,GAETC,EAAUC,GAAaV,MAAMrC,IAAI,SAACgD,GACpC,IAAIC,EAAYF,GAAaT,MAAMtC,IAAI,SAACkD,EAAEhD,GACxC,MAAO,CAACjG,MAAK,GAAAQ,OAAIyI,GAAJzI,OAAQuI,GAAIG,MAAMD,EAAElJ,SAAS,MAE7C,MAAO,CAACC,MAAM+I,EAAEG,MAAMH,EAAEhJ,SAASiJ,KAGjCpD,EAAKoC,QAAQ,SAACmB,EAAQlD,GACrB,IAAImD,EAAcC,KAAKC,MAAMD,KAAKE,UAAUV,IACvCW,EAAWL,EAAQf,MACnBqB,EAAUN,EAAQd,MAElBqB,EAAc,CAAE1J,MAAOmJ,EAAQzO,GAAKwO,MAAOC,EAAQ5B,KAAKa,MAAMoB,EAASnB,MAAMoB,EAAUE,WAAWR,EAAQQ,WAAYC,WAAWT,EAAQS,WAAW1D,MAAMiD,EAAQjD,OAElK2D,EAAYhB,EAAQiB,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAQwJ,IAC3CO,EAAYlB,EAAQgB,GAAY9J,SAAS+J,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAF,GAAAQ,OAAaiJ,GAAbjJ,OAAwBgJ,KAEjFJ,EAAYS,GAAY9J,SAASgK,GAAYhK,SAASuH,KAAKoC,GAC3Db,EAAQgB,GAAcT,EAAYS,GAE/BjB,EAAOtB,KAAKoC,KAIlBb,EAAQb,QAAQ,SAAC/B,EAAErH,GACjB,IAAIuH,EAAOF,EAAElG,SAASiK,OAAO,SAAAC,GAAC,OAAsB,IAApBA,EAAElK,SAASmK,SAC1CrB,EAAQjK,GAAOmB,SAAUoG,IAE3B0C,EAASA,EAAQmB,OAAO,SAAA3D,GAAC,OAAsB,IAApBA,EAAEtG,SAASmK,SAEvChO,EAAKiO,SAAS,CAACtB,QAAQA,EAAQD,OAAOA,EAAOwB,SAAQ,KA5CvClO,EAgDjBmO,gBAhDiBnK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAgDC,SAAAjJ,IAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACV4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,GAC9D1J,EAAKyM,iBAAiB/C,EAAKA,KAAKC,YAAYC,SAF9B,wBAAAlK,EAAAkB,SAAAvB,MAhDDW,EAsDrBoO,kBAAoB,WAClBpO,EAAKmO,mBArDDnO,EAAKmD,MAAQ,CACXkL,QAAS,GACTC,SAAU,GACVJ,SAAQ,EACRxB,OAAO,GACPC,QAAQ,IAPK3M,wEAsEf,IAAAuO,EAAA/M,KACJ,OACIX,EAAArB,EAAAsB,cAAA,WACKD,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,oBACdL,EAAArB,EAAAsB,cAAC0N,GAAAhP,EAAD,CACAiP,MAAOjN,KAAK2B,MAAMwJ,QAClB0B,QAAS7M,KAAK2B,MAAMkL,QACpBC,SAAU9M,KAAK2B,MAAMmL,SACrBI,QAAS,SAAAL,GAAO,OAAIE,EAAKN,SAAS,CAAEI,aACpCM,SAAU,SAAAL,GAAQ,OAAIC,EAAKN,SAAS,CAAEK,yBAhFRjM,cCoBtCuM,GAASC,EAAQ,KACjBC,GAASC,wBAAaC,MAItBC,GAAY,CAChBC,WAAY,CACVnO,MAAO,CACLoO,UAAWC,IACXnO,MAAO,OAKQoO,eACnB,SAAAA,EAAYpP,GAAO,IAAAD,EAAAgE,OAAAqI,EAAA,EAAArI,CAAAxC,KAAA6N,IACjBrP,EAAAgE,OAAAsI,EAAA,EAAAtI,CAAAxC,KAAAwC,OAAAuI,EAAA,EAAAvI,CAAAqL,GAAA7C,KAAAhL,KAAMvB,KA2BRqP,cA5BmBtL,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA4BH,SAAAjJ,IAAA,IAAAkQ,EAAAC,EAAA,OAAAjQ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEM6P,KAAMC,IAAN,GAAApL,OAAasK,GAAOe,IAAIC,UAAxB,cAFN,OAENL,EAFM7P,EAAAmQ,KAGNL,EAAWD,EAAI7F,KACrB1J,EAAKiO,SAAS,CAAEuB,SAAUA,IAJd9P,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoQ,GAAApQ,EAAA,SAMZe,QAAQC,IAAR,0BAAA4D,OAAA5E,EAAAoQ,KANY,yBAAApQ,EAAAkB,SAAAvB,EAAA,iBA5BGW,EAsCnB0E,UAAY,SAAChC,GACX,MAAO,CACLlE,GAAE,cAAA8F,OAAgB5B,GAClBiC,gBAAA,mBAAAL,OAAoC5B,KAzCrB1C,EA6CnB+P,aAAe,SAACzQ,EAAOqG,GACrB3F,EAAKiO,SAAS,CAAEnK,MAAO6B,EAASqK,WAAY,GAAGC,YAAa,GAAGC,cAAc,GAAGC,eAAe,MA9C9EnQ,EAkDnBoQ,UAAY,SAACC,GAEX,IAAIC,EAAS,GACTC,EAAS,IAAIC,WACbnF,EAAOgF,EAAOI,OAAOC,MAAM,GAAGrF,KAElCkF,EAAOI,WAAWN,EAAOI,OAAOC,MAAM,GAAG,UACzCH,EAAOK,OAAS,SAACP,GAKT,IAHJ,IACQQ,EADGR,EAAOI,OAAOH,OACJQ,MAAM,WACnBC,EAAQF,EAAM,GAAGC,MAAM,KACnB/G,EAAE,EAAEA,EAAE8G,EAAM7C,OAAOjE,IAAI,CAG3B,IAFA,IAAIiH,EAAM,GACNC,EAAYJ,EAAM9G,GAAG+G,MAAM,KACvB/C,EAAE,EAAEA,EAAEgD,EAAQ/C,OAAOD,IACzBiD,EAAID,EAAQhD,IAAMkD,EAAYlD,GAElCuC,EAAOlF,KAAK4F,GAEhB,IAAI/S,EAAI,IAAIiT,KAAK,CAAC/D,KAAKE,UAAUiD,IAAUjF,EAAK8F,QAAQ,OAAO,SAAU,CAACC,KAAM,qBAChFpR,EAAKqR,gBAAgBpT,KAvEZ+B,EAgFnBqR,gBAhFmB,eAAA/H,EAAAtF,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAgFF,SAAAiB,EAAMtL,GAAN,OAAAsB,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,cAAA4J,EAAA5J,KAAA,EACP0R,KAAGC,WAAWtT,EAAG,CACnBuT,WAAY5C,GAAO0C,GAAGE,WACtBC,QAAQ7C,GAAO0C,GAAGG,QAClBC,OAAQ9C,GAAO0C,GAAGI,OAClBC,YAAa/C,GAAO0C,GAAGK,YACvBC,gBAAiBhD,GAAO0C,GAAGM,kBAC5BhJ,KAAM,SAAAkB,GACL9J,EAAK6R,UAAU/H,KACdgI,MAAM,SAAAC,GAAG,OAAGC,MAAMD,KATV,wBAAAvI,EAAA5I,SAAA2I,MAhFE,gBAAAL,GAAA,OAAAI,EAAAH,MAAA3H,KAAA4H,YAAA,GAAApJ,EA6FnB6R,UA7FmB,eAAAtH,EAAAvG,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA6FP,SAAAkC,EAAMyH,GAAN,IAAA7H,EAAA,OAAA7K,EAAAC,EAAAC,KAAA,SAAAkL,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA/K,MAAA,cACJwK,EAAY,CAChB5L,GAAI0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzCjB,KAAM,OACN/F,KAAM4G,EAAMK,IAAInB,QAAV,GAAA7M,OAAqBsK,GAAO0C,GAAGG,QAA/B,KAA0C,IAChDvF,MAAM,KACNqG,KAAMN,EAAM3R,SACZ2L,QAAQ,KACRxC,SAAQ,GAGVX,uBAAoBC,QAAQ,iBAAkB,sEAAe,KAXnD4B,EAAA/K,KAAA,EAYJ4I,IAAIC,QAAQC,YAAiBD,EAAoB,CAACE,MAAOyB,KAAexB,KAAK,kBACjF5I,EAAKwS,iBAbG,wBAAA7H,EAAA/J,SAAA4J,MA7FO,gBAAAH,GAAA,OAAAE,EAAApB,MAAA3H,KAAA4H,YAAA,GAAApJ,EA8GnBwS,aA9GmBxO,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA8GJ,SAAAmK,IAAA,OAAAlT,EAAAC,EAAAC,KAAA,SAAAiT,GAAA,cAAAA,EAAA/S,KAAA+S,EAAA9S,MAAA,cAAA8S,EAAA9S,KAAA,EACP4I,IAAIC,QAAQC,YAAiBD,IAAqBG,KAAK,SAAAc,GAE7D,IAAIiJ,EAAKjJ,EAAKA,KAAKC,YAAYC,MAAMkE,OAAO,SAAA3D,GAAC,OAAiB,OAAdA,EAAEV,UAAiC,IAAbU,EAAEV,UAEtEzJ,EAAKiO,SAAS,CAAC2E,QAAQD,MALZ,wBAAAD,EAAA9R,SAAA6R,MA9GIzS,EAwHnByM,iBAAiB,SAAC/C,GAChB,IAAIgD,EAAS,GAGTC,EAAUC,GAAaV,MAAMrC,IAAI,SAACgD,GACpC,IAAIC,EAAYF,GAAaT,MAAMtC,IAAI,SAACkD,EAAEhD,GACxC,MAAO,CAACjG,MAAK,GAAAQ,OAAIyI,GAAJzI,OAAQuI,GAAIG,MAAMD,EAAElJ,SAAS,MAE7C,MAAO,CAACC,MAAM+I,EAAEG,MAAMH,EAAEhJ,SAASiJ,KAGjCpD,EAAKoC,QAAQ,SAACmB,EAAQlD,GACrB,IAAImD,EAAcC,KAAKC,MAAMD,KAAKE,UAAUV,IACvCW,EAAWL,EAAQf,MACnBqB,EAAUN,EAAQd,MAElBqB,EAAc,CAAE1J,MAAOmJ,EAAQzO,GAAKwO,MAAOC,EAAQ5B,KAAKa,MAAMoB,EAASnB,MAAMoB,EAAUE,WAAWR,EAAQQ,WAAYC,WAAWT,EAAQS,WAAW1D,MAAMiD,EAAQjD,OAElK2D,EAAYhB,EAAQiB,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAQwJ,IAC3CO,EAAYlB,EAAQgB,GAAY9J,SAAS+J,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAF,GAAAQ,OAAaiJ,GAAbjJ,OAAwBgJ,KAEjFJ,EAAYS,GAAY9J,SAASgK,GAAYhK,SAASuH,KAAKoC,GAC3Db,EAAQgB,GAAcT,EAAYS,GAE/BjB,EAAOtB,KAAKoC,KAIlBb,EAAQb,QAAQ,SAAC/B,EAAErH,GACjB,IAAIuH,EAAOF,EAAElG,SAASiK,OAAO,SAAAC,GAAC,OAAsB,IAApBA,EAAElK,SAASmK,SAC1CrB,EAAQjK,GAAOmB,SAAUoG,IAE3B0C,EAASA,EAAQmB,OAAO,SAAA3D,GAAC,OAAsB,IAApBA,EAAEtG,SAASmK,SAEvChO,EAAKiO,SAAS,CAACtB,QAAQA,EAAQD,OAAOA,KA1JtB1M,EA6JnB6S,QAAS,SAAC/O,GACRkO,MAAMlO,IA9JW9D,EAkKnBmO,gBAlKmBnK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAkKD,SAAAwK,IAAA,OAAAvT,EAAAC,EAAAC,KAAA,SAAAsT,GAAA,cAAAA,EAAApT,KAAAoT,EAAAnT,MAAA,cAAAmT,EAAAnT,KAAA,EACV4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,GAC9D1J,EAAKyM,iBAAiB/C,EAAKA,KAAKC,YAAYC,SAF9B,wBAAAmJ,EAAAnS,SAAAkS,MAlKC9S,EAwKnBgT,WAAW,SAACC,IACqC,IAAxCjT,EAAKmD,MAAM+P,aAAaC,SAASF,GAChCjT,EAAKiO,SAAS,CACViF,aAAY,GAAA5O,OAAAN,OAAAoP,GAAA,EAAApP,CAAMhE,EAAKmD,MAAM+P,cAAjB,CAA+BD,MAG/CjT,EAAKiO,SAAS,CAACiF,aAAclT,EAAKmD,MAAM+P,aAAapF,OAAO,SAASrD,GACjE,OAAOA,IAASwI,OA/KXjT,EAoLnBqT,YAAc,WAEZrT,EAAKmD,MAAMuJ,OAAO7C,IAAI,SAACoD,EAASlD,GAC5B,IAAqD,IAAlD/J,EAAKmD,MAAM6M,WAAWsD,QAAQrG,EAAQnJ,OA+BnC,OAAO,EA7BP,IAAIyP,EAAUvT,EAAKmD,MAAMyP,QAE3B5S,EAAKmD,MAAMqQ,OAAO3J,IAAlB,eAAA4J,EAAAzP,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAsB,SAAAoL,EAAMC,EAAG5J,GAAT,IAAAE,EAAA2J,EAAAC,EAAAzJ,EAAA,OAAA7K,EAAAC,EAAAC,KAAA,SAAAqU,GAAA,cAAAA,EAAAnU,KAAAmU,EAAAlU,MAAA,UAGdqK,EAAuB,OAAhBgD,EAAQjD,MAAaiD,EAAQjD,MAAM4D,UAAU,SAAAzD,GAAC,OAAIA,EAAE6C,QAAU2G,KAAK,EAC1EC,EAAQ5T,EAAKmD,MAAMyP,QAAQhF,UAAU,SAAAzD,GAAC,OAAIA,EAAEkB,OAASsI,KAEhD,IAAR1J,IAAmB,IAARA,EANM,CAAA6J,EAAAlU,KAAA,eAOdkJ,uBAAoBiL,QAAQ,gBAA5B,GAAAzP,OAAgD2I,EAAQD,MAAxD,wBAAA1I,OAAqEqP,EAArE,uDAAqF,KAPvEG,EAAAE,OAAA,SAQP,IARO,WAUD,IAAXJ,EAVY,CAAAE,EAAAlU,KAAA,gBAYhB2T,EAAQK,GAAOK,OAASjU,EAAKmD,MAAM8Q,OACnCV,EAAQK,GAAOM,IAAf,GAAA5P,OAAwBtE,EAAKmD,MAAMgR,cAAcC,MAAMC,OAAO,cAA9D,KAAA/P,OAA+EtE,EAAKmD,MAAMgR,cAAcG,IAAID,OAAO,eAC7GR,GAAc,IAAR5J,EAAU,CAACsJ,EAAQK,IAAQ3G,EAAQjD,MAAM1F,OAAOiP,EAAQK,IAE9DxJ,EAAY,CAChB5L,GAAIyO,EAAQnJ,MACZkG,MAAO6J,GAlBOC,EAAAlU,KAAA,GAqBZ4I,IAAIC,QAAQC,YAAiBD,EAAoB,CAACE,MAAOyB,KAAexB,KAAK,SAAAc,GAC9EZ,uBAAoBC,QAAQ,iBAA5B,GAAAzE,OAAiD2I,EAAQD,MAAzD,iBAAA1I,OAAoEqP,EAApE,6DAAqF,OAtBxE,QAAAG,EAAAlU,KAAA,wBAAAkU,EAAAE,OAAA,SAwBL,GAxBK,yBAAAF,EAAAlT,SAAA8S,MAAtB,gBAAA9I,EAAAC,GAAA,OAAA4I,EAAAtK,MAAA3H,KAAA4H,YAAA,OA3LSpJ,EA0NnBuU,iBAAmB,SAACJ,EAAeK,GACjCxU,EAAKiO,SAAS,CAAEkG,gBAAeK,YA3NdxU,EAgOnByU,qBAAuB,WACrB,OACE5T,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACuC,QAAQ,KACnBzC,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,WAAWuC,MAAO,CAAC8K,QAAQ,SACjChL,EAAArB,EAAAsB,cAAA,+BACAD,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAAC2T,SAAS,UAAW1U,EAAKmD,MAAMgR,cAAcC,MAAMC,OAAO,gBAEvExT,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,SACnBhL,EAAArB,EAAAsB,cAAA,6BACAD,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAAC2T,SAAS,UAAW1U,EAAKmD,MAAMgR,cAAcG,IAAID,OAAO,kBAzOxDrU,EAiPnBoO,kBAjPmBpK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAiPC,SAAAqM,IAAA,OAAApV,EAAAC,EAAAC,KAAA,SAAAmV,GAAA,cAAAA,EAAAjV,KAAAiV,EAAAhV,MAAA,cAAAgV,EAAAhV,KAAA,EACZiV,QAAQC,IAAI,CAAC9U,EAAKwS,iBAAiB5J,KAAK,SAACkB,GAC7C9J,EAAKiO,SAAS,CAACC,SAAQ,MAFP,wBAAA0G,EAAAhU,SAAA+T,MAjPD3U,EAyPnB+U,qBAAuB,SAAAzV,GAErBU,EAAKiO,SAAS,CAACuF,OAAOlU,EAAMmR,OAAO3M,SA3PlB9D,EA8PnBgV,mBAAqB,SAAA1V,GACnBU,EAAKiO,SAAS,CAACgG,OAAO3U,EAAMmR,OAAO3M,SA7PnC,IAAMmR,EAAQnG,KAFG,OAGjB9O,EAAKmD,MAAQ,CACXW,MAAM,EACNoR,WAAY,KACZ1F,SAAU,GAEVQ,WAAY,GACZC,YAAa,GAEbC,cAAc,GACdC,eAAe,GAEf8D,OAAO,IACP/F,SAAQ,EACRxB,OAAO,GACPC,QAAQ,GACRiG,QAAQ,GACRM,aAAa,GACbiC,aAAY,EACZ3B,OAAO,GACPW,cAAerF,GAAOsG,MAAMH,EAAMI,QAAQC,SAAS,EAAG,QAASL,EAAMI,UAEtErV,EAAK6S,QAAU7S,EAAK6S,QAAQ9P,KAAbiB,OAAAuR,GAAA,EAAAvR,CAAAhE,IAxBCA,wEAkQV,IAAAuO,EAAA/M,KAEP,OACEX,EAAArB,EAAAsB,cAAA,WAEIU,KAAK2B,MAAM+K,QACXrN,EAAArB,EAAAsB,cAAA,oBAEFD,EAAArB,EAAAsB,cAAC0U,EAAA,SAAD,KACU3U,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,MACpBT,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACVjK,EAAArB,EAAAsB,cAAA,WAASC,MAAO,CAAC/B,gBAAgB,QAASkC,UAAU,WAGpDL,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAAA,WAIFD,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOC,UAAW,EAAGtE,SAAS,UAC5BH,EAAArB,EAAAsB,cAAC0E,EAAA,EAAD,CAAMI,eAAe,UAAUC,UAAU,UAAU/B,MAAOtC,KAAK2B,MAAMW,MAAO4B,SAAUlE,KAAKuO,aAAc3O,aAAW,uBAClHP,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK6I,MAAM,mCAAaxL,KAAKkD,UAAU,KACvC7D,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK6I,MAAM,mCAAaxL,KAAKkD,UAAU,OAG3C7D,EAAArB,EAAAsB,cAAC2U,GAAD,CAAU3R,MAAOtC,KAAK2B,MAAMW,MAAOpB,MAAO,GACxC7B,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAACgG,GAAD,CAAe/F,MAAO,CAACE,MAAM,OAAOK,OAAO,IAAK4F,UAAW,CAAClG,SAAS,WAAW0U,MAAM,KAAMhO,QAAS,MACrG7G,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAAC8K,QAAQ,SAGvChL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QAGnBJ,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4U,aAAa,GAAG9J,QAAQ,SACrChL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC6U,UAAU,KACrB/U,EAAArB,EAAAsB,cAAA,SAAOtC,GAAG,wBAAwBuC,MAAO,CAAC8K,QAAQ,QAASuF,KAAK,OAAQ/F,KAAK,OAAO3F,SAAU,SAAAzH,GAAC,OAAIsQ,EAAK6B,UAAUnS,IAAI4X,OAAO,SAC7HhV,EAAArB,EAAAsB,cAAA,SAAOgV,QAAQ,yBACbjV,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ+C,QAAQ,YAAYpD,MAAM,UAAUuF,UAAU,QAAtD,OAMJvD,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,WAAWuC,MAAO,CAACE,MAAM,MAAMiB,WAAW,KAClDrB,EAAArB,EAAAsB,cAACiV,GAAA,EAAD,CAAahV,MAAO,CAACE,MAAM,SAC7BJ,EAAArB,EAAAsB,cAACkV,GAAA,EAAD,CAAYxX,GAAG,2BAAf,UACAqC,EAAArB,EAAAsB,cAACmV,GAAA,EAAD,CACEC,QAAQ,0BACR1X,GAAG,oBACH2X,UAAQ,EACRrS,MAAOtC,KAAK2B,MAAMqQ,OAClB9N,SAAU,SAAApG,GAAK,OAAGiP,EAAKwG,qBAAqBzV,IAC5CqJ,MAAO9H,EAAArB,EAAAsB,cAACsV,GAAA,EAAD,CAAO5X,GAAG,yBACjB6X,YAAa,SAAAC,GAAQ,OACnBzV,EAAArB,EAAAsB,cAAA,WAEEwV,EAASzM,IAAI,SAACoJ,EAAElJ,GAAH,OACVlJ,EAAArB,EAAAsB,cAACyV,GAAA,EAAD,CACAjE,IAAKvI,EACLiD,MAAOiG,EAAE9B,QAAQ,QAAQ,UAMhClC,UAAWA,IACXzN,KAAK2B,MAAMyP,QAAQ/I,IAAI,SAAAoJ,GAAC,OACxBpS,EAAArB,EAAAsB,cAAC0V,GAAA,EAAD,CAAUlE,IAAKW,EAAEzU,GAAIsF,MAAOmP,EAAE5H,MAC3B4H,EAAE5H,KAAK8F,QAAQ,QAAQ,WAQ1BtQ,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,oBACfL,EAAArB,EAAAsB,cAAC2V,GAAD,CAAgBC,cAAelV,KAAKqR,YAIpChS,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAACE,MAAM,OAAO4K,QAAQ,SACtDhL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4V,YAAY,MAEvB9V,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,0BACAD,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAAEO,OAAQ,IAAIL,MAAO,IAAI4K,QAAQ,OAAO7M,gBAAgB,UAAU6X,aAAa,KAE1FrV,KAAK2B,MAAMqQ,OAAO3J,IAAI,SAACY,EAAKV,GAC1B,OACElJ,EAAArB,EAAAsB,cAACyV,GAAA,EAAD,CACExV,MAAO,CAAC+V,OAAO,EAAE9X,gBAAgB,UAAUH,MAAM,QACjDyT,IAAK7H,EACLuC,MAAOvC,EAAK0G,QAAQ,QAAQ,UAS5CtQ,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,0BACAD,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAAEO,OAAQ,IAAIL,MAAO,IAAI4K,QAAQ,OAAO7M,gBAAgB,UAAU6X,aAAa,KAE9FrV,KAAK2B,MAAMuJ,OAAO7C,IAAI,SAACoD,EAASlD,GAC5B,OAAqD,IAAlDwE,EAAKpL,MAAM6M,WAAWsD,QAAQrG,EAAQnJ,OAEnCjD,EAAArB,EAAAsB,cAACyV,GAAA,EAAD,CACExV,MAAO,CAAC+V,OAAO,EAAE9X,gBAAgB,UAAUH,MAAM,QACjDyT,IAAKrF,EAAQD,MACbA,MAAOC,EAAQD,QAIhB,OAOjBnM,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAEO,OAAQ,GAAGL,MAAO,MAC9BJ,EAAArB,EAAAsB,cAAA,yBACAD,EAAArB,EAAAsB,cAAA,WACID,EAAArB,EAAAsB,cAACiW,GAAA,EAAD,CACEjT,MAAOtC,KAAK2B,MAAM8Q,OAClBvO,SAAUlE,KAAKwT,mBACfxW,GAAG,kBACH4S,KAAK,SACL4F,gBAAiB,CACfC,QAAQ,GAEVhV,QAAQ,gBAMhBpB,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,WAAMU,KAAKiT,wBACX5T,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAACoW,GAAA1X,EAAD,CACEsE,MAAOtC,KAAK2B,MAAMgR,cAClBgD,SAAU3V,KAAK+S,iBACf6C,iBAAiB,KAIvBvW,EAAArB,EAAAsB,cAAA,WACQD,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ6B,MAAO,CAAC/B,gBAAgB,UAAUgD,YAAY,EAAED,YAAY,OAAOlD,MAAM,OAAOoC,MAAM,KAAMmB,QAAS,WAAKmM,EAAK8E,gBAAvH,cAUlBxS,EAAArB,EAAAsB,cAAC2U,GAAD,CAAU3R,MAAOtC,KAAK2B,MAAMW,MAAOpB,MAAO,GAC1C7B,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAACgG,GAAD,CAAe/F,MAAO,CAACE,MAAM,OAAOK,OAAO,IAAK4F,UAAW,CAAClG,SAAS,WAAW0U,MAAM,KAAMhO,QAAS,MACnG7G,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAAC8K,QAAQ,OAAO+J,UAAU,KAExD/U,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QAEnBJ,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,sBAuBfL,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAACE,MAAM,MAAM4V,aAAa,GAAGQ,WAAW,WACtExW,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAO,OAAO4K,QAAQ,QAASrN,GAAG,yBAC3CqC,EAAArB,EAAAsB,cAACwW,GAAD,CAAiB1E,QAASpR,KAAK2B,MAAMyP,QAAS2E,OAAQ/V,KAAK2B,MAAMuJ,OAAQwD,cAAe1O,KAAK2B,MAAM+M,iCArc9E7N,aA4dzC,SAASiV,GAAgBrX,GACrB,IAAI+K,EAAc,GACdwM,EAAgB,GA6BpB,OA3BAvX,EAAMsX,OAAO1N,IAAI,SAACoD,EAASlD,IAC4B,IAAhD9J,EAAMiQ,cAAcoD,QAAQrG,EAAQnJ,QACd,OAAlBmJ,EAAQjD,OACXiD,EAAQjD,MAAMH,IAAI,SAAC4N,EAAQ1N,IAC2B,IAAjD9J,EAAM2S,QAAQhF,UAAU,SAAAzD,GAAC,OAAEA,EAAE3L,KAAKiZ,EAAQjZ,OACxCwM,EAAYgD,OAAQ,EACnBhD,EAAYnB,IAAI,SAACkD,EAAEhD,GAEVgD,EAAEvO,KAAOiZ,EAAQjZ,GAClBwM,EAAYjB,GAAGmB,OAAOE,KAAK,CAACC,KAAK4B,EAAQD,MAAOxO,GAAGyO,EAAQnJ,SAEb,IAAtC0T,EAAerE,SAASsE,EAAQjZ,MACpCwM,EAAYI,KAAK,CAAC5M,GAAGiZ,EAAQjZ,GAAG6M,KAAKoM,EAAQpM,KAAKH,OAAO,CAAC,CAACG,KAAK4B,EAAQD,MAAOxO,GAAGyO,EAAQnJ,UAC1F0T,EAAepM,KAAKqM,EAAQjZ,OAIZ,IAAvBwM,EAAYgD,SACjBhD,EAAYI,KAAK,CAAC5M,GAAGiZ,EAAQjZ,GAAG6M,KAAKoM,EAAQpM,KAAKH,OAAO,CAAC,CAACG,KAAK4B,EAAQD,MAAOxO,GAAGyO,EAAQnJ,UAC1F0T,EAAepM,KAAKqM,EAAQjZ,UAS1CqC,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAACO,OAAO,MACvBT,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QAAQJ,EAAArB,EAAAsB,cAACoH,GAAD,CAAgBsP,eAAgBA,EAAgBxM,YAAaA,MAOlG,SAASpH,GAAS3D,GAAO,IACb4D,EAAqC5D,EAArC4D,SAAUC,EAA2B7D,EAA3B6D,MAAOpB,EAAoBzC,EAApByC,MAAUqB,EADdC,OAAAC,EAAA,EAAAD,CACwB/D,EADxB,8BAGrB,OACEY,EAAArB,EAAAsB,cAACoD,EAAA,EAADF,OAAAG,OAAA,CACEC,UAAU,MACVjD,KAAK,WACLkD,OAAQP,IAAUpB,EAClBlE,GAAE,mBAAA8F,OAAqB5B,GACvB6B,kBAAA,cAAAD,OAA+B5B,IAC3BqB,GAEHD,IAAUpB,GAAS7B,EAAArB,EAAAsB,cAAC0D,EAAA,EAAD,CAAKC,EAAG,GAAIZ,yFCrjBzB,SAAS6T,GAAYzX,GAAO,IAAA+E,EACjBrB,IAAMsB,UAAS,GADEC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAClC+B,EADkC7B,EAAA,GAC5B8B,EAD4B9B,EAAA,GAAAyS,EAEhBhU,IAAMsB,SAAS,IAFC2S,EAAA5T,OAAAmB,EAAA,EAAAnB,CAAA2T,EAAA,GAElCtM,EAFkCuM,EAAA,GAE5BC,EAF4BD,EAAA,GAAAE,EAGdnU,IAAMsB,SAAS,IAHD8S,EAAA/T,OAAAmB,EAAA,EAAAnB,CAAA8T,EAAA,GAGlC5L,EAHkC6L,EAAA,GAG3BC,EAH2BD,EAAA,GASnC9Q,EAAc,WAClBD,GAAQ,IAIJqK,EAAe,eAAAnO,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAjJ,IAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACT,KAARyL,GAAqB,KAARa,EADI,CAAAxM,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAEZ4I,IAAIC,QAAQC,YAAiBD,EAAmB,CAACE,MAAO,CAC1DnK,GAAIyB,EAAMzB,GACV6M,KAAMA,EACNa,MAAMA,MACHtD,KAAK3B,KANM,OAAAvH,EAAAE,KAAA,eAQhBoS,MAAM,qDARU,wBAAAtS,EAAAkB,SAAAvB,MAAH,yBAAA6D,EAAAiG,MAAA3H,KAAA4H,YAAA,GAYjB6O,EAAWhY,EAAMiY,IAAIhO,KAAK,SAAAC,GAAC,OAAIA,EAAE3L,KAAOyB,EAAMzB,KAAI6M,KAClD8M,EAAYlY,EAAMiY,IAAIhO,KAAK,SAAAC,GAAC,OAAIA,EAAE3L,KAAOyB,EAAMzB,KAAI0N,MAKvD,OACErL,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQL,MAAM,UAAUuD,QA7BJ,WACtB4E,GAAQ,KA4BN,QAGAnG,EAAArB,EAAAsB,cAACuG,GAAA,EAAD,CAAQN,KAAMA,EAAMO,QAASL,EAAa1C,kBAAgB,qBACxD1D,EAAArB,EAAAsB,cAACiH,GAAA,EAAD,CAAavJ,GAAG,qBAAhB,aACAqC,EAAArB,EAAAsB,cAAC0G,GAAA,EAAD,KACE3G,EAAArB,EAAAsB,cAAC2G,GAAA,EAAD,+GAIA5G,EAAArB,EAAAsB,cAACiW,GAAA,EAAD,CACEjT,MAAOuH,EACP3F,SAAU,SAACzH,GAAD,OAAO4Z,EAAQ5Z,EAAEwS,OAAO3M,QAClC8D,WAAS,EACTkP,OAAO,QACP9J,MAAM,OACNoL,YAAaH,EACb7G,KAAK,QACLiH,WAAS,IAEXxX,EAAArB,EAAAsB,cAACiW,GAAA,EAAD,CACEjT,MAAOoI,EACPxG,SAAU,SAACzH,GAAD,OAAO+Z,EAAS/Z,EAAEwS,OAAO3M,QACnC8D,WAAS,EACTkP,OAAO,QACP9J,MAAM,QACNoL,YAAaD,EACb/G,KAAK,QACLiH,WAAS,KAGbxX,EAAArB,EAAAsB,cAAC6G,GAAA,EAAD,KACE9G,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQkD,QAAS6E,EAAapI,MAAM,WAApC,UAGAgC,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQkD,QAASiP,EAAiBxS,MAAM,WAAxC,oJCjEJyZ,GAAU5Z,YAAW,CACzBE,KAAM,CACJ2Z,aAAc,qBAEhBC,UAAW,CACTxZ,gBAAiB,YALLN,CAOb8G,KAEGiT,GAAS/Z,YAAW,SAAAC,GAAK,MAAK,CAClCC,KAAM,CACJ8Z,cAAe,OACfC,SAAU,GACVC,WAAYja,EAAMka,WAAWC,kBAC7BnC,YAAahY,EAAMoa,QAAQ,GAC3BC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAC,KAAK,KACPha,UAAW,CACTJ,MAAO,UACPqa,QAAS,GAEXC,aAAc,CACZta,MAAO,UACP+Z,WAAYja,EAAMka,WAAWO,kBAE/BC,UAAW,CACTxa,MAAO,YAGXyX,SAAU,KA9BG5X,CA+BX,SAAAuB,GAAK,OAAIY,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAKmV,eAAa,GAAKrZ,MAI9B2E,GAAYC,YAAW,SAAAlG,GAAK,MAAK,CACrCC,KAAM,CACJkG,SAAU,GAEZxB,QAAS,CACPA,QAAS3E,EAAMoa,QAAQ,IAEzBQ,MAAO,CACLva,gBAAiBL,EAAMG,QAAQ0a,WAAWC,OAE5CC,MAAO,CACL1a,gBAAiB,cAIN,SAAS2a,GAAe1Z,GACrC,IAAM8E,EAAUH,KAD4BI,EAElBrB,IAAMsB,SAAS,GAFGC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAErClB,EAFqCoB,EAAA,GAE9BE,EAF8BF,EAAA,GAItCwE,EAAOzJ,EAAMyJ,OAAO,GAAG,GAAGzJ,EAAMyJ,KAMhCkQ,OAAyBC,IAAfnQ,EAAKkQ,QAAoB,GAAGlQ,EAAKkQ,QAC3CE,OAAyBD,IAAfnQ,EAAKoQ,QAAoB,GAAGpQ,EAAKoQ,QAC3CC,OAAyBF,IAAfnQ,EAAKqQ,QAAoB,GAAGrQ,EAAKqQ,QAEjD,OACElZ,EAAArB,EAAAsB,cAAA,OAAKI,UAAW6D,EAAQnG,MACtBiC,EAAArB,EAAAsB,cAAA,OAAKI,UAAW6D,EAAQwU,OACtB1Y,EAAArB,EAAAsB,cAACwX,GAAD,CAASxU,MAAOA,EAAO4B,SAXR,SAACpG,EAAOqG,GAC3BP,EAASO,IAU0CvE,aAAW,eACxDP,EAAArB,EAAAsB,cAAC2X,GAADzU,OAAAG,OAAA,CAAS4B,KAAMlF,EAAArB,EAAAsB,cAACkZ,GAAAxa,EAAD,OAA0BkF,GAAU,KACnD7D,EAAArB,EAAAsB,cAAC2X,GAADzU,OAAAG,OAAA,CAAS4B,KAAMlF,EAAArB,EAAAsB,cAACmZ,GAAAza,EAAD,OAAsBkF,GAAU,KAC/C7D,EAAArB,EAAAsB,cAAC2X,GAADzU,OAAAG,OAAA,CAAS4B,KAAMlF,EAAArB,EAAAsB,cAACoZ,GAAA1a,EAAD,OAAsBkF,GAAU,OAGrD7D,EAAArB,EAAAsB,cAAA,WACcD,EAAArB,EAAAsB,cAACqZ,GAAD,CAAUrW,MAAOA,EAAOpB,MAAO,GAE7B7B,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAAEO,OAAQ,MAEzBsY,EAAQ/P,IAAI,SAAAM,GACR,OACAtJ,EAAArB,EAAAsB,cAACwK,GAAA,EAAD,KACIzK,EAAArB,EAAAsB,cAACsZ,GAAA,EAAD,KACIvZ,EAAArB,EAAAsB,cAACuZ,GAAA7a,EAAD,OAERqB,EAAArB,EAAAsB,cAAC4K,GAAA,EAAD,CAAcC,QAASxB,EAAEH,MAAMmH,QAAQ,gDAAgD,IAAIA,QAAQ,QAAQ,IAAKlG,UAAWd,EAAEmQ,WAOvIzZ,EAAArB,EAAAsB,cAACqZ,GAAD,CAAUrW,MAAOA,EAAOpB,MAAO,GAC/B7B,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAAEO,OAAQ,MAEvBwY,EAAQjQ,IAAI,SAAAM,GACR,OACAtJ,EAAArB,EAAAsB,cAACwK,GAAA,EAAD,KACIzK,EAAArB,EAAAsB,cAACsZ,GAAA,EAAD,KACIvZ,EAAArB,EAAAsB,cAACuZ,GAAA7a,EAAD,OAERqB,EAAArB,EAAAsB,cAAC4K,GAAA,EAAD,CAAcC,QAASxB,EAAEkB,KAAMJ,UAAWd,EAAEoQ,YAOtD1Z,EAAArB,EAAAsB,cAACqZ,GAAD,CAAUrW,MAAOA,EAAOpB,MAAO,GAC/B7B,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAAEO,OAAQ,MAEvByY,EAAQlQ,IAAI,SAAAM,GACR,OACAtJ,EAAArB,EAAAsB,cAACwK,GAAA,EAAD,KACIzK,EAAArB,EAAAsB,cAACsZ,GAAA,EAAD,KACIvZ,EAAArB,EAAAsB,cAACuZ,GAAA7a,EAAD,OAERqB,EAAArB,EAAAsB,cAAC4K,GAAA,EAAD,CAAcC,QAASxB,EAAEkB,KAAMJ,UAAWd,EAAEqQ,eAaxE,SAAS9V,GAAUhC,GACf,MAAO,CACLlE,GAAE,cAAA8F,OAAgB5B,GAClBiC,gBAAA,mBAAAL,OAAoC5B,IAIxC,SAASkB,GAAS3D,GAAO,IACf4D,EAAqC5D,EAArC4D,SAAUC,EAA2B7D,EAA3B6D,MAAOpB,EAAoBzC,EAApByC,MAAUqB,EADZC,OAAAC,EAAA,EAAAD,CACsB/D,EADtB,8BAGvB,OACEY,EAAArB,EAAAsB,cAACoD,EAAA,EAADF,OAAAG,OAAA,CACEC,UAAU,MACVjD,KAAK,WACLkD,OAAQP,IAAUpB,EAClBlE,GAAE,mBAAA8F,OAAqB5B,GACvB6B,kBAAA,cAAAD,OAA+B5B,IAC3BqB,GAEHD,IAAUpB,GAAS7B,EAAArB,EAAAsB,cAAC0D,EAAA,EAAD,KAAMX,kBChK5B4W,GAAU,SAAAC,GACZ,OAAGA,EAAI1M,OAAO,EACHkE,KAAKyI,MAAMD,EAAIE,OAAQ,SAAEnW,EAAGsI,GAAL,OAAYtI,EAAIsI,GAAG,GAAM2N,EAAI1M,QACxC,IAAd0M,EAAI1M,OACF0M,EAAI,GAEJ,GCQPG,IDJuCxY,YCIhC,SAAApC,GAAK,OAChBuV,EAAA,cAACsF,GAAA,EAAWC,KAAZ/W,OAAAG,OAAA,GACMlE,EADN,CAEE+a,KAAMC,eACH9Q,EAAE,SAAAjH,GAAA,OAAAA,EAAGgY,MACLC,EAAE,SAAA7R,GAAA,OAAAA,EAAG8R,MACLC,MAAMC,WAgCPC,GAAO7c,YA5BQ,iBAAO,CAC1BE,KAAM,CACJiN,QAAS,OACTiL,OAAQ,OACR0E,cAAe,SAwBmB,CAAEnQ,KAAM,cAAjC3M,CATU,SAAA6L,GAAA,IAAGxF,EAAHwF,EAAGxF,QAAY0W,EAAfzX,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,oBACrBiL,EAAA,cAACsF,GAAA,EAAOS,KAARvX,OAAAG,OAAA,GAAiBsX,EAAjB,CAA4Bva,UAAW6D,EAAQnG,UAS3C8c,GAAQhd,YAtBY,SAAAC,GAAK,MAAK,CAClCqO,MAAO,CACL2I,aAAchX,EAAMoa,QAAQ,GAC5B4C,WAAY,YAmB4B,CAAEtQ,KAAM,eAAtC3M,CAPU,SAAAkd,GAAA,IAAG7W,EAAH6W,EAAG7W,QAAY0W,EAAfzX,OAAAC,EAAA,EAAAD,CAAA4X,EAAA,oBACtBpG,EAAA,cAACsF,GAAA,EAAOY,MAAR1X,OAAAG,OAAA,CAAcjD,UAAW6D,EAAQiI,OAAWyO,MAOxCI,GAAOnd,YAjBY,iBAAO,CAC9Bod,KAAM,CACJN,cAAe,oBAeuB,CAAEnQ,KAAM,cAArC3M,CALU,SAAAqd,GAAA,IAAGhX,EAAHgX,EAAGhX,QAAY0W,EAAfzX,OAAAC,EAAA,EAAAD,CAAA+X,EAAA,oBACrBvG,EAAA,cAACsF,GAAA,EAAOe,KAAR7X,OAAAG,OAAA,CAAajD,UAAW6D,EAAQ+W,MAAUL,MAQtCO,GAAU,SAAAvI,EAAAwI,GAAA,IACZC,EADYzI,EACZyI,OAAQC,EADI1I,EACJ0I,MAAmBC,EADfH,EACOC,OAA6BG,EADpCJ,EAC6BE,MAD7B,OAEXD,IAAWE,GAAgBD,IAAUE,GAGrBC,eACnB,SAAAA,EAAYrc,GAAO,IAAAD,EAAA,OAAAgE,OAAAqI,EAAA,EAAArI,CAAAxC,KAAA8a,IACjBtc,EAAAgE,OAAAsI,EAAA,EAAAtI,CAAAxC,KAAAwC,OAAAuI,EAAA,EAAAvI,CAAAsY,GAAA9P,KAAAhL,KAAMvB,KA0BNsc,eAAe,WACbvc,EAAKiO,SAAS,CAAEuO,cAAa,KA5Bdxc,EA8BjByc,oBAAoB,WAClBzc,EAAKiO,SAAS,CAAEuO,cAAa,KA/Bdxc,EAiCjBuU,iBAAmB,SAACJ,EAAeK,GACjCxU,EAAKyc,sBACLzc,EAAKiO,SAAS,CAAEkG,kBAChBnU,EAAK0c,gBApCU1c,EAwCjB0c,aAAa,WAmCX,IAlCA,IAAMC,EAAOC,OAAO5c,EAAKmD,MAAMgR,cAAcE,OAAO,SAC9CwI,EAAKD,OAAO5c,EAAKmD,MAAMgR,cAAcE,OAAO,OAC5CyI,EAAKF,OAAO5c,EAAKmD,MAAMgR,cAAcE,OAAO,OAE5C0I,EAAS/c,EAAKC,MAAM8c,OACpBC,EAAWhd,EAAKC,MAAM+c,SACtBC,EAAOjd,EAAKC,MAAMgd,KACpBC,EAAQ,EACRC,EAAS,CACX,CAACC,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,IAClF,CAACqD,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,IAClF,CAACqD,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,IAClF,CAACqD,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,IAClF,CAACqD,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,IAClF,CAACqD,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,IAClF,CAACqD,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,IAClF,CAACqD,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,IAClF,CAACqD,MAAM,EAAEC,KAAK,EAAEnC,IAAI,GAAIoC,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAIrD,QAAQ,GAAGE,QAAQ,GAAGC,QAAQ,KAGhFwD,EAAKzO,KAAO,CAAC6N,EAAME,EAAIC,IAEvBU,EAAG,EACH1T,EAAG,EACHmJ,EAAG,EACHvQ,EAAM,EACN+a,EAAa,GACbC,EAAa,GACbC,EAAe,GACfC,EAAe,GAEfC,EAAW,GACXC,EAAW,GAEP/T,EAAE,GAAGA,GAAG,EAAEA,IAEhByT,EAAI1O,KAAOyO,GAAIjI,SAASvL,EAAG,OAAOuL,SAAS,EAAG,SAASjB,OAAO,MAC9DvK,EAAIgF,KAAOyO,GAAIjI,SAASvL,EAAG,OAAOsK,OAAO,MACzCpB,EAAI8K,GAAYjP,KAAM,GAAAxK,OAAIwF,EAAJ,KAAAxF,OAASkZ,EAAT,SAAmB,gBAE3B,IAAXQ,MAAM/K,KAEPuK,EAAEZ,OAAOY,GACT1T,EAAE8S,OAAO9S,IAGG,KAFZpH,EAAQya,EAAOvP,UAAU,SAAAzD,GAAC,OAAEA,EAAEiT,QAAUI,GAAGrT,EAAEkT,OAAQpK,OAKnDkK,EADAza,IADAwa,GAEcE,MAAQI,EACtBL,EAAOza,GAAO2a,KAAOpK,EACrBkK,EAAOza,GAAOwY,IAAd,GAAA5W,OAAsBkZ,EAAtB,UAAAlZ,OAA2B2O,EAA3B,WAGW,OAAV8J,IAECW,GADAD,EAAaV,EAAOjP,OAAO,SAAA3D,GAAC,OAAEA,EAAEiT,QAAQI,GAAKZ,OAAOzS,EAAE8T,OAAOnU,KACrCD,IAAI,SAAAM,GAAC,OAAIA,EAAEmQ,MACnC6C,EAAOza,GAAOkX,QAAQuD,EAAOza,GAAOkX,QAAQtV,OAAOmZ,GACnDN,EAAOza,GAAO4a,IAAIH,EAAOza,GAAO4a,IAAIhZ,OAAOoZ,IAGjC,OAAXV,IAECY,GADAD,EAAeX,EAASlP,OAAO,SAAA3D,GAAC,OAAEyS,OAAOzS,EAAEiT,SAASI,GAAKZ,OAAOzS,EAAE8T,OAAOnU,KAC7CD,IAAI,SAAAM,GAE9B,OADW+H,KAAKyI,MAAOxQ,EAAEoQ,KAAKpQ,EAAEuD,WAAY,OAG9CyP,EAAOza,GAAOoX,QAAQqD,EAAOza,GAAOoX,QAAQxV,OAAOqZ,GACnDR,EAAOza,GAAOsa,SAASG,EAAOza,GAAOsa,SAAS1Y,OAAOsZ,IAG9C,OAAPX,IAEAa,GADAD,EAAWZ,EAAKnP,OAAO,SAAA3D,GAAC,OAAEA,EAAEiT,QAAQI,GAAKZ,OAAOzS,EAAE8T,OAAOnU,KACrCD,IAAI,SAAAM,GACtB,OAAOA,EAAEqQ,QAEX2C,EAAOza,GAAOqX,QAAQoD,EAAOza,GAAOqX,QAAQzV,OAAOuZ,GACnDV,EAAOza,GAAOua,KAAKE,EAAOza,GAAOua,KAAK3Y,OAAOwZ,KAMvDX,EAAOrR,QAAQ,SAAC3B,EAAEJ,GAChBoT,EAAOpT,GAAGuT,IAAM7C,GAAQtQ,EAAEmT,KAC1BH,EAAOpT,GAAGiT,SAAWvC,GAAQtQ,EAAE6S,UAC/BG,EAAOpT,GAAGkT,KAAOxC,GAAQtQ,EAAE8S,QAG7Bjd,EAAKiO,SAAS,CAACkP,OAAOA,EAAOjP,SAAQ,KAlIpBlO,EAqIjBke,YAAY,SAAC/C,EAAEqC,EAAE1T,GAGjB,IAFA,IAAIqU,EAAU,GACVZ,EAAK,CAACpC,EAAGqC,EAAG1T,GACRC,EAAE,EAAEA,GAAG,EAAEA,IAAI,CACjB,IAAMD,EAAIgF,KAAOyO,GAAIjI,SAASvL,EAAG,OAAOsK,OAAO,MAC/C8J,EAAQ/S,KAAKtB,GAGjB,OAAOqU,GA7IUne,EAgJnByG,UAAU,SAAC0U,EAAEqC,EAAE1T,GACb,IAAMiT,EAAS/c,EAAKC,MAAM8c,OACpBC,EAAWhd,EAAKC,MAAM+c,SACtBC,EAAOjd,EAAKC,MAAMgd,KAGlBmB,EAAcpe,EAAKke,YAAY/C,EAAEqC,EAAE1T,GAErCuU,EAAW,CACb,CAACJ,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,KACtE,CAACgB,IAAI,KAAKX,IAAI,GAAGN,SAAS,GAAGC,KAAK,GAAGjR,KAAK,CAACgR,SAAS,GAAGD,OAAO,GAAGE,KAAK,MAGtEmB,EAAYtS,QAAQ,SAACmS,EAAIlU,GACD,OAAnBsU,EAAStU,GAAGkU,MAAaI,EAAStU,GAAGkU,IAAMA,GAG9C,IAAIK,EAAYvB,EAAOjP,OAAO,SAAA3D,GAAC,OAAEA,EAAEiT,QAAQI,GAAKZ,OAAOzS,EAAE8T,OAAOrB,OAAOqB,KAAMpU,IAAI,SAAAM,GAAC,OAAIA,EAAEmQ,MACxF+D,EAAStU,GAAGuT,IAAIe,EAAStU,GAAGuT,IAAIhZ,OAAOga,GAGvC,IAAIC,EAAcvB,EAASlP,OAAO,SAAA3D,GAAC,OAAEA,EAAEiT,QAAQI,GAAKZ,OAAOzS,EAAE8T,OAAOrB,OAAOqB,KAAMpU,IAAI,SAAAM,GACnF,IAAMsD,EAAayE,KAAKyI,MAAOxQ,EAAEoQ,KAAKpQ,EAAEuD,WAAY,KAEpD,OADA2Q,EAAStU,GAAGiC,KAAKgR,SAAS5R,KAAK,CAACC,KAAKoC,EAAWA,WAAWA,IACpDA,IAET4Q,EAAStU,GAAGiT,SAASqB,EAAStU,GAAGiT,SAAS1Y,OAAOia,GAGjD,IAAIC,EAAUvB,EAAKnP,OAAO,SAAA3D,GAAC,OAAEA,EAAEiT,QAAQI,GAAKZ,OAAOzS,EAAE8T,OAAOrB,OAAOqB,KAAMpU,IAAI,SAAAM,GAE3E,OADAkU,EAAStU,GAAGiC,KAAKiR,KAAK7R,KAAK,CAACC,KAAKlB,EAAEqQ,MAAMA,MAAMrQ,EAAEqQ,QAC1CrQ,EAAEqQ,QAEX6D,EAAStU,GAAGkT,KAAKoB,EAAStU,GAAGkT,KAAK3Y,OAAOka,KAK7Cxe,EAAKiO,SAAS,CAACwQ,SAASJ,EAASnQ,SAAQ,KA9LxBlO,EAoMnBoO,kBAAkB,WAChBpO,EAAK0c,gBAlML1c,EAAKmD,MAAQ,CACX+K,SAAQ,EACRiG,cAAerF,OACf4P,UAAW,GACXlC,cAAa,EACblG,SAAS,EACTmI,cAAS5E,EACTsD,OAAO,IAIPnd,EAAK2e,MAAQ,SAAAC,GAAiB,IACtBnO,EADsBmO,EAAdC,QACS,GACnBpO,QACcoJ,IAAfpJ,EAAO0L,OACNnc,EAAKiO,SAAS,SAAA6Q,GAAA,IAAGJ,EAAHI,EAAGJ,UAAHI,EAAaL,SAAb,MAA6B,CACzCC,UAAWA,EAAU,IAAM1C,GAAQ0C,EAAU,GAAIjO,GAAU,GAAK,CAACA,GACjE6F,SAAS7F,EAAO0L,UApBTnc,wEA0MV,IAAA+e,EACwCvd,KAAK2B,MAArC6b,EADRD,EACA5B,OAAkBuB,EADlBK,EACkBL,UAAUpI,EAD5ByI,EAC4BzI,SAEnC,OACMd,EAAA,yBAEEhU,KAAK2B,MAAM+K,QACXsH,EAAA,qBAAKzU,MAAO,CAAC8K,QAAQ,SACnB2J,EAAA,qBAAKzU,MAAO,CAACE,MAAM,MAEjBuU,EAAA,qBAAKzU,MAAO,CAAC+V,OAAO,KAEEtB,EAAA,cAACtW,EAAA,EAAD,CAAQ+C,QAAQ,WAAWpD,MAAM,UAAUuD,QAASZ,KAAK+a,gBACpD/a,KAAK2B,MAAMgR,cAAcE,OAAO,aAErCmB,EAAA,cAACnO,GAAA,EAAD,CACIN,KAAMvF,KAAK2B,MAAMqZ,aACjBlV,QAAS9F,KAAKib,oBACdlY,kBAAgB,qBAChBgD,mBAAiB,4BAGjBiO,EAAA,cAAChO,GAAA,EAAD,KACIgO,EAAA,cAAC0B,GAAA1X,EAAD,CACIyf,cAAc,SACdnb,MAAOtC,KAAK2B,MAAMgR,cAClBgD,SAAU3V,KAAK+S,iBACf6C,iBAAiB,KAGzB5B,EAAA,cAAC7N,GAAA,EAAD,KACA6N,EAAA,cAACtW,EAAA,EAAD,CAAQkD,QAASZ,KAAKib,oBAAqB5d,MAAM,WAAjD,eAM9B2W,EAAA,cAACsF,GAAA,EAAD,CACEpR,KAAMsV,GAENxJ,EAAA,cAACsF,GAAA,EAAD,MACAtF,EAAA,cAACsF,GAAA,EAAD,MACAtF,EAAA,cAACsF,GAAA,EAAD,CACAzP,KAAK,WACLxM,MAAM,UACNqgB,WAAW,WACXC,cAAc,QAEd3J,EAAA,cAACsF,GAAA,EAAD,CACAzP,KAAK,MACLxM,MAAM,UACNqgB,WAAW,MACXC,cAAc,QAEd3J,EAAA,cAACsF,GAAA,EAAD,CACEzP,KAAK,OACLxM,MAAM,OACNqgB,WAAW,OACXC,cAAc,MACdC,gBAAiBvE,KAGnBrF,EAAA,cAACsF,GAAA,EAAD,CAAQ9Z,SAAS,SAASqe,cAAe9D,GAAM+D,cAAezD,GAAM0D,eAAgB7D,KACpFlG,EAAA,cAACgK,GAAA,EAAD,MACAhK,EAAA,cAACgK,GAAA,EAAD,MACAhK,EAAA,cAACgK,GAAA,EAAD,CAAcpd,QAASZ,KAAKmd,QAC5BnJ,EAAA,cAACgK,GAAA,EAAD,CAAgBd,UAAWA,MAI3BlJ,EAAA,qBAAKzU,MAAO,CAACE,MAAM,MACnBuU,EAAA,cAACmE,GAAD,CAAgBjQ,KAAMsV,EAAU1I,OAIjCd,EAAA,yBACCA,EAAA,2CAvR0B7R,iBAgSlC8W,GAAU,SAAAC,GACd,OAAGA,EAAI1M,OAAO,EACHkE,KAAKyI,MAAMD,EAAIE,OAAQ,SAAEnW,EAAGsI,GAAL,OAAYtI,EAAIsI,GAAG,GAAM2N,EAAI1M,QACxC,IAAd0M,EAAI1M,OACF0M,EAAI,GAEJ,GAIb,SAASqD,GAAapV,GACpB,IAAM8W,EAAkB9W,EAAM0M,QAAQqK,QAAQ,SACxCC,EAAiBF,EAAgBpK,QAAQqK,QAAQ,QACjDE,EAASH,EAAgBI,KAAKF,EAAgB,QAEpD,OAAOzN,KAAK4N,MAAMnX,EAAMoX,OAASH,GAAU,GC1W/C,IAAMhb,GAAYC,YAAW,SAAAlG,GAAK,MAAK,CACrCC,KAAM,CACJqC,MAAO,QAET+e,QAAS,CACPtL,SAAU/V,EAAMka,WAAWoH,QAAQ,KAErCC,iBAAkB,CAChBxL,SAAU/V,EAAMka,WAAWoH,QAAQ,IACnCphB,MAAOF,EAAMG,QAAQqhB,KAAKlV,WAE5BlF,KAAM,CACJqa,cAAe,SACf9e,OAAQ,GACRL,MAAO,IAETof,QAAS,CACPhJ,WAAY,UAEdiJ,OAAQ,CACNC,UAAW,OAEbC,OAAQ,CACNC,WAAU,aAAAnc,OAAe3F,EAAMG,QAAQ4hB,SACvCpd,QAAS3E,EAAMoa,QAAQ,EAAG,IAE5BxG,KAAM,CACJ1T,MAAOF,EAAMG,QAAQ6M,QAAQgV,KAC7BC,eAAgB,OAChB3hB,UAAW,CACT2hB,eAAgB,iBAKP,SAASC,GAAuB5gB,GAC7C,IAAM8E,EAAUH,KADoCI,EAEpBrB,IAAMsB,SAAS,IAFKC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAGhD8b,GAHgD5b,EAAA,GAAAA,EAAA,GAGzC,GACP6b,EAAO,EACL/W,EAAQ/J,EAAMiY,IAAIhO,KAAK,SAAAC,GAAC,OAAIA,EAAE3L,KAAOyB,EAAMzB,KAAIwL,MAUrD,OARG/J,EAAM+gB,cAAchT,OAAQ,IAC7B8S,EAAM7gB,EAAM+gB,cAAcpG,OAAO,SAACqG,EAAaC,GAAd,OAA+BD,EAAcC,IAAcjhB,EAAM+gB,cAAchT,QAE/G/N,EAAMkhB,YAAYnT,OAAO,IAC1B+S,EAAM9gB,EAAMkhB,YAAYvG,OAAO,SAACqG,EAAaC,GAAd,OAA+BD,EAAcC,IAAcjhB,EAAMkhB,YAAYnT,QAK5GnN,EAAArB,EAAAsB,cAAA,OAAKI,UAAW6D,EAAQnG,MACtBiC,EAAArB,EAAAsB,cAACsgB,GAAA,EAAD,CAAgBC,iBAAiB,GAC/BxgB,EAAArB,EAAAsB,cAACwgB,GAAA,EAAD,CACEC,WAAY1gB,EAAArB,EAAAsB,cAAC0gB,GAAAhiB,EAAD,MACZmF,gBAAc,kBACdnG,GAAG,kBAEHqC,EAAArB,EAAAsB,cAAA,OAAK2gB,OAAQ,CAACxgB,MAAM,IAAKC,UAAW6D,EAAQub,QAC1Czf,EAAArB,EAAAsB,cAACoD,EAAA,EAAD,CAAYhD,UAAW6D,EAAQib,SAAU/f,EAAMoL,OAEjDxK,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,QAAS3K,UAAW6D,EAAQub,QAE7Czf,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,MACnBJ,EAAArB,EAAAsB,cAAC4gB,GAAA,EAAD,CAAiC5d,MAAOoO,KAAKyI,MAAMmG,IACjDjgB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4gB,UAAU,WACrB9gB,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAAE2T,SAAU,GAAGiB,cAAc,KAAvC,SACA9U,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAE2T,SAAU,KAAMxC,KAAKyI,MAAMmG,IAC5CjgB,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAE2T,SAAU,KAA3B,QAMJ7T,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,IAAIiB,WAAW,KAClCrB,EAAArB,EAAAsB,cAAC4gB,GAAA,EAAD,CACAD,OAAQG,aAAY,CAClB/b,UAAW,UACXgc,UAAW,UACX7iB,gBAAiB,YACb8E,MAAOoO,KAAKyI,MAAMoG,IACtBlgB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4gB,UAAU,WACrB9gB,EAAArB,EAAAsB,cAAA,KAAGtC,GAAG,QAAQuC,MAAO,CAAE2T,SAAU,GAAGiB,cAAc,KAAlD,SACA9U,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAE2T,SAAU,GAAG7V,MAAM,YAAaqT,KAAKyI,MAAMoG,IAC5DlgB,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAE2T,SAAU,GAAG7V,MAAM,YAApC,UAQC,OAAVmL,EACDnJ,EAAArB,EAAAsB,cAACghB,GAAA,EAAD,CAAuB5gB,UAAW6D,EAAQsb,SACxCxf,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,SACjBJ,EAAArB,EAAAsB,cAACihB,GAAD,CACE/X,MAAOA,EACP+S,OAAQ9c,EAAM8c,OACdC,SAAU/c,EAAM+c,SAChBC,KAAMhd,EAAMgd,SAKlBpc,EAAArB,EAAAsB,cAAA,YAEAD,EAAArB,EAAAsB,cAACkhB,GAAA,EAAD,MACAnhB,EAAArB,EAAAsB,cAACmhB,GAAA,EAAD,KAEEphB,EAAArB,EAAAsB,cAAC4W,GAAD,CAAalZ,GAAIyB,EAAMzB,GAAI0Z,IAAKjY,EAAMiY,4CCtGjC,SAASgK,KAAa,IAAAld,EAEXrB,IAAMsB,UAAS,GAFJC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAE5B+B,EAF4B7B,EAAA,GAEtB8B,EAFsB9B,EAAA,GAAAyS,EAGbhU,IAAMsB,SAAS,IAHF2S,EAAA5T,OAAAmB,EAAA,EAAAnB,CAAA2T,EAAA,GAG5BwK,EAH4BvK,EAAA,GAGvBwK,EAHuBxK,EAAA,GAAAE,EAIRnU,IAAMsB,SAAS,IAJP8S,EAAA/T,OAAAmB,EAAA,EAAAnB,CAAA8T,EAAA,GAI5BuK,EAJ4BtK,EAAA,GAIpBuK,EAJoBvK,EAAA,GAAAwK,EAKX5e,IAAMsB,SAAS,IALJud,EAAAxe,OAAAmB,EAAA,EAAAnB,CAAAue,EAAA,GAK5BlX,EAL4BmX,EAAA,GAKtB3K,EALsB2K,EAAA,GAW7Bvb,EAAc,WAClBD,GAAQ,IAKJyb,EAAc,eAAAvf,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAjJ,IAAA,IAAA+K,EAAA,OAAA7K,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACV,KAARuiB,GAAyB,KAAXE,GAAyB,KAARhX,EADb,CAAA3L,EAAAE,KAAA,eAEbwK,EAAY,CAChB5L,GAAI0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzCjB,KAAM,UACN/F,KAAMA,EACNa,MAAMiW,EACNhW,MAAMkW,GAPW3iB,EAAAE,KAAA,EASb4I,IAAIC,QAAQC,YAAiBD,EAAuB,CAACE,MAAOyB,KAAexB,KAAK,SAAAC,GAClFC,uBAAoBC,QAAQ,iBAA5B,GAAAzE,OAAiD+G,EAAjD,mEAAqE,KACrEpE,MAXe,OAAAvH,EAAAE,KAAA,eAcnBkJ,uBAAoBtI,MAAM,SAA1B,iEAAmD,KAdhC,wBAAAd,EAAAkB,SAAAvB,MAAH,yBAAA6D,EAAAiG,MAAA3H,KAAA4H,YAAA,GAmDdiI,EAAiB,SAACpT,GACtB,IACI,IAAIsR,EAAMpC,KAAKC,MAAMnP,GACrBsR,EAAI1F,IAAJ,eAAAP,EAAAtF,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAQ,SAAAiB,EAAMmB,EAAIX,GAAV,IAAAK,EAAA,OAAA7K,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,cACAwK,EAAY,CAChB5L,GAAI0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzCjB,KAAM,UACN/F,KAAMX,EAAIW,KACVa,MAAMxB,EAAIwB,MACVC,MAAMzB,EAAIyB,OANN3C,EAAA5J,KAAA,EAQA4I,IAAIC,QAAQC,YAAiBD,EAAuB,CAACE,MAAOyB,KAAexB,KAAK,SAAAC,GACjFkB,IAAMwF,EAAIvB,OAAO,GAElBlF,uBAAoBC,QAAQ,iBAA5B,GAAAzE,OAAiDiL,EAAI,GAAGlE,KAAxD,YAAA/G,OAAkEiL,EAAIvB,OAAtE,4DAA0F,OAXxF,wBAAAxE,EAAA5I,SAAA2I,MAAR,gBAAAL,EAAAmB,GAAA,OAAAf,EAAAH,MAAA3H,KAAA4H,YAAA,IAeJ,MAAO2I,GACLtR,QAAQD,MAAMuR,KAclB,OACElR,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACAjK,EAAArB,EAAAsB,cAAC4hB,GAAA,EAAD,CAAS1a,MAAM,cAAc2a,OAAK,GAClC9hB,EAAArB,EAAAsB,cAACqG,GAAA,EAAD,CAAa/E,QAlGO,WACtB4E,GAAQ,KAkGYnG,EAAArB,EAAAsB,cAAC8hB,GAAApjB,EAAD,CAAeqjB,KAAK,QAAQ9hB,MAAO,CAAElC,MAAO,eAG9DgC,EAAArB,EAAAsB,cAACuG,GAAA,EAAD,CAAQN,KAAMA,EAAMO,QAASL,EAAa1C,kBAAgB,qBACxD1D,EAAArB,EAAAsB,cAACiH,GAAA,EAAD,CAAavJ,GAAG,qBAAhB,4BACAqC,EAAArB,EAAAsB,cAAC0G,GAAA,EAAD,KACE3G,EAAArB,EAAAsB,cAAC2G,GAAA,EAAD,gRAEI5G,EAAArB,EAAAsB,cAACgG,GAAD,CAAegc,YAAa,2CAAmBpb,QAAS,OAE5D7G,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACgiB,MAAM,UACfliB,EAAArB,EAAAsB,cAACiV,GAAA,EAAD,CAAahV,MAAO,CAACE,MAAM,MACzBJ,EAAArB,EAAAsB,cAACkV,GAAA,EAAD,CAAYxX,GAAG,4BAAf,gBACAqC,EAAArB,EAAAsB,cAACmV,GAAA,EAAD,CACAC,QAAQ,2BACR1X,GAAG,qBACHsF,MAAOqe,EACPzc,SAxFU,SAAApG,GACtB8iB,EAAO9iB,EAAMmR,OAAO3M,SA0FN8I,GAAaV,MAAMrC,IAAI,SAACgD,EAAE9C,GACxB,OACAlJ,EAAArB,EAAAsB,cAAC0V,GAAA,EAAD,CAAU1S,MAAO+I,GAAIA,OAM7BhM,EAAArB,EAAAsB,cAACiV,GAAA,EAAD,CAAahV,MAAO,CAACE,MAAM,MACvBJ,EAAArB,EAAAsB,cAACkV,GAAA,EAAD,CAAYxX,GAAG,4BAAf,UACAqC,EAAArB,EAAAsB,cAACmV,GAAA,EAAD,CACAC,QAAQ,2BACR1X,GAAG,qBACHsF,MAAOue,EACP3c,SAtGY,SAAApG,GACxBgjB,EAAShjB,EAAMmR,OAAO3M,SAwGR8I,GAAaT,MAAMtC,IAAI,SAACkD,EAAEhD,GACxB,OACAlJ,EAAArB,EAAAsB,cAAC0V,GAAA,EAAD,CAAU1S,MAAOiJ,GAAIA,QAO/BlM,EAAArB,EAAAsB,cAACiW,GAAA,EAAD,CACEnP,WAAS,EACTkP,OAAO,QACPtY,GAAG,OACHwO,MAAM,2BACNoE,KAAK,OACLiH,WAAS,EACTvU,MAAOuH,EACT3F,SAvHiB,SAAApG,GACvBuY,EAAQvY,EAAMmR,OAAO3M,WAyHjBjD,EAAArB,EAAAsB,cAAC6G,GAAA,EAAD,KAEM9G,EAAArB,EAAAsB,cAAA,SAAOtC,GAAG,wBAAwBuC,MAAO,CAAC8K,QAAQ,QAASuF,KAAK,OAAO1L,SAvHlE,SAAC2K,GAEhB,IAAIC,EAAS,GACTC,EAAS,IAAIC,WACjBD,EAAOI,WAAWN,EAAOI,OAAOC,MAAM,GAAG,UACzCH,EAAOK,OAAS,SAACP,GAKT,IAHJ,IACQQ,EADGR,EAAOI,OAAOH,OACJQ,MAAM,WACnBC,EAAQF,EAAM,GAAGC,MAAM,KACnB/G,EAAE,EAAEA,EAAE8G,EAAM7C,OAAOjE,IAAI,CAG3B,IAFA,IAAIiH,EAAM,GACNC,EAAYJ,EAAM9G,GAAG+G,MAAM,KACvB/C,EAAE,EAAEA,EAAEgD,EAAQ/C,OAAOD,IACzBiD,EAAID,EAAQhD,IAAMkD,EAAYlD,GAElCuC,EAAOlF,KAAK4F,GAEhBK,EAAgBf,KAqG+EjF,KAAK,OAAOwK,OAAO,SAChHhV,EAAArB,EAAAsB,cAAA,SAAOgV,QAAQ,yBACbjV,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ+C,QAAQ,YAAYpD,MAAM,UAAUuF,UAAU,QAAtD,aAMNvD,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQkD,QAASqgB,EAAgB5jB,MAAM,WAAvC,4DCtLK,SAASmkB,KAAmB,IAAAhe,EACfrB,IAAMsB,UAAS,GADAC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAChC+B,EADgC7B,EAAA,GAC1B8B,EAD0B9B,EAAA,GAwCjC+d,EAAI,eAAA/f,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAjJ,EAAMkJ,GAAN,OAAAhJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACH4I,IAAIC,QAAQC,YAAiBD,EAA0B,CAACE,MAAOJ,KAASK,KAAK,SAAAC,GAC/EpI,QAAQC,IAAImI,KAFP,wBAAAnJ,EAAAkB,SAAAvB,MAAH,gBAAA6J,GAAA,OAAAhG,EAAAiG,MAAA3H,KAAA4H,YAAA,GAMFiI,EAAe,eAAA/H,EAAAtF,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAiB,EAAMtL,GAAN,IAAAsR,EAAA2T,EAAAC,EAAApZ,EAAA,OAAAxK,EAAAC,EAAAC,KAAA,SAAAkL,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA/K,MAAA,OAEd2P,EAAMpC,KAAKC,MAAMnP,GAEjBilB,EAAS,GAJKC,EAAA5jB,EAAAC,EAAA8I,KAAA,SAAA6a,EAMVpZ,GANU,IAAAK,EAAA,OAAA7K,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,WAOXsjB,EAAQ/P,SAAS5D,EAAIxF,GAAGvL,IAPb,CAAAgL,EAAA5J,KAAA,QAAA4J,EAAA5J,KAAA,sBAUNwK,OAAYyP,EAVNrQ,EAAA5J,KAAA,EAYJ4I,IAAIC,QAAQC,YAAgB,0GAAApE,OAEWiL,EAAIxF,GAAGvL,GAFlB,qNAOtBoK,KAAK,SAAAC,GAER,IAAIua,EAAOva,EAAEa,KAAKC,YAAYC,MAAM,GAAGqT,KAGjCoG,EADW9T,EAAIzB,OAAO,SAAA3D,GAAC,OAAEA,EAAE3L,KAAO+Q,EAAIxF,GAAGvL,KACrBqL,IAAI,SAAAa,GACtB,MAAO,CACHlM,GAAG0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACxChH,KAAKX,EAAIuS,KACTzC,MAAM9P,EAAI8P,MACV4C,MAAM1S,EAAI0S,MACVa,IAAIvT,EAAIuT,OAKjB7T,EADQ,OAATgZ,EACa,CACR5kB,GAAG+Q,EAAIxF,GAAGvL,GACVye,KAAKmG,EAAK9e,OAAO+e,IAGT,CACR7kB,GAAG+Q,EAAIxF,GAAGvL,GACVye,KAAKoG,GAIbJ,EAAK7Y,GACLtB,uBAAoBC,QAAQ,iBAA5B,GAAAzE,OAAiDiL,EAAIxF,GAAGsB,KAAxD,YAAA/G,OAAkE+e,EAASrV,OAA3E,2FAAqG,OA/CnG,OAiDNkV,EAAQ9X,KAAKmE,EAAIxF,GAAGvL,IAjDd,wBAAAgL,EAAA5I,SAAAuiB,KAMVpZ,EAAG,EANO,YAMLA,EAAEwF,EAAIvB,OAAO,GANR,CAAArD,EAAA/K,KAAA,eAAA+K,EAAA2Y,cAAAH,EAMVpZ,GANU,eAMUA,IANVY,EAAA/K,KAAA,gCAAA+K,EAAA/J,SAAA2I,MAAH,gBAAAc,GAAA,OAAAf,EAAAH,MAAA3H,KAAA4H,YAAA,GAsDvB,OACIvI,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACAjK,EAAArB,EAAAsB,cAAC4hB,GAAA,EAAD,CAAS1a,MAAM,WAAW2a,OAAK,GACzB9hB,EAAArB,EAAAsB,cAACqG,GAAA,EAAD,CAAY/E,QArGA,WACtB4E,GAAQ,IAoGwCnI,MAAM,UAAUuC,aAAW,wBAAwBgD,UAAU,QACnGvD,EAAArB,EAAAsB,cAACmZ,GAAAza,EAAD,CAAaqjB,KAAK,QAAQ9hB,MAAO,CAAElC,MAAO,eAG9CgC,EAAArB,EAAAsB,cAACuG,GAAA,EAAD,CACIN,KAAMA,EACNO,QAvGQ,WAClBN,GAAQ,IAuGEzC,kBAAgB,qBAChBgD,mBAAiB,4BAEjB1G,EAAArB,EAAAsB,cAAC0G,GAAA,EAAD,KACA3G,EAAArB,EAAAsB,cAAC2G,GAAA,EAAD,CAAmBjJ,GAAG,4BAClBqC,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,iBAAiBE,IAAI,uBAGlCV,EAAArB,EAAAsB,cAAC6G,GAAA,EAAD,KACA9G,EAAArB,EAAAsB,cAAA,SAAO4E,SA7GC,SAAC2K,GAEjB,IAAIC,EAAS,GACTC,EAAS,IAAIC,WACjBD,EAAOI,WAAWN,EAAOI,OAAOC,MAAM,GAAG,UACzCH,EAAOK,OAAS,SAACP,GAEb,IACQQ,EADGR,EAAOI,OAAOH,OACJQ,MAAM,WAEnB,GAAe,iCAAZD,EAAM,GAAqC,CAE1C,IADA,IAAIE,EAAQF,EAAM,GAAGC,MAAM,KACnB/G,EAAE,EAAEA,EAAE8G,EAAM7C,OAAOjE,IAAI,CAG3B,IAFA,IAAIiH,EAAM,GACNC,EAAYJ,EAAM9G,GAAG+G,MAAM,KACvB/C,EAAE,EAAEA,EAAEgD,EAAQ/C,OAAOD,IACzBiD,EAAID,EAAQhD,IAAMkD,EAAYlD,GAElCuC,EAAOlF,KAAK4F,GAEhBV,EAAOiT,MACPlS,EAAgBlE,KAAKE,UAAUiD,SAE/BxH,uBAAoBtI,MAAM,iBAA1B,4BAAwE,OAsFnD6K,KAAK,OAAOwK,OAAO,OAAQ9U,MAAO,CAAC8K,QAAQ,QAASrN,GAAG,mBAAmB4S,KAAK,SACxGvQ,EAAArB,EAAAsB,cAAA,SAAOgV,QAAQ,oBACXjV,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQL,MAAM,UAAUuC,aAAW,iBAAiBgD,UAAU,QAA9D,cC1HT,SAASof,KAAiB,IAAAxe,EACbrB,IAAMsB,UAAS,GADFC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAC9B+B,EAD8B7B,EAAA,GACxB8B,EADwB9B,EAAA,GAwC/B+d,EAAI,eAAA/f,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAjJ,EAAMkJ,GAAN,OAAAhJ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACH4I,IAAIC,QAAQC,YAAiBD,EAAwB,CAACE,MAAOJ,KAASK,KAAK,SAAAC,GAC7EpI,QAAQC,IAAImI,KAFP,wBAAAnJ,EAAAkB,SAAAvB,MAAH,gBAAA6J,GAAA,OAAAhG,EAAAiG,MAAA3H,KAAA4H,YAAA,GAMFiI,EAAe,eAAA/H,EAAAtF,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAiB,EAAMtL,GAAN,IAAAsR,EAAA2T,EAAAC,EAAApZ,EAAA,OAAAxK,EAAAC,EAAAC,KAAA,SAAAkL,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA/K,MAAA,OAEd2P,EAAMpC,KAAKC,MAAMnP,GAEjBilB,EAAS,GAJKC,EAAA5jB,EAAAC,EAAA8I,KAAA,SAAA6a,EAMVpZ,GANU,IAAAK,EAAA,OAAA7K,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,WAOXsjB,EAAQ/P,SAAS5D,EAAIxF,GAAGvL,IAPb,CAAAgL,EAAA5J,KAAA,QAAA4J,EAAA5J,KAAA,sBAUNwK,OAAYyP,EAVNrQ,EAAA5J,KAAA,EAYJ4I,IAAIC,QAAQC,YAAgB,0GAAApE,OAEWiL,EAAIxF,GAAGvL,GAFlB,mOAOtBoK,KAAK,SAAAC,GACR,IAAIua,EAAOva,EAAEa,KAAKC,YAAYC,MAAM,GAAGoT,SAGjCqG,EADW9T,EAAIzB,OAAO,SAAA3D,GAAC,OAAEA,EAAE3L,KAAO+Q,EAAIxF,GAAGvL,KACrBqL,IAAI,SAAAa,GACtB,MAAO,CACHlM,GAAG0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACxChH,KAAKX,EAAIsS,SACTtP,WAAWhD,EAAIgD,WACf6M,KAAK7P,EAAI6P,KACT6C,MAAM1S,EAAI0S,MACVa,IAAIvT,EAAIuT,OAKjB7T,EADQ,OAATgZ,EACa,CACR5kB,GAAG+Q,EAAIxF,GAAGvL,GACVwe,SAASoG,EAAK9e,OAAO+e,IAGb,CACR7kB,GAAG+Q,EAAIxF,GAAGvL,GACVwe,SAASqG,GAGjBJ,EAAK7Y,GACLtB,uBAAoBC,QAAQ,iBAA5B,GAAAzE,OAAiDiL,EAAIxF,GAAGsB,KAAxD,YAAA/G,OAAkE+e,EAASrV,OAA3E,2FAAqG,OA9CnG,OAgDNkV,EAAQ9X,KAAKmE,EAAIxF,GAAGvL,IAhDd,wBAAAgL,EAAA5I,SAAAuiB,KAMVpZ,EAAG,EANO,YAMLA,EAAEwF,EAAIvB,OAAO,GANR,CAAArD,EAAA/K,KAAA,eAAA+K,EAAA2Y,cAAAH,EAMVpZ,GANU,eAMUA,IANVY,EAAA/K,KAAA,gCAAA+K,EAAA/J,SAAA2I,MAAH,gBAAAc,GAAA,OAAAf,EAAAH,MAAA3H,KAAA4H,YAAA,GAqDvB,OACIvI,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACAjK,EAAArB,EAAAsB,cAAC4hB,GAAA,EAAD,CAAS1a,MAAM,eAAe2a,OAAK,GAC7B9hB,EAAArB,EAAAsB,cAACqG,GAAA,EAAD,CAAY/E,QApGA,WACtB4E,GAAQ,IAmGwCnI,MAAM,UAAUuC,aAAW,wBAAwBgD,UAAU,QACnGvD,EAAArB,EAAAsB,cAACoZ,GAAA1a,EAAD,CAAaqjB,KAAK,QAAQ9hB,MAAO,CAAElC,MAAO,eAG9CgC,EAAArB,EAAAsB,cAACuG,GAAA,EAAD,CACIN,KAAMA,EACNO,QAtGQ,WAClBN,GAAQ,IAsGEzC,kBAAgB,qBAChBgD,mBAAiB,4BAEjB1G,EAAArB,EAAAsB,cAAC0G,GAAA,EAAD,KACA3G,EAAArB,EAAAsB,cAAC2G,GAAA,EAAD,CAAmBjJ,GAAG,4BACtBqC,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,qBAAqBE,IAAI,uBAGlCV,EAAArB,EAAAsB,cAAC6G,GAAA,EAAD,KACA9G,EAAArB,EAAAsB,cAAA,SAAO4E,SA5GC,SAAC2K,GAEjB,IAAIC,EAAS,GACTC,EAAS,IAAIC,WACjBD,EAAOI,WAAWN,EAAOI,OAAOC,MAAM,GAAG,UACzCH,EAAOK,OAAS,SAACP,GAEb,IACQQ,EADGR,EAAOI,OAAOH,OACJQ,MAAM,WAEnB,GAAe,+CAAZD,EAAM,GAAmD,CAExD,IADA,IAAIE,EAAQF,EAAM,GAAGC,MAAM,KACnB/G,EAAE,EAAEA,EAAE8G,EAAM7C,OAAOjE,IAAI,CAG3B,IAFA,IAAIiH,EAAM,GACNC,EAAYJ,EAAM9G,GAAG+G,MAAM,KACvB/C,EAAE,EAAEA,EAAEgD,EAAQ/C,OAAOD,IACzBiD,EAAID,EAAQhD,IAAMkD,EAAYlD,GAElCuC,EAAOlF,KAAK4F,GAEhBV,EAAOiT,MACPlS,EAAgBlE,KAAKE,UAAUiD,SAE/BxH,uBAAoBtI,MAAM,iBAA1B,4BAAwE,OAqFnD6K,KAAK,OAAOwK,OAAO,OAAQ9U,MAAO,CAAC8K,QAAQ,QAASrN,GAAG,mBAAmB4S,KAAK,SACxGvQ,EAAArB,EAAAsB,cAAA,SAAOgV,QAAQ,oBACXjV,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQL,MAAM,UAAUuC,aAAW,iBAAiBgD,UAAU,QAA9D,kOCnIlBqf,GAAM,yFAGTC,OAEGC,GAAY,+FAGhB9iB,EAAArB,EAAAsB,cAAC8iB,GAAA,MAAD,CAAO5b,MAAM,aAAa6b,QAASJ,IACjC5iB,EAAArB,EAAAsB,cAAC8iB,GAAA,KAAD,KACE/iB,EAAArB,EAAAsB,cAAC8iB,GAAA,KAAD,CAAMlP,SAAU,IAAhB,kBAEF7T,EAAArB,EAAAsB,cAAC8iB,GAAA,KAAD,KACE/iB,EAAArB,EAAAsB,cAAC8iB,GAAA,IAAD,CAAKE,YAAa,GAAI7iB,MAAM,OAAOF,MAAO,CAAEgjB,UAAW,oBACrDljB,EAAArB,EAAAsB,cAAC8iB,GAAA,KAAD,KACE/iB,EAAArB,EAAAsB,cAAC8iB,GAAA,KAAD,CAAM/kB,MAAM,OAAOmlB,WAAY,IAA/B,gBAAgDnjB,EAAArB,EAAAsB,cAAC8iB,GAAA,EAAD,CAAGrjB,KAAK,kDAAR,qBAChDM,EAAArB,EAAAsB,cAAC8iB,GAAA,MAAD,CAAOK,cAAY,MAAMC,cAAY,MAAM3iB,IAAI,QAAQF,IAAI,0GAA0GJ,MAAO,IAAKK,OAAQ,MACzLT,EAAArB,EAAAsB,cAAC8iB,GAAA,EAAD,CAAGO,SAAUR,GAAWpjB,KAAMojB,IAA9B,4CCWV,SAASS,GAAqB5kB,EAAG6kB,EAAGC,GAClC,OAAID,EAAEC,GAAW9kB,EAAE8kB,IACT,EAEND,EAAEC,GAAW9kB,EAAE8kB,GACV,EAEF,EAmBT,IAAMC,GAAY,CAChB,CAAE/lB,GAAI,OAAQgmB,SAAS,EAAOC,gBAAgB,EAAMzX,MAAO,QAC3D,CAAExO,GAAI,KAAMgmB,SAAS,EAAMC,gBAAiB,EAAOzX,MAAO,MAC1D,CAAExO,GAAI,QAASgmB,SAAS,EAAMC,gBAAgB,EAAOzX,MAAO,SAC5D,CAAExO,GAAI,QAASgmB,SAAS,EAAMC,gBAAgB,EAAOzX,MAAO,SAC5D,CAAExO,GAAI,WAAYgmB,SAAS,EAAMC,gBAAgB,EAAOzX,MAAO,SAC/D,CAAExO,GAAI,WAAYgmB,SAAS,EAAMC,gBAAgB,EAAOzX,MAAO,UAGjE,SAAS0X,GAAkBzkB,GAAO,IACxB8E,EAAoF9E,EAApF8E,QAAS4f,EAA2E1kB,EAA3E0kB,iBAAkBC,EAAyD3kB,EAAzD2kB,MAAON,EAAkDrkB,EAAlDqkB,QAASO,EAAyC5kB,EAAzC4kB,YAAaC,EAA4B7kB,EAA5B6kB,SAAUC,EAAkB9kB,EAAlB8kB,cAK1E,OACElkB,EAAArB,EAAAsB,cAACkkB,GAAA,EAAD,KACEnkB,EAAArB,EAAAsB,cAACmkB,GAAA,EAAD,KACEpkB,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAW5hB,QAAQ,YACjBzC,EAAArB,EAAAsB,cAACqkB,GAAA,EAAD,CACEC,cAAeP,EAAc,GAAKA,EAAcC,EAChDzW,QAASyW,EAAW,GAAKD,IAAgBC,EACzCpf,SAAUif,EACVU,WAAY,CAAEjkB,aAAc,0BAG/BmjB,GAAU1a,IAAI,SAAAyb,GAAQ,OACrBzkB,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CACE5S,IAAKgT,EAAS9mB,GACd6E,MAAOiiB,EAASd,QAAU,QAAU,OACpClhB,QAASgiB,EAASb,eAAiB,OAAS,UAC5Cc,cAAejB,IAAYgB,EAAS9mB,IAAKomB,GAEzC/jB,EAAArB,EAAAsB,cAAC0kB,GAAA,EAAD,CACEC,OAAQnB,IAAYgB,EAAS9mB,GAC7BiE,UAAW6hB,IAAYgB,EAAS9mB,GAAKomB,EAAQ,MAC7CxiB,SAzBcsjB,EAyBaJ,EAAS9mB,GAzBV,SAAAc,GACpCylB,EAAczlB,EAAOomB,MA0BVJ,EAAStY,MACTsX,IAAYgB,EAAS9mB,GACpBqC,EAAArB,EAAAsB,cAAA,QAAMI,UAAW6D,EAAQ4gB,gBACZ,SAAVf,EAAmB,oBAAsB,oBAE1C,OAhCU,IAAAc,MAmD5B,IAAME,GAAmB/gB,YAAW,SAAAlG,GAAK,MAAK,CAC5CC,KAAM,CACJinB,YAAalnB,EAAMoa,QAAQ,GAC3B+M,aAAcnnB,EAAMoa,QAAQ,IAE9BgN,UACyB,UAAvBpnB,EAAMG,QAAQsS,KACV,CACEvS,MAAOF,EAAMG,QAAQmM,UAAU0V,KAC/B3hB,gBAAiBgnB,aAAQrnB,EAAMG,QAAQmM,UAAUgb,MAAO,MAE1D,CACEpnB,MAAOF,EAAMG,QAAQqhB,KAAKxU,QAC1B3M,gBAAiBL,EAAMG,QAAQmM,UAAUib,MAEjDle,MAAO,CACLme,KAAM,eAKJC,GAAa,eAAAljB,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAG,SAAAiB,EAAM8c,GAAN,OAAA9mB,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,OACpBymB,EAAWxc,IAAX,eAAAP,EAAAtF,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAe,SAAAjJ,EAAMyK,EAAEC,GAAR,OAAAxK,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACP4I,IAAIC,QAAQC,YhBoCS,mHgBpCiC,CAACC,MAAO,CAACnK,GAAGsL,MAAMlB,KAAK,SAAAc,GAC9E2c,EAAWrY,OAAO,IAAKjE,GACxB1J,OAAOC,SAAS2I,WAHP,wBAAAvJ,EAAAkB,SAAAvB,MAAf,gBAAAgL,EAAAO,GAAA,OAAAtB,EAAAH,MAAA3H,KAAA4H,YAAA,IADoB,wBAAAI,EAAA5I,SAAA2I,MAAH,gBAAAL,GAAA,OAAAhG,EAAAiG,MAAA3H,KAAA4H,YAAA,GAYbkd,GAAuB,SAAArmB,GAC3B,IAAM8E,EAAU6gB,KAETW,GADYtmB,EAAZumB,SACcvmB,EAAdsmB,YACDE,EAAMxmB,EAAMumB,SAASxY,OAE3B,OACEnN,EAAArB,EAAAsB,cAAC4lB,GAAA,EAAD,CACExlB,UAAWylB,aAAK5hB,EAAQnG,KAAToF,OAAA4iB,GAAA,EAAA5iB,CAAA,GACZe,EAAQghB,UAAYU,EAAM,KAG5BA,EAAM,EACL5lB,EAAArB,EAAAsB,cAACoD,EAAA,EAAD,CAAYhD,UAAW6D,EAAQiD,MAAOnJ,MAAM,UAAUoD,QAAQ,aAC3DwkB,EADH,aAIA5lB,EAAArB,EAAAsB,cAACoD,EAAA,EAAD,CAAYhD,UAAW6D,EAAQiD,MAAO/F,QAAQ,KAAKzD,GAAG,cAAtD,YAKDioB,EAAM,EACL5lB,EAAArB,EAAAsB,cAAC+lB,GAAA,EAAD,CAAQC,WAAS,EAACrkB,UAAU,MAAMskB,QAAQ,YAExClmB,EAAArB,EAAAsB,cAAC+lB,GAAA,EAAD,CAAM/K,MAAI,GACVjb,EAAArB,EAAAsB,cAAC4hB,GAAA,EAAD,CAAS1a,MAAM,SAASgf,UAAU,WAI9BnmB,EAAArB,EAAAsB,cAACqG,GAAA,EAAD,CAAY/E,QAAS,kBAAIgkB,GAAcG,IAAanlB,aAAW,UAC7DP,EAAArB,EAAAsB,cAACmmB,GAAAznB,EAAD,UAMRqB,EAAArB,EAAAsB,cAAC4hB,GAAA,EAAD,CAAS1a,MAAM,eACbnH,EAAArB,EAAAsB,cAACqG,GAAA,EAAD,CAAY/F,aAAW,eACrBP,EAAArB,EAAAsB,cAAComB,GAAA1nB,EAAD,UAYNoF,GAAYC,YAAW,SAAAlG,GAAK,MAAK,CACrCC,KAAM,CACJqC,MAAO,QAETwY,MAAO,CACLxY,MAAO,OACP0U,aAAchX,EAAMoa,QAAQ,IAE9BoO,MAAO,CACLxO,SAAU,KAEZgN,eAAgB,CACdyB,OAAQ,EACRC,KAAM,gBACN/lB,OAAQ,EACRwV,QAAS,EACTwQ,SAAU,SACVhkB,QAAS,EACTtC,SAAU,WACVumB,IAAK,GACLtmB,MAAO,MAII,SAASumB,GAAcvnB,GACpC,IAAM8E,EAAUH,KAD2BI,EAEjBrB,IAAMsB,SAAS,OAFEC,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GAEpC4f,EAFoC1f,EAAA,GAE7BuiB,EAF6BviB,EAAA,GAAAyS,EAGbhU,IAAMsB,SAAS,IAHF2S,EAAA5T,OAAAmB,EAAA,EAAAnB,CAAA2T,EAAA,GAGpC2M,EAHoC1M,EAAA,GAG3B8P,EAH2B9P,EAAA,GAAAE,EAIXnU,IAAMsB,SAAS,IAJJ8S,EAAA/T,OAAAmB,EAAA,EAAAnB,CAAA8T,EAAA,GAIpCxB,EAJoCyB,EAAA,GAI1B4P,EAJ0B5P,EAAA,GAAAwK,EAKP5e,IAAMsB,SAAS,IALRud,EAAAxe,OAAAmB,EAAA,EAAAnB,CAAAue,EAAA,GAKpC8D,EALoC7D,EAAA,GAKxBoF,EALwBpF,EAAA,GAAAqF,EAMnBlkB,IAAMsB,SAAS,GANI6iB,EAAA9jB,OAAAmB,EAAA,EAAAnB,CAAA6jB,EAAA,GAMpCE,EANoCD,EAAA,GAM9BE,EAN8BF,EAAA,GAAAG,EAOjBtkB,IAAMsB,UAAS,GAPEijB,EAAAlkB,OAAAmB,EAAA,EAAAnB,CAAAikB,EAAA,GAOpC9f,EAPoC+f,EAAA,GAO7BC,EAP6BD,EAAA,GAAAE,EAQLzkB,IAAMsB,SAAS,GARVojB,EAAArkB,OAAAmB,EAAA,EAAAnB,CAAAokB,EAAA,GAQpCE,EARoCD,EAAA,GAQvBE,EARuBF,EAAA,GAUnCnQ,EAAMjY,EAAMiY,IAkEdsQ,EAAYF,EAAcpW,KAAKuW,IAAIH,EAAapQ,EAAIlK,OAAS+Z,EAAOO,GAEpEI,EAAOzoB,EAAMyoB,MACbzT,EAAOhV,EAAMgV,MACb/I,EAAQjM,EAAMiM,MACdmW,EAASpiB,EAAMkM,MAErB,OACEtL,EAAArB,EAAAsB,cAAA,OAAKI,UAAW6D,EAAQnG,MACtBiC,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACAjK,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOnE,UAAW6D,EAAQ0U,OACxB5Y,EAAArB,EAAAsB,cAAC6nB,GAAD,CAAsBpC,WAAYF,EAAYG,SAAUlQ,IACxDzV,EAAArB,EAAAsB,cAAC8nB,GAAA,EAAD,KACE/nB,EAAArB,EAAAsB,cAAC+nB,GAAA,EAAD,CACE3nB,UAAW6D,EAAQoiB,MACnB5iB,kBAAgB,aAChBse,KAAM1a,EAAQ,QAAU,SACxB/G,aAAW,kBAEXP,EAAArB,EAAAsB,cAAC4jB,GAAD,CACE3f,QAASA,EACT8f,YAAavO,EAAStI,OACtB4W,MAAOA,EACPN,QAASA,EACTK,iBAlFiB,SAAArlB,GAC3B,GAAIA,EAAMmR,OAAOpC,QAAS,CACxB,IAAMya,EAAe5Q,EAAIrO,IAAI,SAAAkf,GAAC,OAAIA,EAAE/b,QAC9Bgc,EAAiB9Q,EAAIrO,IAAI,SAAAkf,GAAC,OAAIA,EAAEjlB,QAGtC,OAFA6jB,EAAYmB,QACZlB,EAAcoB,GAGhBrB,EAAY,IACZC,EAAc,KA0EJ7C,cAzFc,SAACzlB,EAAOomB,GAEhC+B,EADcnD,IAAYoB,GAAsB,QAAVd,EACrB,OAAS,OAC1B8C,EAAWhC,IAuFDZ,SAAU5M,EAAIlK,SAEhBnN,EAAArB,EAAAsB,cAACmoB,GAAA,EAAD,KA5RZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMrf,IAAI,SAACwf,EAAI3mB,GAAL,MAAe,CAAC2mB,EAAI3mB,KAMrD,OALA0mB,EAAeE,KAAK,SAAC9pB,EAAG6kB,GACtB,IAAMO,EAAQuE,EAAW3pB,EAAE,GAAI6kB,EAAE,IACjC,OAAc,IAAVO,EAAoBA,EACjBplB,EAAE,GAAK6kB,EAAE,KAEX+E,EAAevf,IAAI,SAAAwf,GAAE,OAAIA,EAAG,KAsRtBE,CAAWrR,EAnS1B,SAAuB0M,EAAON,GAC5B,MAAiB,SAAVM,EACH,SAACplB,EAAG6kB,GAAJ,OAAUD,GAAqB5kB,EAAG6kB,EAAGC,IACrC,SAAC9kB,EAAG6kB,GAAJ,OAAWD,GAAqB5kB,EAAG6kB,EAAGC,IAgSbkF,CAAc5E,EAAON,IACnCmF,MAAM1B,EAAOO,EAAaP,EAAOO,EAAcA,GAC/Cze,IAAI,SAAC6f,EAAKhnB,GACT,IAlCG2I,EAkCGse,GAlCHte,EAkC+Bqe,EAAI1c,OAlCC,IAA5BsJ,EAAShD,QAAQjI,IAmCtB6K,EAAO,2BAAA5R,OAA8B5B,GAEzC,GAAGwJ,EAAMiH,SAASuW,EAAIxd,QAAUwd,EAAIE,UAAY3U,GAAQyU,EAAIG,UAAYnB,GAASrG,EAAOlP,SAASuW,EAAIvd,OACjG,OACItL,EAAArB,EAAAsB,cAACmkB,GAAA,EAAD,CACE6E,OAAK,EACL1nB,QAAS,SAAA9C,GAAK,OArFtB,SAACA,EAAO+L,EAAK7M,GAC/B,IAAMurB,EAAgBzT,EAAShD,QAAQjI,GAGnC2e,EAAc,GACdC,EAAgB,IAEG,IAAnBF,GACFC,EAAcA,EAAY1lB,OAAOgS,EAAUjL,GAC3C4e,EAAgBA,EAAc3lB,OAAO+hB,EAAY7nB,IACtB,IAAlBurB,GACTC,EAAcA,EAAY1lB,OAAOgS,EAASmT,MAAM,IAChDQ,EAAgBA,EAAc3lB,OAAO+hB,EAAWoD,MAAM,KAC7CM,IAAkBzT,EAAStI,OAAS,GAC7Cgc,EAAcA,EAAY1lB,OAAOgS,EAASmT,MAAM,GAAI,IACpDQ,EAAgBA,EAAc3lB,OAAO+hB,EAAWoD,MAAM,GAAI,KACjDM,EAAgB,IACzBC,EAAcA,EAAY1lB,OACxBgS,EAASmT,MAAM,EAAGM,GAClBzT,EAASmT,MAAMM,EAAgB,IAEjCE,EAAgBA,EAAc3lB,OAC5B+hB,EAAWoD,MAAM,EAAGM,GACpB1D,EAAWoD,MAAMM,EAAgB,KAIrCpC,EAAYqC,GACZpC,EAAcqC,GAyD8BC,CAAY5qB,EAAOoqB,EAAI1c,MAAO0c,EAAI5lB,QACpD3C,KAAK,WACLgpB,eAAcR,EACdS,UAAW,EACX9X,IAAKoX,EAAI5lB,MACTwS,SAAUqT,GAEV9oB,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAW5hB,QAAQ,YACjBzC,EAAArB,EAAAsB,cAACqkB,GAAA,EAAD,CACE9W,QAASsb,EACTtE,WAAY,CAAE9gB,kBAAmB2R,MAGrCrV,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAW9gB,UAAU,KAAK5F,GAAI0X,EAASmU,MAAM,MAAM/mB,QAAQ,QACxDomB,EAAI1c,OAEPnM,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAW7hB,MAAM,SAASqmB,EAAI5lB,MAAMgN,MAAM,KAAK,IAC/CjQ,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAW7hB,MAAM,SAASqmB,EAAIxd,OAC9BrL,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAW7hB,MAAM,SAASqmB,EAAIvd,OAC9BtL,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAW7hB,MAAM,SAASqmB,EAAIE,UAC9B/oB,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAW7hB,MAAM,SAASqmB,EAAIG,aAK7CrB,EAAY,GACX3nB,EAAArB,EAAAsB,cAACmkB,GAAA,EAAD,CAAUlkB,MAAO,CAAEO,QAAS6G,EAAQ,GAAK,IAAMqgB,IAC7C3nB,EAAArB,EAAAsB,cAACokB,GAAA,EAAD,CAAWoF,QAAS,QAM9BzpB,EAAArB,EAAAsB,cAACypB,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BpmB,UAAU,MACV8Y,MAAOhF,EAAIlK,OACXsa,YAAaA,EACbP,KAAMA,EACN0C,aA7FiB,SAACnrB,EAAOorB,GAC/B1C,EAAQ0C,IA6FFC,oBA1FwB,SAAArrB,GAC9BipB,EAAeqC,SAAStrB,EAAMmR,OAAO3M,MAAO,KAC5CkkB,EAAQ,OA2FNnnB,EAAArB,EAAAsB,cAAC+pB,GAAA,EAAD,CACEC,QAASjqB,EAAArB,EAAAsB,cAACiqB,GAAA,EAAD,CAAQ1c,QAASlG,EAAOzC,SAzFb,SAAApG,GACxB6oB,EAAS7oB,EAAMmR,OAAOpC,YAyFlBrB,MAAM,mBC9Vd,IAAM4B,GAASC,EAAQ,KAIjBI,GAAY,CAChBC,WAAY,CACVnO,MAAO,CACLoO,UAAWC,IACXnO,MAAO,OAMQ+pB,eACnB,SAAAA,EAAY/qB,GAAO,IAAAD,EAAA,OAAAgE,OAAAqI,EAAA,EAAArI,CAAAxC,KAAAwpB,IACjBhrB,EAAAgE,OAAAsI,EAAA,EAAAtI,CAAAxC,KAAAwC,OAAAuI,EAAA,EAAAvI,CAAAgnB,GAAAxe,KAAAhL,KAAMvB,KA2BV8P,aAAe,SAACzQ,EAAOqG,GACrB3F,EAAKiO,SAAS,CAAEnK,MAAO6B,EAASqK,WAAY,GAAGC,YAAa,GAAGC,cAAc,GAAGC,eAAe,MA7B5EnQ,EAgCrB0E,UAAY,SAAChC,GACX,MAAO,CACLlE,GAAE,cAAA8F,OAAgB5B,GAClBiC,gBAAA,mBAAAL,OAAoC5B,KAnCnB1C,EAuCrB0F,SAAW,SAAAqa,GAAI,OAAI/f,EAAKiO,SAAS,CAAE8R,UAvCd/f,EAyCnBsP,cAzCmBtL,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAyCH,SAAAjJ,IAAA,IAAAkQ,EAAAC,EAAA,OAAAjQ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEM6P,KAAMC,IAAN,GAAApL,OAAasK,GAAOe,IAAIC,UAAxB,cAFN,OAENL,EAFM7P,EAAAmQ,KAGNL,EAAWD,EAAI7F,KACrB1J,EAAKiO,SAAS,CAAEuB,SAAUA,IAJd9P,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoQ,GAAApQ,EAAA,SAMZe,QAAQC,IAAR,0BAAA4D,OAAA5E,EAAAoQ,KANY,yBAAApQ,EAAAkB,SAAAvB,EAAA,iBAzCGW,EAmDnByM,iBAAiB,SAAC/C,GAChB,IAAIgD,EAAS,GAGTC,EAAUC,GAAaV,MAAMrC,IAAI,SAACgD,GACpC,IAAIC,EAAYF,GAAaT,MAAMtC,IAAI,SAACkD,EAAEhD,GACxC,MAAO,CAACjG,MAAK,GAAAQ,OAAIyI,GAAJzI,OAAQuI,GAAIG,MAAMD,EAAElJ,SAAS,MAE7C,MAAO,CAACC,MAAM+I,EAAEG,MAAMH,EAAEhJ,SAASiJ,KAGjCpD,EAAKoC,QAAQ,SAACmB,EAAQlD,GACnB,IACImD,EAAcC,KAAKC,MAAMD,KAAKE,UAAUV,IACzCW,EAAWL,EAAQf,MACnBqB,EAAUN,EAAQd,MAElB6U,EAAe,GACfG,EAAc,GAGI,OAAnBlU,EAAQ8P,SAITiE,EAHO/T,EAAQ8P,OAAOjP,OAAO,SAAAgO,GAAI,OAC/BA,EAAKsB,QAAUR,QAAO,IAAIqO,MAAOC,aAAgBpP,EAAKmC,MAAQrB,QAAO,IAAIqO,MAAOE,aAE/DthB,IAAI,SAAAH,GAAS,OAAOA,EAAK4Q,MAE5C6G,EAAclU,EAAQ8P,OAAOlT,IAAI,SAAAiS,GAC3B,OAAOA,EAAKxB,OAGpB,IAAI8Q,EAAO,EACPC,EAAO,EACRrK,EAAchT,OAAQ,IACvBod,EAAOpK,EAAcpG,OAAO,SAACqG,EAAaC,GAAd,OAA+BD,EAAcC,IAAcF,EAAchT,QAEpGmT,EAAYnT,OAAO,IACpBqd,EAAOlK,EAAYvG,OAAO,SAACqG,EAAaC,GAAd,OAA+BD,EAAcC,IAAcC,EAAYnT,QAEnG,IAAIR,EAAc,CAChB1J,MAAOmJ,EAAQzO,GACf0N,MAAOe,EAAQf,MACfC,MAAMc,EAAQd,MACda,MAAOC,EAAQ5B,KACfrB,MAAMiD,EAAQjD,MACdshB,KAAKre,EAAQqe,KACbvO,OAAO9P,EAAQ8P,OACfiE,cAAcA,EACdG,YAAYA,EACZyI,SAAS1X,KAAKyI,MAAMyQ,GACpBvB,SAAS3X,KAAKyI,MAAM0Q,GACpBrO,SAAS/P,EAAQ+P,SACjBC,KAAKhQ,EAAQgQ,MAETtP,EAAYhB,EAAQiB,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAQwJ,IAE3CO,EAAYlB,EAAQgB,GAAY9J,SAAS+J,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAF,GAAAQ,OAAaiJ,GAAbjJ,OAAwBgJ,KAEnFJ,EAAYS,GAAY9J,SAASgK,GAAYhK,SAASuH,KAAKoC,GAC3Db,EAAQgB,GAAcT,EAAYS,GAE/BjB,EAAOtB,KAAKoC,KAIlBb,EAAQb,QAAQ,SAAC/B,EAAErH,GACjB,IAAIuH,EAAOF,EAAElG,SAASiK,OAAO,SAAAC,GAAC,OAAsB,IAApBA,EAAElK,SAASmK,SAC1CrB,EAAQjK,GAAOmB,SAAUoG,IAE3B0C,EAASA,EAAQmB,OAAO,SAAA3D,GAAC,OAAsB,IAApBA,EAAEtG,SAASmK,SACtChO,EAAKiO,SAAS,CAACtB,QAAQA,EAAQD,OAAOA,EAAOwL,IAAIxO,EAAK6hB,YAAY3e,GAAaV,MAAMsf,YAAY5e,GAAaT,SAzH/FnM,EA4HnBmO,gBA5HmBnK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA4HD,SAAAiB,IAAA,OAAAhK,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,cAAA4J,EAAA5J,KAAA,EACV4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,GAC9D1J,EAAKyM,iBAAiB/C,EAAKA,KAAKC,YAAYC,SAF9B,wBAAAJ,EAAA5I,SAAA2I,MA5HCvJ,EAmInBoO,kBAnImBpK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAmIC,SAAAkC,IAAA,OAAAjL,EAAAC,EAAAC,KAAA,SAAAkL,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA/K,MAAA,cAAA+K,EAAA/K,KAAA,EACZiV,QAAQC,IAAI,CAAC9U,EAAKmO,oBAAoBvF,KAAK,SAACkB,GAChD9J,EAAKiO,SAAS,CAACC,SAAQ,MAFP,wBAAAvD,EAAA/J,SAAA4J,MAnIDxK,EA2InByrB,0BAA4B,SAAAnsB,GAC1BU,EAAKiO,SAAS,CAACsd,YAAYjsB,EAAMmR,OAAO3M,SA5IvB9D,EA+InB0rB,0BAA4B,SAAApsB,GAC1BU,EAAKiO,SAAS,CAACud,YAAYlsB,EAAMmR,OAAO3M,SAhJvB9D,EAqJnB2rB,UAAU,SAAC7nB,GACT,SAAAQ,OAAUR,EAAV,mBAtJiB9D,EAyJnB4rB,mBAAqB,SAACtsB,EAAOqG,GAE5B,OAAOA,GAzJN3F,EAAKmD,MAAQ,CACX0oB,MAAM7rB,EAAKC,MAAMC,KAAK0B,gBAEtBoO,WAAY,GACZC,YAAa,GAEbC,cAAc,GACdC,eAAe,GAEfrM,MAAM,EACNoR,WAAY,KACZ1F,SAAU,GACVnB,QAAS,GACTC,SAAU,GACVJ,SAAQ,EACRxB,OAAO,KACPC,QAAQ,KAAMoT,KAAM,IAAIkL,KACxB/S,IAAI,KAEJqT,YAAY,GACZC,YAAY,GAEZM,YAAY,IACZC,YAAY,KAzBG/rB,wEAgKV,IAAAuO,EAAA/M,KACP,OACEX,EAAArB,EAAAsB,cAAA,WAEIU,KAAK2B,MAAM+K,QACXrN,EAAArB,EAAAsB,cAAA,oBAEFD,EAAArB,EAAAsB,cAAC0U,EAAA,SAAD,KAEA3U,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,MACpBT,EAAArB,EAAAsB,cAAA,WAASC,MAAO,CAAC6U,WAAW,IAAI5W,gBAAgB,QAASkC,UAAU,WACnEL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,aACfL,EAAArB,EAAAsB,cAAA,MAAIC,MAAO,CAAClC,MAAM,YAAlB,gDACAgC,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,iBAAb,4JACAL,EAAArB,EAAAsB,cAAA,WAAKD,EAAArB,EAAAsB,cAAA,WAAKD,EAAArB,EAAAsB,cAAA,WAAKD,EAAArB,EAAAsB,cAAA,WAAKD,EAAArB,EAAAsB,cAAA,WAAKD,EAAArB,EAAAsB,cAAA,WACzBD,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACgiB,MAAM,UAAUliB,EAAArB,EAAAsB,cAACohB,GAAD,OAC7BrhB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACgiB,MAAM,UAAUliB,EAAArB,EAAAsB,cAAC0iB,GAAD,OAC7B3iB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACgiB,MAAM,UAAUliB,EAAArB,EAAAsB,cAACkiB,GAAD,OAC7BniB,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOC,UAAW,EAAGC,QAAM,GAC3B1E,EAAArB,EAAAsB,cAAC0E,EAAA,EAAD,CAAMI,eAAe,UAAUC,UAAU,UAAU/B,MAAOtC,KAAK2B,MAAMW,MAAO4B,SAAUlE,KAAKuO,aAAc3O,aAAW,uBAClHP,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK6I,MAAM,SAAYxL,KAAKkD,UAAU,KACtC7D,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK6I,MAAM,QAAWxL,KAAKkD,UAAU,OAGvC7D,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAACkrB,GAAD,CAAUloB,MAAOtC,KAAK2B,MAAMW,MAAOpB,MAAO,GACxC7B,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAACgG,GAAD,CAAe/F,MAAO,CAACE,MAAM,OAAOK,OAAO,IAAK4F,UAAW,CAAClG,SAAS,WAAW0U,MAAM,IAAKhO,QAAS,MACtG7G,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,OAAO+J,UAAU,KACpC/U,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,SAuBnBJ,EAAArB,EAAAsB,cAAA,OAAMC,MAAO,CAACE,MAAM,MAGhBO,KAAK2B,MAAMuJ,OAAO7C,IAAI,SAACoD,EAASlD,GAC9B,OAAkD,IAA/CwE,EAAKpL,MAAMkL,QAAQiF,QAAQrG,EAAQnJ,OAElCjD,EAAArB,EAAAsB,cAAC+f,GAAD,CACE3I,IAAK3J,EAAKpL,MAAM+U,IAChB1Z,GAAIyO,EAAQnJ,MACZuH,KAAM4B,EAAQD,MACdgU,cAAe/T,EAAQ+T,cACvBG,YAAalU,EAAQkU,YACrBpE,OAAQ9P,EAAQ8P,OAChBC,SAAU/P,EAAQ+P,SAClBC,KAAMhQ,EAAQgQ,OAGb,SAQfpc,EAAArB,EAAAsB,cAACkrB,GAAD,CAAUloB,MAAOtC,KAAK2B,MAAMW,MAAOpB,MAAO,GAC1C7B,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAACgG,GAAD,CAAe/F,MAAO,CAACE,MAAM,OAAOK,OAAO,IAAK4F,UAAW,CAAClG,SAAS,WAAW0U,MAAM,IAAKhO,QAAS,MACpG7G,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,OAAO+J,UAAU,KACpC/U,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,WAAWuC,MAAO,CAACE,MAAM,QAC/BJ,EAAArB,EAAAsB,cAACiV,GAAA,EAAD,CAAahV,MAAO,CAACE,MAAM,SAC7BJ,EAAArB,EAAAsB,cAACkV,GAAA,EAAD,CAAYxX,GAAG,2BAAf,+CACAqC,EAAArB,EAAAsB,cAACmV,GAAA,EAAD,CACEC,QAAQ,0BACR1X,GAAG,oBACH2X,UAAQ,EACRrS,MAAOtC,KAAK2B,MAAMooB,YAClB7lB,SAAU,SAAApG,GAAK,OAAGiP,EAAKkd,0BAA0BnsB,IACjDqJ,MAAO9H,EAAArB,EAAAsB,cAACsV,GAAA,EAAD,CAAO5X,GAAG,yBACjB6X,YAAa,SAAAC,GAAQ,OACnBzV,EAAArB,EAAAsB,cAAA,WACGwV,EAASzM,IAAI,SAAA/F,GAAK,OACjBjD,EAAArB,EAAAsB,cAACyV,GAAA,EAAD,CAAMjE,IAAKxO,EAAOkJ,MAAOlJ,EAAOmoB,WAAYprB,EAAArB,EAAAsB,cAACorB,GAAA1sB,EAAD,YAIlDyP,UAAWA,IAEVrC,GAAaV,MAAMrC,IAAI,SAAAqC,GAAK,OAC3BrL,EAAArB,EAAAsB,cAAC0V,GAAA,EAAD,CAAUlE,IAAKpG,EAAOpI,MAAOoI,GAC1BA,QAMLrL,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,WAAWuC,MAAO,CAACE,MAAM,QACjCJ,EAAArB,EAAAsB,cAACiV,GAAA,EAAD,CAAahV,MAAO,CAACE,MAAM,SAC7BJ,EAAArB,EAAAsB,cAACkV,GAAA,EAAD,CAAYxX,GAAG,2BAAf,qDACAqC,EAAArB,EAAAsB,cAACmV,GAAA,EAAD,CACEC,QAAQ,0BACR1X,GAAG,oBACH2X,UAAQ,EACRrS,MAAOtC,KAAK2B,MAAMqoB,YAClB9lB,SAAU,SAAApG,GAAK,OAAGiP,EAAKmd,0BAA0BpsB,IACjDqJ,MAAO9H,EAAArB,EAAAsB,cAACsV,GAAA,EAAD,CAAO5X,GAAG,yBACjB6X,YAAa,SAAAC,GAAQ,OACnBzV,EAAArB,EAAAsB,cAAA,WACGwV,EAASzM,IAAI,SAAA/F,GAAK,OACjBjD,EAAArB,EAAAsB,cAACyV,GAAA,EAAD,CAAMjE,IAAKxO,EAAOkJ,MAAOlJ,EAAOmoB,WAAYprB,EAAArB,EAAAsB,cAACorB,GAAA1sB,EAAD,YAIlDyP,UAAWA,IAEVrC,GAAaT,MAAMtC,IAAI,SAAAwY,GAAM,OAC5BxhB,EAAArB,EAAAsB,cAAC0V,GAAA,EAAD,CAAUlE,IAAK+P,EAAQve,MAAOue,GAC3BA,QAOHxhB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,MAAM2U,UAAU,GAAG1T,WAAW,KACjDrB,EAAArB,EAAAsB,cAACiV,GAAA,EAAD,CAAa9T,QAAQ,YACrBpB,EAAArB,EAAAsB,cAACkV,GAAA,EAAD,CAAYF,QAAQ,6BAApB,SACAjV,EAAArB,EAAAsB,cAACqrB,GAAA,EAAD,CACA3tB,GAAG,4BACHsF,MAAOtC,KAAK2B,MAAM2oB,YAClBpmB,SAAU,SAAApG,GAAK,OAAEiP,EAAKN,SAAS,CAAC6d,YAAYxsB,EAAMmR,OAAO3M,SACzDsoB,aAAcvrB,EAAArB,EAAAsB,cAACurB,GAAA,EAAD,CAAgBrrB,SAAS,OAAzB,gBACdsrB,WAAY,OAIZzrB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,MAAM2U,UAAU,GAAG1T,WAAW,KACjDrB,EAAArB,EAAAsB,cAACiV,GAAA,EAAD,CAAa9T,QAAQ,YACrBpB,EAAArB,EAAAsB,cAACkV,GAAA,EAAD,CAAYF,QAAQ,6BAApB,SACAjV,EAAArB,EAAAsB,cAACqrB,GAAA,EAAD,CACA3tB,GAAG,4BACHsF,MAAOtC,KAAK2B,MAAM4oB,YAClBrmB,SAAU,SAAApG,GAAK,OAAEiP,EAAKN,SAAS,CAAC8d,YAAYzsB,EAAMmR,OAAO3M,SACzDsoB,aAAcvrB,EAAArB,EAAAsB,cAACurB,GAAA,EAAD,CAAgBrrB,SAAS,OAAzB,gBACdsrB,WAAY,OAIdzrB,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,SAASuC,MAAO,CAAC6U,UAAU,GAAG1T,WAAW,KACjDrB,EAAArB,EAAAsB,cAACqG,GAAA,EAAD,CAAY/E,QAAS,kBAAImM,EAAKN,SAAS,CAACse,OAAOhe,EAAKpL,MAAMqpB,WAAYprB,aAAW,UAC/EP,EAAArB,EAAAsB,cAAC2rB,GAAAjtB,EAAD,CAAckV,SAAS,QAAQ3T,MAAO,CAAElC,MAAO,gBAInDgC,EAAArB,EAAAsB,cAAC0mB,GAAD,CACEtb,MAAO1K,KAAK2B,MAAMooB,YAClBpf,MAAO3K,KAAK2B,MAAMqoB,YAClB9C,MAAOlnB,KAAK2B,MAAM4oB,YAClB9W,MAAOzT,KAAK2B,MAAM2oB,YAClB5T,IAAK1W,KAAK2B,MAAMuJ,sBA5UUrK,aA+VtC,SAASuB,GAAS3D,GAAO,IACf4D,EAAqC5D,EAArC4D,SAAUC,EAA2B7D,EAA3B6D,MAAOpB,EAAoBzC,EAApByC,MAAUqB,EADZC,OAAAC,EAAA,EAAAD,CACsB/D,EADtB,8BAGvB,OACEY,EAAArB,EAAAsB,cAACoD,EAAA,EAADF,OAAAG,OAAA,CACEC,UAAU,MACVjD,KAAK,WACLkD,OAAQP,IAAUpB,EAClBlE,GAAE,+BAAA8F,OAAiC5B,GACnC6B,kBAAA,0BAAAD,OAA2C5B,IACvCqB,GAEHD,IAAUpB,GAAS7B,EAAArB,EAAAsB,cAAC0D,EAAA,EAAD,CAAKC,EAAG,GAAIZ,IC3ZtC,IAAM0E,GAAK,yIAWLmkB,GAAW,SAAAxpB,GAAA,IAAAypB,EAAAzpB,EAAGkO,YAAH,IAAAub,EAAU,WAAVA,EAAsBthB,EAAtBnI,EAAsBmI,KAAtBuhB,EAAA1pB,EAA4BmL,eAA5B,IAAAue,KAA6ClnB,EAA7CxC,EAA6CwC,SAA7C,OACf7E,EAAArB,EAAAsB,cAAA,SAAOC,MAAO,CAAC8K,QAAQ,QAASuF,KAAMA,EAAM/F,KAAMA,EAAMgD,QAASA,EAAS3I,SAAUA,KAGjEmnB,eACnB,SAAAA,EAAY5sB,GAAO,IAAAD,EAAA,OAAAgE,OAAAqI,EAAA,EAAArI,CAAAxC,KAAAqrB,IACjB7sB,EAAAgE,OAAAsI,EAAA,EAAAtI,CAAAxC,KAAAwC,OAAAuI,EAAA,EAAAvI,CAAA6oB,GAAArgB,KAAAhL,KAAMvB,KAkBR6sB,YAAY,WACV,IAAIC,EAAa,GACjB/sB,EAAKmD,MAAM6pB,aAAalhB,QAAQ,SAAChI,EAAMwO,IACxB,IAAVxO,GACDipB,EAAY3hB,KAAKkH,KAGpBN,MAAM+a,IA1BU/sB,EA8BnBoO,kBA9BmBpK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA8BC,SAAAjJ,IAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZ4I,IAAIC,QAAQC,YAAiBH,KAAQK,KAAK,SAAAc,GAC9C,IAAIujB,EAAU,GAchB,OAbEvjB,EAAKA,KAAKC,YAAYC,MAAMC,IAAI,SAACqjB,EAAKnjB,GAEpC,IAAIojB,EAAW,CACb9hB,KAAM6hB,EAAK7hB,KACXiH,IAAK4a,EAAK7hB,KACV2B,MAAOkgB,EAAK7hB,MAEd4hB,EAAQ7hB,KAAK+hB,KAEjBntB,EAAKiO,SAAS,CAACmf,WAAWH,IAC1BI,IAAQC,IAAI,WAAY,SACvB1kB,KAAM,SAAA0H,GAAM,OAAI7P,QAAQC,IAAI4P,KAC5BwB,MAAM,SAAAC,GAAG,OAAItR,QAAQC,IAAIqR,KACnB,KAhBW,wBAAArS,EAAAkB,SAAAvB,MA3BlBW,EAAKmD,MAAQ,CACX6pB,aAAc,IAAIO,IAClBH,WAAW,IAGbptB,EAAK+P,aAAe/P,EAAK+P,aAAahN,KAAlBiB,OAAAuR,GAAA,EAAAvR,CAAAhE,IARHA,4EAWN/B,GACX,IAAM6d,EAAO7d,EAAEwS,OAAOpF,KAChBmiB,EAAYvvB,EAAEwS,OAAOpC,QAE3B7M,KAAKyM,SAAS,SAAAwf,GAAS,MAAK,CAAET,aAAcS,EAAUT,aAAaU,IAAI5R,EAAM0R,uCAoCtE,IAAAjf,EAAA/M,KACP,OACEX,EAAArB,EAAAsB,cAACD,EAAArB,EAAMmuB,SAAP,KACE9sB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,SAGpBrK,KAAK2B,MAAMiqB,WAAWvjB,IAAI,SAAAiS,GAAI,OAC3Bjb,EAAArB,EAAAsB,cAAA,SAAOwR,IAAKwJ,EAAKxJ,KACfzR,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC/B,gBAAgBuP,EAAKpL,MAAM6pB,aAAatd,IAAIoM,EAAKzQ,MAAM,MAAM,OAAQyL,OAAO,KAAOgF,EAAKzQ,MACrGxK,EAAArB,EAAAsB,cAAC8sB,GAAD,CAAUviB,KAAMyQ,EAAKzQ,KAAMgD,QAASE,EAAKpL,MAAM6pB,aAAatd,IAAIoM,EAAKzQ,MAAO3F,SAAU6I,EAAKwB,mBAKjGlP,EAAArB,EAAAsB,cAAC+sB,GAAD,cAlEkClqB,IAAMtB,oBCmBjCyrB,OApCf,SAAoB7tB,GAClB,OACEA,EAAM8tB,aACL9tB,EAAM8tB,WAAWC,YAAc/tB,EAAM8tB,WAAWE,eAG/CptB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,kCACbL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,8BACZjB,EAAM8tB,WAAWE,cACd,uDACA,IAENptB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,6CACZjB,EAAM8tB,WAAWC,WAAa,0BAA4B,KAIxD/tB,EAAMiuB,UAEbrtB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,kCACbL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,8BAA8BjB,EAAMiuB,YAG9CjuB,EAAM8tB,YAAc9tB,EAAM8tB,WAAWI,QAE5CttB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,kCACbL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,8BACZjB,EAAM8tB,WAAWI,QAAQxtB,UAKzBE,EAAArB,EAAAsB,cAAA,aCmCIstB,OArEf,SAAsB9uB,EAAO6D,GAG3B,IADA,IAAMkrB,EAASC,SAASC,uBAAuB,aACtCxkB,EAAI,EAAGA,EAAIskB,EAAOrgB,OAAQjE,IAC5BskB,EAAOtkB,GAAGykB,UAAUC,SAAS,UAChCJ,EAAOtkB,GAAGykB,UAAUE,OAAO,aAI/B,OAAIvrB,EAAMwrB,eAAe,aAAkC,KAAnBxrB,EAAMrB,UAC5CwsB,SAASM,eAAe,YAAYJ,UAAUK,IAAI,aAC3C,CAAEb,YAAY,IAEnB7qB,EAAMwrB,eAAe,cAAoC,KAApBxrB,EAAM2rB,WAC7CR,SAASM,eAAe,aAAaJ,UAAUK,IAAI,aAC5C,CAAEb,YAAY,IAEnB7qB,EAAMwrB,eAAe,aAAkC,KAAnBxrB,EAAM4rB,UAC5CT,SAASM,eAAe,YAAYJ,UAAUK,IAAI,aAC3C,CAAEb,YAAY,IAEnB7qB,EAAMwrB,eAAe,UAA4B,KAAhBxrB,EAAM6rB,OACzCV,SAASM,eAAe,SAASJ,UAAUK,IAAI,aACxC,CAAEb,YAAY,IAGrB7qB,EAAMwrB,eAAe,qBACM,KAA3BxrB,EAAM8rB,kBAENX,SAASM,eAAe,oBAAoBJ,UAAUK,IAAI,aACnD,CAAEb,YAAY,IAEnB7qB,EAAMwrB,eAAe,aAAkC,KAAnBxrB,EAAM+rB,UAC5CZ,SAASM,eAAe,YAAYJ,UAAUK,IAAI,aAC3C,CAAEb,YAAY,IAEnB7qB,EAAMwrB,eAAe,gBAAwC,KAAtBxrB,EAAMgsB,aAC/Cb,SAASM,eAAe,eAAeJ,UAAUK,IAAI,aAC9C,CAAEb,YAAY,IAEnB7qB,EAAMwrB,eAAe,gBAAwC,KAAtBxrB,EAAMisB,aAC/Cd,SAASM,eAAe,eAAeJ,UAAUK,IAAI,aAC9C,CAAEb,YAAY,IAEnB7qB,EAAMwrB,eAAe,oBAAgD,KAA1BxrB,EAAMksB,iBACnDf,SAASM,eAAe,mBAAmBJ,UAAUK,IAAI,aAClD,CAAEb,YAAY,IAGrB7qB,EAAMwrB,eAAe,aACrBxrB,EAAMwrB,eAAe,oBACrBxrB,EAAM+rB,WAAa/rB,EAAMksB,iBAEzBf,SAASM,eAAe,YAAYJ,UAAUK,IAAI,aAClDP,SAASM,eAAe,mBAAmBJ,UAAUK,IAAI,aAClD,CAAEZ,eAAe,IAGxB9qB,EAAMwrB,eAAe,gBACrBxrB,EAAMwrB,eAAe,oBACrBxrB,EAAMisB,cAAgBjsB,EAAMksB,iBAE5Bf,SAASM,eAAe,eAAeJ,UAAUK,IAAI,aACrDP,SAASM,eAAe,mBAAmBJ,UAAUK,IAAI,aAClD,CAAEZ,eAAe,SAP1B,GCuEaqB,8MAzHbnsB,MAAQ,CACNrB,SAAU,GACVotB,SAAU,GACVK,OAAQ,CACNpB,QAAS,KACTH,YAAY,MAIhBwB,gBAAkB,WAChBxvB,EAAKiO,SAAS,CACZshB,OAAQ,CACNpB,QAAS,KACTH,YAAY,QAKlByB,mDAAe,SAAApwB,EAAMC,GAAN,IAAAkB,EAAAqB,EAAAkQ,EAAA,OAAAxS,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACbN,EAAMO,iBAGNG,EAAKwvB,mBACChvB,EAAQkvB,GAASpwB,EAAOU,EAAKmD,SAEjCnD,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GAAMhE,EAAKmD,MAAMosB,OAAW/uB,KAR1Bd,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAcQE,IAAK8vB,OAAO5vB,EAAKmD,MAAMrB,SAAU9B,EAAKmD,MAAM+rB,UAdpD,OAcLrtB,EAdKnC,EAAAmQ,KAeXpP,QAAQC,IAAImB,GACZ7B,EAAKC,MAAMC,KAAKC,eAAc,GAC9BH,EAAKC,MAAMC,KAAKE,QAAQyB,GACxB7B,EAAKC,MAAM4vB,QAAQzkB,KAAK,KAlBb1L,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoQ,GAAApQ,EAAA,SAoBPqS,EAAM,KACoCA,EAA7CrS,EAAAoQ,GAAMnP,QAA0CjB,EAAAoQ,GAA1B,CAAEnP,QAAAjB,EAAAoQ,IACzB9P,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GACFhE,EAAKmD,MAAMosB,OADV,CAEJpB,QAASpc,MAzBF,yBAAArS,EAAAkB,SAAAvB,EAAA,0EA+BfywB,cAAgB,SAAAxwB,GACdU,EAAKiO,SAALjK,OAAA4iB,GAAA,EAAA5iB,CAAA,GACG1E,EAAMmR,OAAOjS,GAAKc,EAAMmR,OAAO3M,QAElCwqB,SAASM,eAAetvB,EAAMmR,OAAOjS,IAAIgwB,UAAUE,OAAO,sFAI1D,OACE7tB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC/B,gBAAgB,SAC7B6B,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,OACpBT,EAAArB,EAAAsB,cAAA,WAASI,UAAU,gBACjBL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,QAAU3K,UAAU,aACvCL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QACjBJ,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,aAAaJ,MAAM,MAAMK,OAAO,MAAMC,IAAI,YAIrDV,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOC,UAAW,EAAGvE,MAAO,CAACuC,QAAQ,GAAGrC,MAAM,QAC9CJ,EAAArB,EAAAsB,cAAA,QAAMivB,SAAUvuB,KAAKiuB,cACnB5uB,EAAArB,EAAAsB,cAAA,mBACAD,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAACE,MAAM,KAAMC,UAAU,WAC/BL,EAAArB,EAAAsB,cAAA,oBACAD,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,OACL5S,GAAG,WACH+I,mBAAiB,eACjB6Q,YAAY,0BACZtU,MAAOtC,KAAK2B,MAAMrB,SAClB4D,SAAUlE,KAAKsuB,kBAIrBjvB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAACE,MAAM,KAAMC,UAAU,WAC/BL,EAAArB,EAAAsB,cAAA,qBACAD,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,WACL5S,GAAG,WACH4Z,YAAY,WACZtU,MAAOtC,KAAK2B,MAAM+rB,SAClBxpB,SAAUlE,KAAKsuB,kBAIrBjvB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAAA,KAAGP,KAAK,mBAAR,sBAGJM,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAACkvB,GAAD,CAAYjC,WAAYvsB,KAAK2B,MAAMosB,SACnC1uB,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAC/B,gBAAgB,UAAUgD,YAAY,EAAED,YAAY,OAAOlD,MAAM,OAAOoC,MAAM,KAAMC,UAAU,qBAA9G,eASVL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,eAnHNe,aCwJL4tB,8MAvJb9sB,MAAQ,CACNrB,SAAU,GACVktB,MAAO,GACPE,SAAU,GACVG,gBAAiB,GACjBE,OAAQ,CACNpB,QAAS,KACTH,YAAY,EACZC,eAAe,MAInBuB,gBAAkB,WAChBxvB,EAAKiO,SAAS,CACZshB,OAAQ,CACNpB,QAAS,KACTH,YAAY,EACZC,eAAe,QAKrBwB,mDAAe,SAAApwB,EAAMC,GAAN,IAAAkB,EAAAue,EAAAjd,EAAAktB,EAAAE,EAAAgB,EAAAne,EAAA,OAAAxS,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACbN,EAAMO,iBAGNG,EAAKwvB,mBACChvB,EAAQkvB,GAASpwB,EAAOU,EAAKmD,SAEjCnD,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GAAMhE,EAAKmD,MAAMosB,OAAW/uB,KAR1Bue,EAayB/e,EAAKmD,MAAnCrB,EAbKid,EAaLjd,SAAUktB,EAbLjQ,EAaKiQ,MAAOE,EAbZnQ,EAaYmQ,SAbZxvB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAekBE,IAAKqwB,OAAO,CACvCruB,WACAotB,WACAkB,WAAY,CACVpB,MAAOA,KAnBA,OAeLkB,EAfKxwB,EAAAmQ,KAsBX7P,EAAKC,MAAM4vB,QAAQzkB,KAAK,YACxB3K,QAAQC,IAAIwvB,GAvBDxwB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAoQ,GAAApQ,EAAA,SAyBPqS,EAAM,KACoCA,EAA7CrS,EAAAoQ,GAAMnP,QAA0CjB,EAAAoQ,GAA1B,CAAEnP,QAAAjB,EAAAoQ,IACzB9P,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GACFhE,EAAKmD,MAAMosB,OADV,CAEJpB,QAASpc,MA9BF,yBAAArS,EAAAkB,SAAAvB,EAAA,0EAoCfywB,cAAgB,SAAAxwB,GACdU,EAAKiO,SAALjK,OAAA4iB,GAAA,EAAA5iB,CAAA,GACG1E,EAAMmR,OAAOjS,GAAKc,EAAMmR,OAAO3M,QAElCwqB,SAASM,eAAetvB,EAAMmR,OAAOjS,IAAIgwB,UAAUE,OAAO,sFAI1D,OAEJ7tB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC/B,gBAAgB,SAC7B6B,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,OACpBT,EAAArB,EAAAsB,cAAA,WAASI,UAAU,gBACjBL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,QAAU3K,UAAU,aACvCL,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOC,UAAW,EAAGvE,MAAO,CAACuC,QAAQ,GAAGrC,MAAM,QAC9CJ,EAAArB,EAAAsB,cAAA,QAAMivB,SAAUvuB,KAAKiuB,cACnB5uB,EAAArB,EAAAsB,cAAA,sBACAD,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAACE,MAAM,KAAMC,UAAU,WACjCL,EAAArB,EAAAsB,cAAA,iBACED,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,OACL5S,GAAG,WACH+I,mBAAiB,eACjB6Q,YAAY,iBACZtU,MAAOtC,KAAK2B,MAAMrB,SAClB4D,SAAUlE,KAAKsuB,kBAIrBjvB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAACE,MAAM,KAAMC,UAAU,WAC/BL,EAAArB,EAAAsB,cAAA,kBACAD,EAAArB,EAAAsB,cAAA,SACCI,UAAU,QACVkQ,KAAK,QACL5S,GAAG,QACH+I,mBAAiB,YACjB6Q,YAAY,cACZtU,MAAOtC,KAAK2B,MAAM6rB,MAClBtpB,SAAUlE,KAAKsuB,kBAIpBjvB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAACE,MAAM,KAAMC,UAAU,0BAC/BL,EAAArB,EAAAsB,cAAA,qBACAD,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,WACL5S,GAAG,WACH4Z,YAAY,WACZtU,MAAOtC,KAAK2B,MAAM+rB,SAClBxpB,SAAUlE,KAAKsuB,kBAIrBjvB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAACE,MAAM,KAAMC,UAAU,0BAC/BL,EAAArB,EAAAsB,cAAA,6BACAD,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,WACL5S,GAAG,kBACH4Z,YAAY,mBACZtU,MAAOtC,KAAK2B,MAAMksB,gBAClB3pB,SAAUlE,KAAKsuB,kBAIrBjvB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAACkvB,GAAD,CAAYjC,WAAYvsB,KAAK2B,MAAMosB,SACnC1uB,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAC/B,gBAAgB,UAAUgD,YAAY,EAAED,YAAY,OAAOlD,MAAM,OAAOoC,MAAM,KAAMC,UAAU,qBAA9G,gBAORL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,MAAMiB,WAAW,KAChCrB,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,UAAUJ,MAAM,MAAMK,OAAO,MAAMC,IAAI,cAItDV,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,eAjJGe,aCqFRguB,8MAtFbltB,MAAQ,CACN6rB,MAAO,GACPO,OAAQ,CACNpB,QAAS,KACTH,YAAY,MAIhBwB,gBAAkB,WAChBxvB,EAAKiO,SAAS,CACZshB,OAAQ,CACNpB,QAAS,KACTH,YAAY,QAKlBsC,4DAAwB,SAAAjxB,EAAMC,GAAN,IAAAkB,EAAA,OAAAjB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtBN,EAAMO,iBAGNG,EAAKwvB,mBACChvB,EAAQkvB,GAASpwB,EAAOU,EAAKmD,SAEjCnD,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GAAMhE,EAAKmD,MAAMosB,OAAW/uB,KARjB,wBAAAd,EAAAkB,SAAAvB,8DAexBywB,cAAgB,SAAAxwB,GACdU,EAAKiO,SAALjK,OAAA4iB,GAAA,EAAA5iB,CAAA,GACG1E,EAAMmR,OAAOjS,GAAKc,EAAMmR,OAAO3M,QAElCwqB,SAASM,eAAetvB,EAAMmR,OAAOjS,IAAIgwB,UAAUE,OAAO,sFAI1D,OACE7tB,EAAArB,EAAAsB,cAAA,WAASI,UAAU,gBACjBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,aACbL,EAAArB,EAAAsB,cAAA,mCACAD,EAAArB,EAAAsB,cAAA,mHAIAD,EAAArB,EAAAsB,cAACkvB,GAAD,CAAYjC,WAAYvsB,KAAK2B,MAAMosB,SAEnC1uB,EAAArB,EAAAsB,cAAA,QAAMivB,SAAUvuB,KAAK8uB,uBACnBzvB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,0CACXL,EAAArB,EAAAsB,cAAA,SACEsQ,KAAK,QACLlQ,UAAU,QACV1C,GAAG,QACH+I,mBAAiB,YACjB6Q,YAAY,cACZtU,MAAOtC,KAAK2B,MAAM6rB,MAClBtpB,SAAUlE,KAAKsuB,gBAEjBjvB,EAAArB,EAAAsB,cAAA,QAAMI,UAAU,yBACdL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,uBAInBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAAA,KAAGP,KAAK,mBAAR,sBAGJM,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAAA,UAAQI,UAAU,qBAAlB,qBA3EamB,aCgHdkuB,8MA/GbptB,MAAQ,CACN8rB,iBAAkB,GAClBD,MAAO,GACPI,YAAa,GACbG,OAAQ,CACNpB,QAAS,KACTH,YAAY,MAIhBwB,gBAAkB,WAChBxvB,EAAKiO,SAAS,CACZshB,OAAQ,CACNpB,QAAS,KACTH,YAAY,QAKlBwC,kEAA8B,SAAAnxB,EAAMC,GAAN,IAAAkB,EAAA,OAAAjB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC5BN,EAAMO,iBAGNG,EAAKwvB,mBACChvB,EAAQkvB,GAASpwB,EAAOU,EAAKmD,SAEjCnD,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GAAMhE,EAAKmD,MAAMosB,OAAW/uB,KARX,wBAAAd,EAAAkB,SAAAvB,8DAe9BywB,cAAgB,SAAAxwB,GACdU,EAAKiO,SAALjK,OAAA4iB,GAAA,EAAA5iB,CAAA,GACG1E,EAAMmR,OAAOjS,GAAKc,EAAMmR,OAAO3M,QAElCwqB,SAASM,eAAetvB,EAAMmR,OAAOjS,IAAIgwB,UAAUE,OAAO,sFAI1D,OACE7tB,EAAArB,EAAAsB,cAAA,WAASI,UAAU,gBACjBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,aACbL,EAAArB,EAAAsB,cAAA,8BACAD,EAAArB,EAAAsB,cAAA,wHAIAD,EAAArB,EAAAsB,cAACkvB,GAAD,CAAYjC,WAAYvsB,KAAK2B,MAAMosB,SAEnC1uB,EAAArB,EAAAsB,cAAA,QAAMivB,SAAUvuB,KAAKgvB,6BACnB3vB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAAA,SACEsQ,KAAK,OACLlQ,UAAU,QACV1C,GAAG,mBACH+I,mBAAiB,uBACjB6Q,YAAY,0BACZtU,MAAOtC,KAAK2B,MAAM8rB,iBAClBvpB,SAAUlE,KAAKsuB,kBAIrBjvB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,0BACXL,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,QACL5S,GAAG,QACH+I,mBAAiB,YACjB6Q,YAAY,cACZtU,MAAOtC,KAAK2B,MAAM6rB,MAClBtpB,SAAUlE,KAAKsuB,gBAEjBjvB,EAAArB,EAAAsB,cAAA,QAAMI,UAAU,yBACdL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,uBAInBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,0BACXL,EAAArB,EAAAsB,cAAA,SACEsQ,KAAK,WACLlQ,UAAU,QACV1C,GAAG,cACH4Z,YAAY,eACZtU,MAAOtC,KAAK2B,MAAMisB,YAClB1pB,SAAUlE,KAAKsuB,gBAEjBjvB,EAAArB,EAAAsB,cAAA,QAAMI,UAAU,yBACdL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,mBAInBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAAA,UAAQI,UAAU,qBAAlB,qBApGyBmB,aCoH1BouB,8MAnHbttB,MAAQ,CACNgsB,YAAa,GACbC,YAAa,GACbC,gBAAiB,GACjBE,OAAQ,CACNpB,QAAS,KACTH,YAAY,EACZC,eAAe,MAInBuB,gBAAkB,WAChBxvB,EAAKiO,SAAS,CACZshB,OAAQ,CACNpB,QAAS,KACTH,YAAY,EACZC,eAAe,QAKrBwB,mDAAe,SAAApwB,EAAMC,GAAN,IAAAkB,EAAA,OAAAjB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACbN,EAAMO,iBAGNG,EAAKwvB,mBACChvB,EAAQkvB,GAASpwB,EAAOU,EAAKmD,SAEjCnD,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GAAMhE,EAAKmD,MAAMosB,OAAW/uB,KAR1B,wBAAAd,EAAAkB,SAAAvB,8DAefywB,cAAgB,SAAAxwB,GACdU,EAAKiO,SAALjK,OAAA4iB,GAAA,EAAA5iB,CAAA,GACG1E,EAAMmR,OAAOjS,GAAKc,EAAMmR,OAAO3M,QAElCwqB,SAASM,eAAetvB,EAAMmR,OAAOjS,IAAIgwB,UAAUE,OAAO,sFAI1D,OACE7tB,EAAArB,EAAAsB,cAAA,WAASI,UAAU,gBACjBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,aACbL,EAAArB,EAAAsB,cAAA,6BACAD,EAAArB,EAAAsB,cAACkvB,GAAD,CAAYjC,WAAYvsB,KAAK2B,MAAMosB,SAEnC1uB,EAAArB,EAAAsB,cAAA,QAAMivB,SAAUvuB,KAAKiuB,cACnB5uB,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,0BACXL,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,WACL5S,GAAG,cACH4Z,YAAY,eACZtU,MAAOtC,KAAK2B,MAAMgsB,YAClBzpB,SAAUlE,KAAKsuB,gBAEjBjvB,EAAArB,EAAAsB,cAAA,QAAMI,UAAU,yBACdL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,mBAInBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,0BACXL,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,WACL5S,GAAG,cACH4Z,YAAY,eACZtU,MAAOtC,KAAK2B,MAAMisB,YAClB1pB,SAAUlE,KAAKsuB,gBAEjBjvB,EAAArB,EAAAsB,cAAA,QAAMI,UAAU,yBACdL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,mBAInBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,0BACXL,EAAArB,EAAAsB,cAAA,SACEI,UAAU,QACVkQ,KAAK,WACL5S,GAAG,kBACH4Z,YAAY,mBACZtU,MAAOtC,KAAK2B,MAAMksB,gBAClB3pB,SAAUlE,KAAKsuB,gBAEjBjvB,EAAArB,EAAAsB,cAAA,QAAMI,UAAU,yBACdL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,mBAInBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAAA,KAAGP,KAAK,mBAAR,sBAGJM,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,SACbL,EAAArB,EAAAsB,cAAA,KAAGI,UAAU,WACXL,EAAArB,EAAAsB,cAAA,UAAQI,UAAU,qBAAlB,+BAxGamB,aCWdquB,oLAXX,OACE7vB,EAAArB,EAAAsB,cAAA,WAASI,UAAU,gBACjBL,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,aACbL,EAAArB,EAAAsB,cAAA,6BACAD,EAAArB,EAAAsB,cAAA,kEAN+BuB,aCA1B,SAASsuB,KACtB,OACE9vB,EAAArB,EAAAsB,cAAA,WAASC,MAAO,CAAC/B,gBAAgB,OAAOsC,OAAO,KAAMJ,UAAU,gBAC7DL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4gB,UAAU,WACrB9gB,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,WAAWJ,MAAM,MAAMK,OAAO,MAAMC,IAAI,eACjDV,EAAArB,EAAAsB,cAAA,sBACAD,EAAArB,EAAAsB,cAAA,4DACAD,EAAArB,EAAAsB,cAAA,yLCeF8N,GAASC,EAAQ,KAEjB+hB,GAAW,CACb,8EACA,uEACA,oFACA,wOAGiBC,eACnB,SAAAA,EAAY5wB,GAAO,IAAAD,EAAA,OAAAgE,OAAAqI,EAAA,EAAArI,CAAAxC,KAAAqvB,IACjB7wB,EAAAgE,OAAAsI,EAAA,EAAAtI,CAAAxC,KAAAwC,OAAAuI,EAAA,EAAAvI,CAAA6sB,GAAArkB,KAAAhL,KAAMvB,KAoBRqP,cArBmBtL,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAqBH,SAAAjJ,IAAA,IAAAkQ,EAAAC,EAAA,OAAAjQ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEM6P,KAAMC,IAAN,GAAApL,OAAasK,GAAOe,IAAIC,UAAxB,cAFN,OAENL,EAFM7P,EAAAmQ,KAGNL,EAAWD,EAAI7F,KACrB1J,EAAKiO,SAAS,CAAEuB,SAAUA,IAJd9P,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoQ,GAAApQ,EAAA,SAMZe,QAAQC,IAAR,0BAAA4D,OAAA5E,EAAAoQ,KANY,yBAAApQ,EAAAkB,SAAAvB,EAAA,iBArBGW,EA+BnB0E,UAAY,SAAChC,GACX,MAAO,CACLlE,GAAE,cAAA8F,OAAgB5B,GAClBiC,gBAAA,mBAAAL,OAAoC5B,KAlCrB1C,EAsCnB+P,aAAe,SAACzQ,EAAOqG,GACrB3F,EAAKiO,SAAS,CAAEnK,MAAO6B,EAASqK,WAAY,GAAGC,YAAa,GAAGC,cAAc,GAAGC,eAAe,MAvC9EnQ,EAyCnByM,iBAAiB,SAAC/C,GAChB,IAAIgD,EAAS,GAGTC,EAAUC,GAAaV,MAAMrC,IAAI,SAACgD,GACpC,IAAIC,EAAYF,GAAaT,MAAMtC,IAAI,SAACkD,EAAEhD,GACxC,MAAO,CAACjG,MAAK,GAAAQ,OAAIyI,GAAJzI,OAAQuI,GAAIG,MAAMD,EAAElJ,SAAS,MAE7C,MAAO,CAACC,MAAM+I,EAAEG,MAAMH,EAAEhJ,SAASiJ,KAGjCpD,EAAKoC,QAAQ,SAACmB,EAAQlD,GACrB,IAAImD,EAAcC,KAAKC,MAAMD,KAAKE,UAAUV,IACvCW,EAAWL,EAAQf,MACnBqB,EAAUN,EAAQd,MAElBqB,EAAc,CAAE1J,MAAOmJ,EAAQzO,GAAKwO,MAAOC,EAAQ5B,KAAKa,MAAMoB,EAASnB,MAAMoB,EAAUE,WAAWR,EAAQQ,WAAYC,WAAWT,EAAQS,WAAW1D,MAAMiD,EAAQjD,OAElK2D,EAAYhB,EAAQiB,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAQwJ,IAC3CO,EAAYlB,EAAQgB,GAAY9J,SAAS+J,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAF,GAAAQ,OAAaiJ,GAAbjJ,OAAwBgJ,KAEjFJ,EAAYS,GAAY9J,SAASgK,GAAYhK,SAASuH,KAAKoC,GAC3Db,EAAQgB,GAAcT,EAAYS,GAE/BjB,EAAOtB,KAAKoC,KAIlBb,EAAQb,QAAQ,SAAC/B,EAAErH,GACjB,IAAIuH,EAAOF,EAAElG,SAASiK,OAAO,SAAAC,GAAC,OAAsB,IAApBA,EAAElK,SAASmK,SAC1CrB,EAAQjK,GAAOmB,SAAUoG,IAE3B0C,EAASA,EAAQmB,OAAO,SAAA3D,GAAC,OAAsB,IAApBA,EAAEtG,SAASmK,SACvChO,EAAKiO,SAAS,CAACtB,QAAQA,EAAQD,OAAOA,KA1EtB1M,EA6EnBmO,gBA7EmBnK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA6ED,SAAAiB,IAAA,OAAAhK,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,cAAA4J,EAAA5J,KAAA,EACV4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,GAC9D1J,EAAKyM,iBAAiB/C,EAAKA,KAAKC,YAAYC,SAF9B,wBAAAJ,EAAA5I,SAAA2I,MA7ECvJ,EAmFnB8wB,aAAa,SAAC7d,GACV,IAAI8d,EAAW,GACjB/wB,EAAKmD,MAAMuJ,OAAOZ,QAAQ,SAAA/B,GACtBkJ,EAAEnH,QAAQ,SAAAiC,GACHhE,EAAEjG,QAAUiK,GACXgjB,EAAW3lB,KAAKrB,OAK5BgnB,EAAWA,EAAWlnB,IAAI,SAAAM,GACtB,MAAO,CAACkB,KAAKlB,EAAE6C,MAAMxO,GAAG2L,EAAErG,SAG9B,IAAIktB,EAAI,KAEJA,EADkB,iBAAnBhxB,EAAKmD,MAAMiO,KACL,CACD,CAAC,OAAQ,KAAK,WAAW,YAAY,OAAO,QAAQ,QAGnD,CACD,CAAC,OAAQ,KAAK,OAAO,QAAQ,QAAQ,QAI7C2f,EAAWjlB,QAAQ,SAAA3B,GACf,IAAIF,EAAO,GACXA,EAAKmB,KAAKjB,EAAEkB,MACZpB,EAAKmB,KAAKjB,EAAE3L,IACZwyB,EAAI5lB,KAAKnB,KAEbjK,EAAKiO,SAAS,CAAC+iB,IAAIA,EAAID,WAAWA,EAAW7gB,cAAc+C,KAlH1CjT,EAqHnBixB,kBAAoB,SAAA3xB,GAClBU,EAAKiO,SAAS,CAACmD,KAAK9R,EAAMmR,OAAO3M,SAtHhB9D,EAwHnBkxB,qBAAuB,SAAA5xB,GACrBU,EAAKiO,SAAS,CAACkjB,SAAS7xB,EAAMmR,OAAO3M,SAzHpB9D,EA4HnBoxB,WAAa,WACXpxB,EAAKiO,SAAS,CAACojB,WAAWrxB,EAAKmD,MAAMkuB,WAAW,KA7H/BrxB,EAgInBsxB,WAAa,WACXtxB,EAAKiO,SAAS,CAACojB,WAAWrxB,EAAKmD,MAAMkuB,WAAW,KAjI/BrxB,EAoInBoO,kBApImBpK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAoIC,SAAAkC,IAAA,OAAAjL,EAAAC,EAAAC,KAAA,SAAAkL,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA/K,MAAA,cAAA+K,EAAA/K,KAAA,EACZiV,QAAQC,IAAI,CAAC9U,EAAKmO,oBAAoBvF,KAAK,SAACkB,GAChD9J,EAAKiO,SAAS,CAACC,SAAQ,MAFP,wBAAAvD,EAAA/J,SAAA4J,MAlIlBxK,EAAKmD,MAAQ,CACXW,MAAM,EACNoR,WAAY,KACZ6b,WAAY,GAEZ7gB,cAAc,GACdC,eAAe,GAEf8D,OAAO,IACP/F,SAAQ,EACRxB,OAAO,KACPC,QAAQ,KACRiG,QAAQ,GAAGye,WAAW,EACtBjgB,KAAK,eACL+f,SAAS,YAhBMnxB,wEA6IV,IAAAuO,EAAA/M,KACP,OACEX,EAAArB,EAAAsB,cAAA,WAEIU,KAAK2B,MAAM+K,QACXrN,EAAArB,EAAAsB,cAAA,oBAEFD,EAAArB,EAAAsB,cAAC0U,EAAA,SAAD,KACU3U,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,MACpBT,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACVjK,EAAArB,EAAAsB,cAAA,WAASC,MAAO,CAAC/B,gBAAgB,QAASkC,UAAU,WAGpDL,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAAA,WACFD,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAACgG,GAAD,CAAe/F,MAAO,CAACE,MAAM,OAAOK,OAAO,IAAK4F,UAAW,CAAClG,SAAS,WAAW0U,MAAM,KAAMhO,QAAS,MACrG7G,EAAArB,EAAAsB,cAACywB,GAAA,EAAD,CAASF,WAAY7vB,KAAK2B,MAAMkuB,WAAYG,YAAY,YACrDZ,GAAU/mB,IAAI,SAACmD,EAAOtK,GAAR,OACb7B,EAAArB,EAAAsB,cAAC2wB,GAAA,EAAD,CAAMnf,IAAKtF,GACTnM,EAAArB,EAAAsB,cAAC4wB,GAAA,EAAD,KAAY1kB,GACZnM,EAAArB,EAAAsB,cAAC6wB,GAAA,EAAD,KACI9wB,EAAArB,EAAAsB,cAAA,WACa,IAAR4B,GACG7B,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,MACfJ,EAAArB,EAAAsB,cAAC+pB,GAAA,EAAD,CACI/mB,MAAM,eACNgnB,QAASjqB,EAAArB,EAAAsB,cAAC8wB,GAAA,EAAD,CACT/yB,MAAM,UACFwP,QAA6B,iBAApBE,EAAKpL,MAAMiO,KACpB1L,SAAU6I,EAAK0iB,oBAEnBjkB,MAAM,wCACN6kB,eAAe,QAElBhxB,EAAArB,EAAAsB,cAAC+pB,GAAA,EAAD,CACG/mB,MAAM,eACNgnB,QAASjqB,EAAArB,EAAAsB,cAAC8wB,GAAA,EAAD,CACT/yB,MAAM,UACFwP,QAA6B,iBAApBE,EAAKpL,MAAMiO,KACpB1L,SAAU6I,EAAK0iB,oBAEnBjkB,MAAM,wCACN6kB,eAAe,SAMlB,IAARnvB,GACD7B,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAAC8K,QAAQ,OAAO+J,UAAU,KACxD/U,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QACfJ,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,sBAsBnBL,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAACE,MAAM,MAAM4V,aAAa,GAAGQ,WAAW,WACtExW,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAO,OAAO4K,QAAQ,QAASrN,GAAG,yBAC/CqC,EAAArB,EAAAsB,cAACgxB,GAAD,CAAaf,WAAYxiB,EAAKpL,MAAM4tB,gBAInC,IAARruB,GACG7B,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,MACjBT,EAAArB,EAAAsB,cAACiW,GAAA,EAAD,CACKjT,MAAOyK,EAAKpL,MAAMguB,SAClBzrB,SAAU6I,EAAK2iB,qBACf9f,KAAK,OACL4F,gBAAiB,CACjBC,QAAQ,KAGbpW,EAAArB,EAAAsB,cAACixB,GAAA,QAAD,CAASZ,SAAQ,GAAA7sB,OAAKiK,EAAKpL,MAAMguB,SAAhB,QAAgCznB,KAAM6E,EAAKpL,MAAM6tB,KAClEnwB,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ+C,QAAQ,YAAYpD,MAAM,UAAUmzB,UAAWnxB,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,kBAAkBJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,iBAA7G,eAMbV,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CACE+yB,SAAoC,IAA1B1jB,EAAKpL,MAAMkuB,WACrBjvB,QAASmM,EAAK+iB,YAFhB,QAMAzwB,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CACE+C,QAAQ,YACRpD,MAAM,UACNuD,QAASmM,EAAK6iB,YAEb7iB,EAAKpL,MAAMkuB,aAAeT,GAAU5iB,OAAS,EAAI,SAAW,4BA5P3C3L,aAoRtC,SAASyvB,GAAY7xB,GAAO,IAAA+E,EACErB,IAAMsB,SAAS,CACvCitB,QAAS,CACP,CAAElqB,MAAO,OAAQmqB,MAAO,QACxB,CAAEnqB,MAAO,UAAWmqB,MAAO,SAJPjtB,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAgB,EAAA,GACjB7B,EADiB+B,EAAA,GAAAA,EAAA,GAUxB,OACIrE,EAAArB,EAAAsB,cAAA,WACFD,EAAArB,EAAAsB,cAACsxB,GAAA5yB,EAAD,CACEwI,MAAM,SACNkqB,QAAS/uB,EAAM+uB,QACfxoB,KAAMzJ,EAAM8wB,6DC7RdniB,GAASC,EAAQ,KACjBC,GAASC,wBAAaC,MAItBC,GAAY,CAChBC,WAAY,CACVnO,MAAO,CACLoO,UAAWC,IACXnO,MAAO,OAKQoO,eACnB,SAAAA,EAAYpP,GAAO,IAAAD,EAAAgE,OAAAqI,EAAA,EAAArI,CAAAxC,KAAA6N,IACjBrP,EAAAgE,OAAAsI,EAAA,EAAAtI,CAAAxC,KAAAwC,OAAAuI,EAAA,EAAAvI,CAAAqL,GAAA7C,KAAAhL,KAAMvB,KA2BRqP,cA5BmBtL,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA4BH,SAAAjJ,IAAA,IAAAkQ,EAAAC,EAAA,OAAAjQ,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEM6P,KAAMC,IAAN,GAAApL,OAAasK,GAAOe,IAAIC,UAAxB,cAFN,OAENL,EAFM7P,EAAAmQ,KAGNL,EAAWD,EAAI7F,KACrB1J,EAAKiO,SAAS,CAAEuB,SAAUA,IAJd9P,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoQ,GAAApQ,EAAA,SAMZe,QAAQC,IAAR,0BAAA4D,OAAA5E,EAAAoQ,KANY,yBAAApQ,EAAAkB,SAAAvB,EAAA,iBA5BGW,EAsCnB0E,UAAY,SAAChC,GACX,MAAO,CACLlE,GAAE,cAAA8F,OAAgB5B,GAClBiC,gBAAA,mBAAAL,OAAoC5B,KAzCrB1C,EA6CnB+P,aAAe,SAACzQ,EAAOqG,GACrB3F,EAAKiO,SAAS,CAAEnK,MAAO6B,EAASqK,WAAY,GAAGC,YAAa,GAAGC,cAAc,GAAGC,eAAe,MA9C9EnQ,EAkDnBoQ,UAAY,SAACC,GAEX,IAAIC,EAAS,GACTC,EAAS,IAAIC,WACbnF,EAAOgF,EAAOI,OAAOC,MAAM,GAAGrF,KAElCkF,EAAOI,WAAWN,EAAOI,OAAOC,MAAM,GAAG,UACzCH,EAAOK,OAAS,SAACP,GAKT,IAHJ,IACQQ,EADGR,EAAOI,OAAOH,OACJQ,MAAM,WACnBC,EAAQF,EAAM,GAAGC,MAAM,KACnB/G,EAAE,EAAEA,EAAE8G,EAAM7C,OAAOjE,IAAI,CAG3B,IAFA,IAAIiH,EAAM,GACNC,EAAYJ,EAAM9G,GAAG+G,MAAM,KACvB/C,EAAE,EAAEA,EAAEgD,EAAQ/C,OAAOD,IACzBiD,EAAID,EAAQhD,IAAMkD,EAAYlD,GAElCuC,EAAOlF,KAAK4F,GAEhB,IAAI/S,EAAI,IAAIiT,KAAK,CAAC/D,KAAKE,UAAUiD,IAAUjF,EAAK8F,QAAQ,OAAO,SAAU,CAACC,KAAM,qBAChFpR,EAAKqR,gBAAgBpT,KAvEZ+B,EAgFnBqR,gBAhFmB,eAAA/H,EAAAtF,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAgFF,SAAAiB,EAAMtL,GAAN,OAAAsB,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,cAAA4J,EAAA5J,KAAA,EACP0R,KAAGC,WAAWtT,EAAG,CACnBuT,WAAY5C,GAAO0C,GAAGE,WACtBC,QAAQ7C,GAAO0C,GAAGG,QAClBC,OAAQ9C,GAAO0C,GAAGI,OAClBC,YAAa/C,GAAO0C,GAAGK,YACvBC,gBAAiBhD,GAAO0C,GAAGM,kBAC5BhJ,KAAM,SAAAkB,GACL9J,EAAK6R,UAAU/H,KACdgI,MAAM,SAAAC,GAAG,OAAGC,MAAMD,KATV,wBAAAvI,EAAA5I,SAAA2I,MAhFE,gBAAAL,GAAA,OAAAI,EAAAH,MAAA3H,KAAA4H,YAAA,GAAApJ,EA6FnB6R,UA7FmB,eAAAtH,EAAAvG,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA6FP,SAAAkC,EAAMyH,GAAN,IAAA7H,EAAA,OAAA7K,EAAAC,EAAAC,KAAA,SAAAkL,GAAA,cAAAA,EAAAhL,KAAAgL,EAAA/K,MAAA,cACJwK,EAAY,CAChB5L,GAAI0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzCjB,KAAM,OACN/F,KAAM4G,EAAMK,IAAInB,QAAV,GAAA7M,OAAqBsK,GAAO0C,GAAGG,QAA/B,KAA0C,IAChDvF,MAAM,KACNqG,KAAMN,EAAM3R,SACZ2L,QAAQ,KACRxC,SAAQ,GAGVX,uBAAoBC,QAAQ,iBAAkB,sEAAe,KAXnD4B,EAAA/K,KAAA,EAYJ4I,IAAIC,QAAQC,YAAiBD,EAAoB,CAACE,MAAOyB,KAAexB,KAAK,kBACjF5I,EAAKwS,iBAbG,wBAAA7H,EAAA/J,SAAA4J,MA7FO,gBAAAH,GAAA,OAAAE,EAAApB,MAAA3H,KAAA4H,YAAA,GAAApJ,EA8GnBwS,aA9GmBxO,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KA8GJ,SAAAmK,IAAA,OAAAlT,EAAAC,EAAAC,KAAA,SAAAiT,GAAA,cAAAA,EAAA/S,KAAA+S,EAAA9S,MAAA,cAAA8S,EAAA9S,KAAA,EACP4I,IAAIC,QAAQC,YAAiBD,IAAqBG,KAAK,SAAAc,GAE7D,IAAIiJ,EAAKjJ,EAAKA,KAAKC,YAAYC,MAAMkE,OAAO,SAAA3D,GAAC,OAAiB,OAAdA,EAAEV,UAAiC,IAAbU,EAAEV,UAEtEzJ,EAAKiO,SAAS,CAAC2E,QAAQD,MALZ,wBAAAD,EAAA9R,SAAA6R,MA9GIzS,EAwHnByM,iBAAiB,SAAC/C,GAChB,IAAIgD,EAAS,GAGTC,EAAUC,GAAaV,MAAMrC,IAAI,SAACgD,GACpC,IAAIC,EAAYF,GAAaT,MAAMtC,IAAI,SAACkD,EAAEhD,GACxC,MAAO,CAACjG,MAAK,GAAAQ,OAAIyI,GAAJzI,OAAQuI,GAAIG,MAAMD,EAAElJ,SAAS,MAE7C,MAAO,CAACC,MAAM+I,EAAEG,MAAMH,EAAEhJ,SAASiJ,KAGjCpD,EAAKoC,QAAQ,SAACmB,EAAQlD,GACrB,IAAImD,EAAcC,KAAKC,MAAMD,KAAKE,UAAUV,IACvCW,EAAWL,EAAQf,MACnBqB,EAAUN,EAAQd,MAElBqB,EAAc,CAAE1J,MAAOmJ,EAAQzO,GAAKwO,MAAOC,EAAQ5B,KAAKa,MAAMoB,EAASnB,MAAMoB,EAAUE,WAAWR,EAAQQ,WAAYC,WAAWT,EAAQS,WAAW1D,MAAMiD,EAAQjD,OAElK2D,EAAYhB,EAAQiB,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAQwJ,IAC3CO,EAAYlB,EAAQgB,GAAY9J,SAAS+J,UAAU,SAAAzD,GAAC,OAAEA,EAAErG,QAAF,GAAAQ,OAAaiJ,GAAbjJ,OAAwBgJ,KAEjFJ,EAAYS,GAAY9J,SAASgK,GAAYhK,SAASuH,KAAKoC,GAC3Db,EAAQgB,GAAcT,EAAYS,GAE/BjB,EAAOtB,KAAKoC,KAIlBb,EAAQb,QAAQ,SAAC/B,EAAErH,GACjB,IAAIuH,EAAOF,EAAElG,SAASiK,OAAO,SAAAC,GAAC,OAAsB,IAApBA,EAAElK,SAASmK,SAC1CrB,EAAQjK,GAAOmB,SAAUoG,IAE3B0C,EAASA,EAAQmB,OAAO,SAAA3D,GAAC,OAAsB,IAApBA,EAAEtG,SAASmK,SAEvChO,EAAKiO,SAAS,CAACtB,QAAQA,EAAQD,OAAOA,KA1JtB1M,EA6JnB6S,QAAS,SAAC/O,GACRkO,MAAMlO,IA9JW9D,EAkKnBmO,gBAlKmBnK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAkKD,SAAAwK,IAAA,OAAAvT,EAAAC,EAAAC,KAAA,SAAAsT,GAAA,cAAAA,EAAApT,KAAAoT,EAAAnT,MAAA,cAAAmT,EAAAnT,KAAA,EACV4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,GAC9D1J,EAAKyM,iBAAiB/C,EAAKA,KAAKC,YAAYC,SAF9B,wBAAAmJ,EAAAnS,SAAAkS,MAlKC9S,EAwKnBgT,WAAW,SAACC,IACqC,IAAxCjT,EAAKmD,MAAM+P,aAAaC,SAASF,GAChCjT,EAAKiO,SAAS,CACViF,aAAY,GAAA5O,OAAAN,OAAAoP,GAAA,EAAApP,CAAMhE,EAAKmD,MAAM+P,cAAjB,CAA+BD,MAG/CjT,EAAKiO,SAAS,CAACiF,aAAclT,EAAKmD,MAAM+P,aAAapF,OAAO,SAASrD,GACjE,OAAOA,IAASwI,OA/KXjT,EAoLnBqT,YAAc,WAEZrT,EAAKmD,MAAMuJ,OAAO7C,IAAI,SAACoD,EAASlD,GAC5B,IAAqD,IAAlD/J,EAAKmD,MAAM6M,WAAWsD,QAAQrG,EAAQnJ,OA+BnC,OAAO,EA7BP,IAAIyP,EAAUvT,EAAKmD,MAAMyP,QAE3B5S,EAAKmD,MAAMqQ,OAAO3J,IAAlB,eAAA4J,EAAAzP,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAsB,SAAAoL,EAAMC,EAAG5J,GAAT,IAAAE,EAAA2J,EAAAC,EAAAzJ,EAAA,OAAA7K,EAAAC,EAAAC,KAAA,SAAAqU,GAAA,cAAAA,EAAAnU,KAAAmU,EAAAlU,MAAA,UAGdqK,EAAuB,OAAhBgD,EAAQjD,MAAaiD,EAAQjD,MAAM4D,UAAU,SAAAzD,GAAC,OAAIA,EAAE6C,QAAU2G,KAAK,EAC1EC,EAAQ5T,EAAKmD,MAAMyP,QAAQhF,UAAU,SAAAzD,GAAC,OAAIA,EAAEkB,OAASsI,KAEhD,IAAR1J,IAAmB,IAARA,EANM,CAAA6J,EAAAlU,KAAA,eAOdkJ,uBAAoBiL,QAAQ,gBAA5B,GAAAzP,OAAgD2I,EAAQD,MAAxD,wBAAA1I,OAAqEqP,EAArE,uDAAqF,KAPvEG,EAAAE,OAAA,SAQP,IARO,WAUD,IAAXJ,EAVY,CAAAE,EAAAlU,KAAA,gBAYhB2T,EAAQK,GAAOK,OAASjU,EAAKmD,MAAM8Q,OACnCV,EAAQK,GAAOM,IAAf,GAAA5P,OAAwBtE,EAAKmD,MAAMgR,cAAcC,MAAMC,OAAO,cAA9D,KAAA/P,OAA+EtE,EAAKmD,MAAMgR,cAAcG,IAAID,OAAO,eAC7GR,GAAc,IAAR5J,EAAU,CAACsJ,EAAQK,IAAQ3G,EAAQjD,MAAM1F,OAAOiP,EAAQK,IAE9DxJ,EAAY,CAChB5L,GAAIyO,EAAQnJ,MACZkG,MAAO6J,GAlBOC,EAAAlU,KAAA,GAqBZ4I,IAAIC,QAAQC,YAAiBD,EAAoB,CAACE,MAAOyB,KAAexB,KAAK,SAAAc,GAC9EZ,uBAAoBC,QAAQ,iBAA5B,GAAAzE,OAAiD2I,EAAQD,MAAzD,iBAAA1I,OAAoEqP,EAApE,6DAAqF,OAtBxE,QAAAG,EAAAlU,KAAA,wBAAAkU,EAAAE,OAAA,SAwBL,GAxBK,yBAAAF,EAAAlT,SAAA8S,MAAtB,gBAAA9I,EAAAC,GAAA,OAAA4I,EAAAtK,MAAA3H,KAAA4H,YAAA,OA3LSpJ,EA0NnBuU,iBAAmB,SAACJ,EAAeK,GACjCxU,EAAKiO,SAAS,CAAEkG,gBAAeK,YA3NdxU,EAgOnByU,qBAAuB,WACrB,OACE5T,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACuC,QAAQ,KACnBzC,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,WAAWuC,MAAO,CAAC8K,QAAQ,SACjChL,EAAArB,EAAAsB,cAAA,+BACAD,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAAC2T,SAAS,UAAW1U,EAAKmD,MAAMgR,cAAcC,MAAMC,OAAO,gBAEvExT,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,SACnBhL,EAAArB,EAAAsB,cAAA,6BACAD,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAAC2T,SAAS,UAAW1U,EAAKmD,MAAMgR,cAAcG,IAAID,OAAO,kBAzOxDrU,EAiPnBoO,kBAjPmBpK,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAiPC,SAAAqM,IAAA,OAAApV,EAAAC,EAAAC,KAAA,SAAAmV,GAAA,cAAAA,EAAAjV,KAAAiV,EAAAhV,MAAA,cAAAgV,EAAAhV,KAAA,EACZiV,QAAQC,IAAI,CAAC9U,EAAKmO,kBAAmBnO,EAAKwS,iBAAiB5J,KAAK,SAACkB,GACrE9J,EAAKiO,SAAS,CAACC,SAAQ,MAFP,wBAAA0G,EAAAhU,SAAA+T,MAjPD3U,EAyPnB+U,qBAAuB,SAAAzV,GAErBU,EAAKiO,SAAS,CAACuF,OAAOlU,EAAMmR,OAAO3M,SA3PlB9D,EA8PnBgV,mBAAqB,SAAA1V,GACnBU,EAAKiO,SAAS,CAACgG,OAAO3U,EAAMmR,OAAO3M,SA7PnC,IAAMmR,EAAQnG,KAFG,OAGjB9O,EAAKmD,MAAQ,CACXW,MAAM,EACNoR,WAAY,KACZ1F,SAAU,GAEVQ,WAAY,GACZC,YAAa,GAEbC,cAAc,GACdC,eAAe,GAEf8D,OAAO,IACP/F,SAAQ,EACRxB,OAAO,KACPC,QAAQ,KACRiG,QAAQ,GACRM,aAAa,GACbiC,aAAY,EACZ3B,OAAO,GACPW,cAAerF,GAAOsG,MAAMH,EAAMI,QAAQC,SAAS,EAAG,QAASL,EAAMI,UAEtErV,EAAK6S,QAAU7S,EAAK6S,QAAQ9P,KAAbiB,OAAAuR,GAAA,EAAAvR,CAAAhE,IAxBCA,wEAkQV,IAAAuO,EAAA/M,KAEP,OACEX,EAAArB,EAAAsB,cAAA,WAEIU,KAAK2B,MAAM+K,QACXrN,EAAArB,EAAAsB,cAAA,oBAEFD,EAAArB,EAAAsB,cAAC0U,EAAA,SAAD,KACU3U,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,MACpBT,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACVjK,EAAArB,EAAAsB,cAAA,WAASC,MAAO,CAAC/B,gBAAgB,QAASkC,UAAU,WAGpDL,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAAA,WAIFD,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOC,UAAW,EAAGtE,SAAS,UAC5BH,EAAArB,EAAAsB,cAAC0E,EAAA,EAAD,CAAMI,eAAe,UAAUC,UAAU,UAAU/B,MAAOtC,KAAK2B,MAAMW,MAAO4B,SAAUlE,KAAKuO,aAAc3O,aAAW,uBAClHP,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK6I,MAAM,mCAAaxL,KAAKkD,UAAU,KACvC7D,EAAArB,EAAAsB,cAACgF,EAAA,EAAD9B,OAAAG,OAAA,CAAK6I,MAAM,mCAAaxL,KAAKkD,UAAU,OAG3C7D,EAAArB,EAAAsB,cAACuxB,GAAD,CAAUvuB,MAAOtC,KAAK2B,MAAMW,MAAOpB,MAAO,GACxC7B,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAACgG,GAAD,CAAe/F,MAAO,CAACE,MAAM,OAAOK,OAAO,IAAK4F,UAAW,CAAClG,SAAS,WAAW0U,MAAM,KAAMhO,QAAS,MACrG7G,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAAC8K,QAAQ,SAE3ChL,EAAArB,EAAAsB,cAAC2V,GAAD,CAAoBC,cAAelV,KAAKqR,UACpChS,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QAGnBJ,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4U,aAAa,GAAG9J,QAAQ,SACrChL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC6U,UAAU,KACrB/U,EAAArB,EAAAsB,cAAA,SAAOtC,GAAG,wBAAwBuC,MAAO,CAAC8K,QAAQ,QAASuF,KAAK,OAAQ/F,KAAK,OAAO3F,SAAU,SAAAzH,GAAC,OAAIsQ,EAAK6B,UAAUnS,IAAI4X,OAAO,SAC7HhV,EAAArB,EAAAsB,cAAA,SAAOgV,QAAQ,yBACbjV,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ+C,QAAQ,YAAYpD,MAAM,UAAUuF,UAAU,QAAtD,OAMJvD,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,WAAWuC,MAAO,CAACE,MAAM,MAAMiB,WAAW,KAClDrB,EAAArB,EAAAsB,cAACiV,GAAA,EAAD,CAAahV,MAAO,CAACE,MAAM,SAC7BJ,EAAArB,EAAAsB,cAACkV,GAAA,EAAD,CAAYxX,GAAG,2BAAf,UACAqC,EAAArB,EAAAsB,cAACmV,GAAA,EAAD,CACEC,QAAQ,0BACR1X,GAAG,oBACH2X,UAAQ,EACRrS,MAAOtC,KAAK2B,MAAMqQ,OAClB9N,SAAU,SAAApG,GAAK,OAAGiP,EAAKwG,qBAAqBzV,IAC5CqJ,MAAO9H,EAAArB,EAAAsB,cAACsV,GAAA,EAAD,CAAO5X,GAAG,yBACjB6X,YAAa,SAAAC,GAAQ,OACnBzV,EAAArB,EAAAsB,cAAA,WAEEwV,EAASzM,IAAI,SAACoJ,EAAElJ,GAAH,OACVlJ,EAAArB,EAAAsB,cAACyV,GAAA,EAAD,CACAjE,IAAKvI,EACLiD,MAAOiG,EAAE9B,QAAQ,QAAQ,UAMhClC,UAAWA,IACXzN,KAAK2B,MAAMyP,QAAQ/I,IAAI,SAAAoJ,GAAC,OACxBpS,EAAArB,EAAAsB,cAAC0V,GAAA,EAAD,CAAUlE,IAAKW,EAAEzU,GAAIsF,MAAOmP,EAAE5H,MAC3B4H,EAAE5H,KAAK8F,QAAQ,QAAQ,WAQ1BtQ,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,oBAoBdL,EAAArB,EAAAsB,cAACwxB,GAAA,EAAD,CACCC,oBAAqB1xB,EAAArB,EAAAsB,cAAC0gB,GAAAhiB,EAAD,MACrBgzB,kBAAmB3xB,EAAArB,EAAAsB,cAAC2xB,GAAAjzB,EAAD,MACnB8O,SAAU9M,KAAK2B,MAAM8M,YACrBqG,SAAU9U,KAAK2B,MAAM6M,WACrB0iB,aAAc,SAACpzB,EAAOqzB,GAAapkB,EAAKN,SAAS,CAAEgC,YAAY0iB,KAC/DC,aAAc,SAACtzB,EAAOqzB,GAAapkB,EAAKN,SAAS,CAAE+B,WAAW2iB,KAC9DE,aAAW,GAEXhyB,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,gBACzBnM,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,aAC3BnM,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,WAC3BnM,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,cAE7BnM,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,aACzBnM,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,eACzBnM,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,OACzBnM,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,aAC3BnM,EAAArB,EAAAsB,cAACgyB,GAAA,EAAD,CAAUC,OAAO,IAAI/lB,MAAM,uBAQnCnM,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAACE,MAAM,OAAO4K,QAAQ,SACtDhL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4V,YAAY,MAEvB9V,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,0BACAD,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAAEO,OAAQ,IAAIL,MAAO,IAAI4K,QAAQ,OAAO7M,gBAAgB,UAAU6X,aAAa,KAE1FrV,KAAK2B,MAAMqQ,OAAO3J,IAAI,SAACY,EAAKV,GAC1B,OACElJ,EAAArB,EAAAsB,cAACyV,GAAA,EAAD,CACExV,MAAO,CAAC+V,OAAO,EAAE9X,gBAAgB,UAAUH,MAAM,QACjDyT,IAAK7H,EACLuC,MAAOvC,EAAK0G,QAAQ,QAAQ,UAS5CtQ,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,0BACAD,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAAEO,OAAQ,IAAIL,MAAO,IAAI4K,QAAQ,OAAO7M,gBAAgB,UAAU6X,aAAa,KAE9FrV,KAAK2B,MAAMuJ,OAAO7C,IAAI,SAACoD,EAASlD,GAC5B,OAAqD,IAAlDwE,EAAKpL,MAAM6M,WAAWsD,QAAQrG,EAAQnJ,OAEnCjD,EAAArB,EAAAsB,cAACyV,GAAA,EAAD,CACExV,MAAO,CAAC+V,OAAO,EAAE9X,gBAAgB,UAAUH,MAAM,QACjDyT,IAAKrF,EAAQD,MACbA,MAAOC,EAAQD,QAIhB,OAOjBnM,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAEO,OAAQ,GAAGL,MAAO,MAC9BJ,EAAArB,EAAAsB,cAAA,yBACAD,EAAArB,EAAAsB,cAAA,WACID,EAAArB,EAAAsB,cAACiW,GAAA,EAAD,CACEjT,MAAOtC,KAAK2B,MAAM8Q,OAClBvO,SAAUlE,KAAKwT,mBACfxW,GAAG,kBACH4S,KAAK,SACL4F,gBAAiB,CACfC,QAAQ,GAEVhV,QAAQ,gBAMhBpB,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,WAAMU,KAAKiT,wBACX5T,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAACoW,GAAA1X,EAAD,CACEsE,MAAOtC,KAAK2B,MAAMgR,cAClBgD,SAAU3V,KAAK+S,iBACf6C,iBAAiB,KAIvBvW,EAAArB,EAAAsB,cAAA,WACQD,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ6B,MAAO,CAAC/B,gBAAgB,UAAUgD,YAAY,EAAED,YAAY,OAAOlD,MAAM,OAAOoC,MAAM,KAAMmB,QAAS,WAAKmM,EAAK8E,gBAAvH,cAUlBxS,EAAArB,EAAAsB,cAACuxB,GAAD,CAAUvuB,MAAOtC,KAAK2B,MAAMW,MAAOpB,MAAO,GAC1C7B,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAACgG,GAAD,CAAe/F,MAAO,CAACE,MAAM,OAAOK,OAAO,IAAK4F,UAAW,CAAClG,SAAS,WAAW0U,MAAM,KAAMhO,QAAS,MACnG7G,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAAC8K,QAAQ,OAAO+J,UAAU,KAExD/U,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QAEnBJ,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,sBAuBfL,EAAArB,EAAAsB,cAAA,OAAKtC,GAAG,mBAAmBuC,MAAO,CAACE,MAAM,MAAM4V,aAAa,GAAGQ,WAAW,WACtExW,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAO,OAAO4K,QAAQ,QAASrN,GAAG,yBAC3CqC,EAAArB,EAAAsB,cAACkyB,GAAD,CAAiBpgB,QAASpR,KAAK2B,MAAMyP,QAAS2E,OAAQ/V,KAAK2B,MAAMuJ,OAAQwD,cAAe1O,KAAK2B,MAAM+M,iCA9e9E7N,aAqgBzC,SAASiV,GAAgBrX,GACrB,IAAI+K,EAAc,GACdwM,EAAgB,GA6BpB,OA3BAvX,EAAMsX,OAAO1N,IAAI,SAACoD,EAASlD,IAC4B,IAAhD9J,EAAMiQ,cAAcoD,QAAQrG,EAAQnJ,QACd,OAAlBmJ,EAAQjD,OACXiD,EAAQjD,MAAMH,IAAI,SAAC4N,EAAQ1N,IAC2B,IAAjD9J,EAAM2S,QAAQhF,UAAU,SAAAzD,GAAC,OAAEA,EAAE3L,KAAKiZ,EAAQjZ,OACxCwM,EAAYgD,OAAQ,EACnBhD,EAAYnB,IAAI,SAACkD,EAAEhD,GAEVgD,EAAEvO,KAAOiZ,EAAQjZ,GAClBwM,EAAYjB,GAAGmB,OAAOE,KAAK,CAACC,KAAK4B,EAAQD,MAAOxO,GAAGyO,EAAQnJ,SAEb,IAAtC0T,EAAerE,SAASsE,EAAQjZ,MACpCwM,EAAYI,KAAK,CAAC5M,GAAGiZ,EAAQjZ,GAAG6M,KAAKoM,EAAQpM,KAAKH,OAAO,CAAC,CAACG,KAAK4B,EAAQD,MAAOxO,GAAGyO,EAAQnJ,UAC1F0T,EAAepM,KAAKqM,EAAQjZ,OAIZ,IAAvBwM,EAAYgD,SACjBhD,EAAYI,KAAK,CAAC5M,GAAGiZ,EAAQjZ,GAAG6M,KAAKoM,EAAQpM,KAAKH,OAAO,CAAC,CAACG,KAAK4B,EAAQD,MAAOxO,GAAGyO,EAAQnJ,UAC1F0T,EAAepM,KAAKqM,EAAQjZ,UAS1CqC,EAAArB,EAAAsB,cAAC8V,GAAA,WAAD,CAAY7V,MAAO,CAACO,OAAO,MACvBT,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QAAQJ,EAAArB,EAAAsB,cAACoH,GAAD,CAAgBsP,eAAgBA,EAAgBxM,YAAaA,MAOlG,SAASpH,GAAS3D,GAAO,IACb4D,EAAqC5D,EAArC4D,SAAUC,EAA2B7D,EAA3B6D,MAAOpB,EAAoBzC,EAApByC,MAAUqB,EADdC,OAAAC,EAAA,EAAAD,CACwB/D,EADxB,8BAGrB,OACEY,EAAArB,EAAAsB,cAACoD,EAAA,EAADF,OAAAG,OAAA,CACEC,UAAU,MACVjD,KAAK,WACLkD,OAAQP,IAAUpB,EAClBlE,GAAE,mBAAA8F,OAAqB5B,GACvB6B,kBAAA,cAAAD,OAA+B5B,IAC3BqB,GAEHD,IAAUpB,GAAS7B,EAAArB,EAAAsB,cAAC0D,EAAA,EAAD,CAAKC,EAAG,GAAIZ,QClmBnBovB,8MACnB9vB,MAAQ,CACNrB,SAAU,GACVoxB,QAAS,GACT5gB,IAAI,GACJid,OAAQ,CACNpB,QAAS,KACTH,YAAY,MAMhBmF,eAAiB,SAAC1K,EAAK2K,GAErB,OADalhB,KAAKmhB,MAAMnhB,KAAKC,UAAUihB,EAAI3K,EAAI,IAAMA,KAIvDpX,gBAAiB,SAACpT,GAQZ,IANJ,IAAImM,EAAa,GACb8J,EAAG,GAAA5P,OAAMwK,OAASuF,OAAO,cAAtB,KAAA/P,OAAuCwK,OAAS+f,IAAI,EAAG,OAAOxa,OAAO,eAEpE0I,EAAS,GACTuW,EAAW1W,OAAO9N,OAASuF,OAAO,OAClCkf,EAAS3W,OAAO9N,OAASuF,OAAO,OAC5BtK,EAAE,EAAEA,EAAE,GAAGA,IAAI,CACjB,IAAMD,EAAI8S,OAAO9N,OAASwG,SAASvL,EAAG,OAAOsK,OAAO,OACjDvK,EAAEypB,IACDD,GAAqB,GAGvBvW,EAAO3R,KAAK,CACV5M,GAAG0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACxCmhB,OAAO,uCACPpW,MAAMkW,EACNrV,IAAKnU,EACLE,MAAM,8DACNsQ,IAAIta,EAAKmzB,eAAe,EAAG,KAC3B,CACA30B,GAAG0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACxCmhB,OAAO,uCACPpW,MAAMkW,EACNrV,IAAKnU,EACLE,MAAM,+DACNsQ,IAAIta,EAAKmzB,eAAe,EAAG,MAG7BI,EAASzpB,EAGfM,EAAYgB,KAAK,CACb5M,GAAI0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzCjB,KAAM,SACN/F,KAAMrL,EAAKmD,MAAMrB,SACjBmK,QAAQjM,EAAKmD,MAAM+vB,QACnBlpB,MAAM,CAAC,CACLxL,GAAG,uCACH6M,KAAK,iBACLkH,KAAK,8DACL0B,OAAO,IACPC,IAAKA,GACP,CACA1V,GAAG,uCACH6M,KAAK,kBACLkH,KAAK,+DACL0B,OAAO,IACPC,IAAKA,IAEN6I,OAAOA,IAGR3S,EAAY0B,QAAZ,eAAA5I,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAoB,SAAAjJ,EAAMkJ,EAAMwB,GAAZ,OAAAxK,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZ4I,IAAIC,QAAQC,YAAiBD,EAAwB,CAACE,MAAOJ,KAASK,KAAK,SAAA0H,GAC/E,IAAIrG,EAAMqG,EAAO5G,KAAK+pB,aAAaj1B,GACnCwB,EAAKiO,SAAS,CAACqE,IAAIrI,EAAK6G,MAAM,KAAK,OAHnB,wBAAApR,EAAAkB,SAAAvB,MAApB,gBAAA6J,EAAAmB,GAAA,OAAAnH,EAAAiG,MAAA3H,KAAA4H,YAAA,OASRomB,gBAAkB,WAChBxvB,EAAKiO,SAAS,CACZshB,OAAQ,CACNpB,QAAS,KACTH,YAAY,QAKlByB,mDAAe,SAAAlmB,EAAMjK,GAAN,IAAAkB,EAAAqB,EAAAkQ,EAAA,OAAAxS,EAAAC,EAAAC,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,cACbN,EAAMO,iBAGNG,EAAKwvB,mBACChvB,EAAQkvB,GAASpwB,EAAOU,EAAKmD,SAEjCnD,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GAAMhE,EAAKmD,MAAMosB,OAAW/uB,KAR1BgJ,EAAA7J,KAAA,EAAA6J,EAAA5J,KAAA,EAcQE,IAAK8vB,OAAO5vB,EAAKmD,MAAMrB,SAAU9B,EAAKmD,MAAM+rB,UAdpD,OAcLrtB,EAdK2H,EAAAqG,KAeXpP,QAAQC,IAAImB,GACZ7B,EAAKC,MAAMC,KAAKC,eAAc,GAC9BH,EAAKC,MAAMC,KAAKE,QAAQyB,GACxB7B,EAAKC,MAAM4vB,QAAQzkB,KAAK,KAlBb5B,EAAA5J,KAAA,iBAAA4J,EAAA7J,KAAA,GAAA6J,EAAAsG,GAAAtG,EAAA,SAoBPuI,EAAM,KACoCA,EAA7CvI,EAAAsG,GAAMnP,QAA0C6I,EAAAsG,GAA1B,CAAEnP,QAAA6I,EAAAsG,IACzB9P,EAAKiO,SAAS,CACZshB,OAAOvrB,OAAA2rB,GAAA,EAAA3rB,CAAA,GACFhE,EAAKmD,MAAMosB,OADV,CAEJpB,QAASpc,MAzBF,yBAAAvI,EAAA5I,SAAA2I,EAAA,0EA+BfumB,cAAgB,SAAAxwB,GACdU,EAAKiO,SAALjK,OAAA4iB,GAAA,EAAA5iB,CAAA,GACG1E,EAAMmR,OAAOjS,GAAKc,EAAMmR,OAAO3M,iFAI3B,IAAAyK,EAAA/M,KACP,OACEX,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC/B,gBAAgB,SACzB6B,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACJjK,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,OACpBT,EAAArB,EAAAsB,cAAA,WAASI,UAAU,gBACjBL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,QAAU3K,UAAU,aACvCL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QACjBJ,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,aAAaJ,MAAM,MAAMK,OAAO,MAAMC,IAAI,YAIrDV,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,CAAOC,UAAW,EAAGvE,MAAO,CAACuC,QAAQ,GAAGrC,MAAM,QAC5CJ,EAAArB,EAAAsB,cAAA,yBACAD,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QACfJ,EAAArB,EAAAsB,cAACiW,GAAA,EAAD,CACAsB,WAAS,EACTtX,MAAO,CAAE+V,OAAQ,GACjBtY,GAAG,UACHwO,MAAM,eACNoE,KAAK,OACLtN,MAAOtC,KAAK2B,MAAM+rB,SAClBxpB,SAAUlE,KAAKsuB,cACf9Y,gBAAiB,CACbC,QAAQ,MAGhBpW,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QACfJ,EAAArB,EAAAsB,cAACiW,GAAA,EAAD,CACAsB,WAAS,EACTtX,MAAO,CAAE+V,OAAQ,GACjBtY,GAAG,WACHwO,MAAM,YACNoE,KAAK,OACLtN,MAAOtC,KAAK2B,MAAMrB,SAClB4D,SAAUlE,KAAKsuB,cACf9Y,gBAAiB,CACbC,QAAQ,KAIZpW,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQkD,QAAS,WAAQmM,EAAK8C,mBAAsBtQ,MAAO,CAAC/B,gBAAgB,UAAUgD,YAAY,EAAED,YAAY,OAAOlD,MAAM,OAAOoC,MAAM,KAAMC,UAAU,qBAA1J,WAGAL,EAAArB,EAAAsB,cAAA,WACID,EAAArB,EAAAsB,cAAA,iBAAAwD,OAAY9C,KAAK2B,MAAMmP,WAMrCzR,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,eAlLUe,sDCLtB,IADAwM,EAAQ,MACR,CAAU,CACtB6kB,OAAQ,WACRC,UAAW,qBAOE,SAASC,KAElB,IAAMT,EAAiB,SAAC1K,EAAK2K,GAE3B,OADalhB,KAAKmhB,MAAMnhB,KAAKC,UAAUihB,EAAI3K,EAAI,IAAMA,GAiCjDpX,EAAiB,SAACpT,GAElB,IAAIsR,EAAMpC,KAAKC,MAAMnP,GACjBmM,EAAa,GACjBmF,EAAIzD,QAAQ,SAACpB,EAAIX,GAKb,IAHA,IAAIgT,EAAS,GACTuW,EAAW1W,OAAO9N,OAASuF,OAAO,OAClCkf,EAAS3W,OAAO9N,OAASuF,OAAO,OAC5BtK,EAAE,EAAEA,EAAE,GAAGA,IAAI,CACjB,IAAMD,EAAI8S,OAAO9N,OAASwG,SAASvL,EAAG,OAAOsK,OAAO,OACjDvK,EAAEypB,IACDD,GAAqB,GAEtBvpB,EAAE,GACHgT,EAAO3R,KAAK,CACV5M,GAAG0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACxCmhB,OAAO,uCACPpW,MAAMkW,EACNrV,IAAKnU,EACLE,MAAM,+DACNsQ,IAAI6Y,EAAe,EAAG,MAIxBpW,EAAO3R,KAAK,CACV5M,GAAG0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACxCmhB,OAAO,uCACPpW,MAAMkW,EACNrV,IAAKnU,EACLE,MAAM,8DACNsQ,IAAI6Y,EAAe,EAAG,MAIxBI,EAASzpB,EAGfM,EAAYgB,KAAK,CACb5M,GAAI0T,KAAKC,SAASC,SAAS,IAAIC,UAAU,GACzCjB,KAAM,UACN/F,KAAMX,EAAIW,KACVa,MAAMxB,EAAIwB,MACVC,MAAMzB,EAAIyB,MACVnC,MAAM,CAAC,CACLxL,GAAG,uCACH6M,KAAK,kBACLkH,KAAK,+DACL0B,OAAO,IACPC,IAAK,yBACP,CACA1V,GAAG,uCACH6M,KAAK,iBACLkH,KAAK,8DACL0B,OAAO,IACPC,IAAK,0BAEN6I,OAAOA,MAMhB3S,EAAY0B,QAAZ,eAAA5I,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAAoB,SAAAjJ,EAAMkJ,EAAMwB,GAAZ,OAAAxK,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZ4I,IAAIC,QAAQC,YAAiBD,EAAuB,CAACE,MAAOJ,KAASK,KAAK,SAAA0H,GAC3ElG,EAAY4D,OAAO,IAAIjE,GACxBjB,uBAAoBC,QAAQ,iBAA5B,GAAAzE,OAAiD8F,EAAY,GAAGiB,KAAhE,kBAAA/G,OAA2E8F,EAAY4D,OAAvF,6DAA4G,OAH9F,wBAAAtO,EAAAkB,SAAAvB,MAApB,gBAAA6J,EAAAmB,GAAA,OAAAnH,EAAAiG,MAAA3H,KAAA4H,YAAA,IAOA/I,OAAOC,SAAS2I,UAGtB,OACIpI,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAACgK,GAAA,sBAAD,MACEjK,EAAArB,EAAAsB,cAAA,SAAOtC,GAAG,wBAAwBuC,MAAO,CAAC8K,QAAQ,QAASuF,KAAK,OAAO1L,SAzG3D,SAAC2K,GAEjB,IAAIC,EAAS,GACTC,EAAS,IAAIC,WACjBD,EAAOI,WAAWN,EAAOI,OAAOC,MAAM,GAAG,UACzCH,EAAOK,OAAS,SAACP,GAEb,IACQQ,EADGR,EAAOI,OAAOH,OACJQ,MAAM,WACnB,GAAe,qBAAZD,EAAM,GAAyB,CAE9B,IADA,IAAIE,EAAQF,EAAM,GAAGC,MAAM,KACnB/G,EAAE,EAAEA,EAAE8G,EAAM7C,OAAOjE,IAAI,CAG3B,IAFA,IAAIiH,EAAM,GACNC,EAAYJ,EAAM9G,GAAG+G,MAAM,KACvB/C,EAAE,EAAEA,EAAEgD,EAAQ/C,OAAOD,IACzBiD,EAAID,EAAQhD,IAAMkD,EAAYlD,GAElCuC,EAAOlF,KAAK4F,GAEhBV,EAAOiT,MACPlS,EAAgBlE,KAAKE,UAAUiD,SAE/BxH,uBAAoBtI,MAAM,iBAA1B,mBAA+D,OAmFkB6K,KAAK,OAAOwK,OAAO,SAC1GhV,EAAArB,EAAAsB,cAAA,SAAOgV,QAAQ,yBACbjV,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ+C,QAAQ,YAAYpD,MAAM,UAAUuF,UAAU,QAAtD,cChIL,SAASyvB,KACtB,OACEhzB,EAAArB,EAAAsB,cAAA,UAAQtC,GAAG,SAAS2N,MAAM,YAC1BtL,EAAArB,EAAAsB,cAAA,OAAKqL,MAAM,uCACXtL,EAAArB,EAAAsB,cAAA,OAAKqL,MAAM,aACXtL,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,SAEnBhL,EAAArB,EAAAsB,cAAA,OAAKuC,MAAM,SAAStC,MAAO,CAACE,MAAM,QAChCJ,EAAArB,EAAAsB,cAAA,OAAMO,IAAI,eAAeJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,UAGtDV,EAAArB,EAAAsB,cAAA,OAAKuC,MAAM,SAAStC,MAAO,CAACE,MAAM,QAChCJ,EAAArB,EAAAsB,cAAA,OAAKqL,MAAM,iBACXtL,EAAArB,EAAAsB,cAAA,+IACAD,EAAArB,EAAAsB,cAAA,MAAIqL,MAAM,oBACVtL,EAAArB,EAAAsB,cAAA,UACAD,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,yOACAD,EAAArB,EAAAsB,cAAA,4HAGFD,EAAArB,EAAAsB,cAAA,UACAD,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAAA,wHAGFD,EAAArB,EAAAsB,cAAA,UACAD,EAAArB,EAAAsB,cAAA,WAAKD,EAAArB,EAAAsB,cAAA,sCAQPD,EAAArB,EAAAsB,cAAA,OAAKuC,MAAM,SAAStC,MAAO,CAACE,MAAM,QAElCJ,EAAArB,EAAAsB,cAAA,OAAKqL,MAAM,iBACXtL,EAAArB,EAAAsB,cAAA,MAAIqL,MAAM,gBAAV,aAAmCtL,EAAArB,EAAAsB,cAAA,cAEnCD,EAAArB,EAAAsB,cAAA,SAAGD,EAAArB,EAAAsB,cAAA,KAAGP,KAAK,yBAAyByH,MAAM,eAAvC,oBACHnH,EAAArB,EAAAsB,cAAA,MAAIqL,MAAM,kBACVtL,EAAArB,EAAAsB,cAAA,MAAIqL,MAAM,IAAGtL,EAAArB,EAAAsB,cAAA,KAAGkH,MAAM,UAAUyI,OAAO,SAASlQ,KAAK,4BAAxC,IAAoEM,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,eAAeJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,kBCPxI,IAAMkgB,GAASqS,aAAa,CAC1BC,iBAAkB,CAAEl1B,MAAM,OAC1Bm1B,UAAW,CAAEn1B,MAAM,WAGfo1B,GAAev1B,YAAW,CAC9Bw1B,WAAY,CACVr1B,MAAO,OACPs1B,YAAa,CACXt1B,MAAO,QAETu1B,qBAAsB,CACpBp1B,gBAAiB,SAGrBqP,QAAS,GACTgmB,MAAO,IAXY31B,CAYlB41B,MAGCC,eAEF,SAAAA,EAAYt0B,GAAO,IAAAD,EAAA,OAAAgE,OAAAqI,EAAA,EAAArI,CAAAxC,KAAA+yB,IACfv0B,EAAAgE,OAAAsI,EAAA,EAAAtI,CAAAxC,KAAAwC,OAAAuI,EAAA,EAAAvI,CAAAuwB,GAAA/nB,KAAAhL,KAAMvB,KAmBRsc,eAAe,WAEbvc,EAAKiO,SAAS,CAAEuO,cAAa,KAtBdxc,EAwBjByc,oBAAoB,WAClBzc,EAAKiO,SAAS,CAAEuO,cAAa,KAzBdxc,EA2BjBuU,iBAAmB,SAACJ,EAAeK,GACjCxU,EAAKyc,sBACLzc,EAAKiO,SAAS,CAAEkG,kBAChBnU,EAAKyG,aA9BUzG,EAkCjBmG,cAlCiB,eAAAjD,EAAAc,OAAAqE,EAAA,EAAArE,CAAAzE,EAAAC,EAAA8I,KAkCD,SAAAjJ,EAAMm1B,EAAcpW,EAAYqW,EAAUC,GAA1C,OAAAn1B,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEZ4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,GAC5D,IAAIirB,EAAc,GACdC,EAAa,CAAC,CAACxX,MAAM,KAAKyX,SAAS,IAAI,CAACzX,MAAM,KAAKyX,SAAS,IAAI,CAACzX,MAAM,KAAKyX,SAAS,IAAI,CAACzX,MAAM,KAAKyX,SAAS,IAAI,CAACzX,MAAM,KAAKyX,SAAS,KACvIxW,EAAW,CACX,CAACJ,IAAI,KAAK4W,SAAS,IAAI,CAAC5W,IAAI,KAAK4W,SAAS,IAAI,CAAC5W,IAAI,KAAK4W,SAAS,IAAI,CAAC5W,IAAI,KAAK4W,SAAS,IAAI,CAAC5W,IAAI,KAAK4W,SAAS,IAC/G,CAAC5W,IAAI,KAAK4W,SAAS,IAAI,CAAC5W,IAAI,KAAK4W,SAAS,IAAI,CAAC5W,IAAI,KAAK4W,SAAS,IAAI,CAAC5W,IAAI,KAAK4W,SAAS,IAAI,CAAC5W,IAAI,KAAK4W,SAAS,KAE/GC,EAAK,EACLC,EAAK,EACL3R,EAAO1Z,EAAKA,KAAKC,YAAYC,MAEjC,GAAGwZ,EAAKpV,OAAO,EAAE,CACboV,EAAKvZ,IAAI,SAACC,EAAEC,GACR,IAAIiX,EAAgB,GAChBG,EAAc,GAElB,GAAGnhB,EAAKmD,MAAMkL,QAAQ8E,SAASrJ,EAAEoC,OAAO,CACrB,OAAZpC,EAAEiT,QAAkBjT,EAAEiT,OAAO/O,OAAO,IAEnCwmB,EAAc3qB,IAAI,SAACuT,EAAMrT,GACrB,IAAIE,EAAOH,EAAEiT,OAAOjP,OAAO,SAAA3D,GAAC,OAAEA,EAAEiT,QAAQR,OAAOQ,KAAQvT,IAAI,SAAAM,GAAC,OAAIA,EAAEmQ,MACxC,OAAvBsa,EAAW7qB,GAAGqT,QACbwX,EAAW7qB,GAAGqT,MAAQA,GAE1BwX,EAAW7qB,GAAG8qB,SAASD,EAAW7qB,GAAG8qB,SAASvwB,OAAO2F,KAIzDmU,EAAYvU,IAAI,SAACoU,EAAIlU,GACjB,IAAIE,EAAOH,EAAEiT,OAAOjP,OAAO,SAAA3D,GAAC,OAAEA,EAAEiT,QAAQR,OAAOqB,EAAIT,IAAMrT,EAAE8T,MAAMrB,OAAOqB,EAAInU,KAAID,IAAI,SAAAM,GAAC,OAAIA,EAAEmQ,MAErE,OAAnB+D,EAAStU,GAAGkU,MACXI,EAAStU,GAAGkU,IAAMA,EAAInU,GAE1BuU,EAAStU,GAAG8qB,SAASxW,EAAStU,GAAG8qB,SAASvwB,OAAO2F,KAIrDH,EAAEiT,OAAOlT,IAAI,SAACkT,EAAOhT,GACVgT,EAAOK,QAAUqX,GAAa1X,EAAOkB,MAAQyW,GAC5C1T,EAAc5V,KAAK2R,EAAOzC,KAE9B6G,EAAY/V,KAAK2R,EAAOzC,QAGpC,IAAM0a,OAAgCnb,IAA1BY,GAAQuG,GAA4B,EAAEvG,GAAQuG,GACpDiU,EAAMxa,GAAQ0G,GAEpBwT,EAAYvpB,KAAK,CAACC,KAAKvB,EAAEuB,KAAKa,MAAMpC,EAAEoC,MAAMgpB,GAAGlU,EAAcmU,GAAGhU,EAAY6T,IAAIA,EAAIC,IAAIA,OAIhGH,OAA2Cjb,IAArCY,GAAQka,EAAY9qB,IAAI,SAAAM,GAAC,OAAEA,EAAE6qB,OAAkB,EAAEva,GAAQka,EAAY9qB,IAAI,SAAAM,GAAC,OAAEA,EAAE6qB,OACpFD,EAAMta,GAAQka,EAAY9qB,IAAI,SAAAM,GAAC,OAAEA,EAAE8qB,OAEnCL,EAAW/qB,IAAI,SAAAC,GACXA,EAAE+qB,SAAWpa,GAAQ3Q,EAAE+qB,YAE3BxW,EAASxU,IAAI,SAAAC,GACTA,EAAE+qB,SAAWpa,GAAQ3Q,EAAE+qB,YAI3B,IAAIO,EAAST,EAAYrL,KAAK,SAAC9pB,EAAG6kB,GAAJ,OAAU7kB,EAAE01B,GAAK7Q,EAAE6Q,IAAM,EAAI11B,EAAE01B,GAAK7Q,EAAE6Q,GAAK,EAAI,IAE7El1B,EAAKiO,SAAS,CACViK,IAAIyc,EACJS,OAAOA,EACPlnB,SAAQ,EACRmnB,WAAWD,EAAOpnB,OAClBqQ,SAASA,EACTuW,WAAWA,EACXE,IAAIA,EACJC,IAAIA,SAGR/0B,EAAKiO,SAAS,CAACqnB,WAAU,EAAKpnB,SAAQ,MA9E5B,wBAAAxO,EAAAkB,SAAAvB,MAlCC,gBAAA6J,EAAAmB,EAAAO,EAAAC,GAAA,OAAA3H,EAAAiG,MAAA3H,KAAA4H,YAAA,GAAApJ,EAuHrBw0B,cAAc,SAACrZ,EAAEqC,EAAE1T,GAGjB,IAFA,IAAIyrB,EAAa,GACbhY,EAAK,CAACpC,EAAGqC,EAAG1T,GACRC,EAAE,EAAEA,GAAG,EAAEA,IAAI,CACjB,IAAMD,EAAIgF,KAAOyO,GAAIjI,SAASvL,EAAG,SAASsK,OAAO,MACjDkhB,EAAWnqB,KAAKtB,GAEpB,OAAOyrB,GA9HYv1B,EAkIrBke,YAAY,SAAC/C,EAAEqC,EAAE1T,GAGf,IAFA,IAAIqU,EAAU,GACVZ,EAAK,CAACpC,EAAGqC,EAAG1T,GACRC,EAAE,EAAEA,GAAG,EAAEA,IAAI,CACjB,IAAMyT,EAAI1O,KAAOyO,GAAIjI,SAASvL,EAAG,OAAOuL,SAAS,EAAG,SAASjB,OAAO,MAC9DvK,EAAIgF,KAAOyO,GAAIjI,SAASvL,EAAG,OAAOsK,OAAO,MAC3C4J,EAAKnP,KAAM,GAAAxK,OAAIwF,EAAJ,KAAAxF,OAASkZ,EAAT,SAAmB,eACP,IAAxB1O,KAAOmP,GAAKuX,WACXrX,EAAQ/S,KAAK,CAACoS,EAAE1O,KAAOmP,GAAK5J,OAAO,MAAMvK,EAAEgF,KAAOmP,GAAK5J,OAAO,QAGtE,OAAO8J,GA7IYne,EAgJrByG,UAAU,WACR,IAAM0U,EAAIyB,OAAO5c,EAAKmD,MAAMgR,cAAcE,OAAO,SAC3CmJ,EAAIZ,OAAO5c,EAAKmD,MAAMgR,cAAcE,OAAO,OAC3CvK,EAAI8S,OAAO5c,EAAKmD,MAAMgR,cAAcE,OAAO,OAE3CmgB,EAAgBx0B,EAAKw0B,cAAcrZ,EAAEqC,EAAE1T,GACvCsU,EAAcpe,EAAKke,YAAY/C,EAAEqC,EAAE1T,GACzC9J,EAAKmG,cAAcquB,EAAcpW,EAAYZ,EAAE1T,IAvJ5B9J,EA0JrBoO,kBAAmB,WACjBpO,EAAKyG,aA3JczG,EA+JnBy1B,aAAe,SAAA3xB,GAAK,OAAI,WACpB,IAAM4xB,EAAe11B,EAAKmD,MAAMkL,QAAQiF,QAAQxP,GAC1C6xB,EAAU3xB,OAAAoP,GAAA,EAAApP,CAAOhE,EAAKmD,MAAMkL,UAEZ,IAAlBqnB,EACFC,EAAWvqB,KAAKtH,GAEhB6xB,EAAWC,OAAOF,EAAc,GAElC11B,EAAKyG,YACLzG,EAAKiO,SAAS,CAACI,QAAQsnB,MAzKR31B,EA6KnB61B,iBAAmB,SAACv2B,EAAOqG,GACvB3F,EAAKiO,SAAS,CAAC6nB,UAAUnwB,KA9KV3F,EAiLnB+1B,kBAAoB,SAACz2B,EAAOqG,GACxB3F,EAAKiO,SAAS,CAAC+nB,WAAWrwB,KA/K1B3F,EAAKmD,MAAQ,CACXkL,QAAQ4nB,GAAiB/pB,MACzB4pB,UAAU,EACVE,WAAW,EACX9d,IAAI,GACJmd,WAAW,EACXnnB,SAAQ,EACR0mB,WAAW,GACXvW,SAAS,GACTiX,WAAU,EACVR,IAAI,EACJC,IAAI,EACJ5gB,cAAerF,OACf0N,cAAa,GAhBAxc,wEAqLZ,IAAAuO,EAAA/M,KACH00B,EAAO10B,KAAK2B,MAAMkyB,WAElBc,EAAM,CAACD,EAAK,EAAEA,EAAK,EAAEA,EAAK,GAE9B,OACIr1B,EAAArB,EAAAsB,cAAA,WACID,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACO,OAAO,MAEhBE,KAAK2B,MAAM+K,QACPrN,EAAArB,EAAAsB,cAAA,YACID,EAAArB,EAAAsB,cAAA,WAEQU,KAAK2B,MAAMmyB,UACXz0B,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,OAAOK,OAAO,IAAIuK,QAAS,OAAQsa,KAAM,EAAGiQ,eAAgB,SAAU/e,WAAY,SAASrY,gBAAgB,SAC1H6B,EAAArB,EAAAsB,cAAA,WACAD,EAAArB,EAAAsB,cAAA,OAAKO,IAAI,cAAcJ,MAAM,KAAKK,OAAO,KAAKC,IAAI,SAC9CV,EAAArB,EAAAsB,cAAC8yB,GAAD,QAGR/yB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,OAAO4K,QAAQ,OAAO7M,gBAAgB,YACzD6B,EAAArB,EAAAsB,cAAA,WACID,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC+V,OAAO,KACpBjW,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQ+C,QAAQ,WAAWpD,MAAM,UAAUuD,QAASZ,KAAK+a,gBACpD/a,KAAK2B,MAAMgR,cAAcE,OAAO,aAErCxT,EAAArB,EAAAsB,cAACuG,GAAA,EAAD,CACIN,KAAMvF,KAAK2B,MAAMqZ,aACjBlV,QAAS9F,KAAKib,oBACdlY,kBAAgB,qBAChBgD,mBAAiB,4BAGjB1G,EAAArB,EAAAsB,cAAC0G,GAAA,EAAD,KACI3G,EAAArB,EAAAsB,cAACoW,GAAA1X,EAAD,CACIyf,cAAc,SACdnb,MAAOtC,KAAK2B,MAAMgR,cAClBgD,SAAU3V,KAAK+S,iBACf6C,iBAAiB,KAGzBvW,EAAArB,EAAAsB,cAAC6G,GAAA,EAAD,KACA9G,EAAArB,EAAAsB,cAAC5B,EAAA,EAAD,CAAQkD,QAASZ,KAAKib,oBAAqB5d,MAAM,WAAjD,eAMJgC,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,IAAIjC,gBAAgB,UAAUsE,QAAQ,GAAG+yB,qBAAqB,GAAGC,wBAAwB,GAAG1gB,UAAU,KACzH/U,EAAArB,EAAAsB,cAACy1B,GAAA,EAAD,KACCN,GAAiB/pB,MAAMrC,IAAI,SAACC,EAAEC,GAC3B,OACIlJ,EAAArB,EAAAsB,cAAC+pB,GAAA,EAAD,CACIC,QACAjqB,EAAArB,EAAAsB,cAACmzB,GAAD,CACIvuB,SAAU6I,EAAKknB,aAAa3rB,GAC5BuE,SAA4C,IAAnCE,EAAKpL,MAAMkL,QAAQiF,QAAQxJ,GACpChG,MAAM,aAGVkJ,MAAOnM,EAAArB,EAAAsB,cAACoD,EAAA,EAAD,CAAYnD,MAAO0gB,GAAOsS,kBAAmBjqB,SAM/DjJ,EAAArB,EAAAsB,cAAA,aAMTo1B,EAAK,EAELr1B,EAAArB,EAAAsB,cAAA,uCACAD,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,OAAO5K,MAAM,OAAOqC,QAAQ,GAAGtE,gBAAgB,YACpE6B,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QAGXJ,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC8K,QAAQ,OAAO7M,gBAAgB,OAAO8X,OAAO,GAAGxT,QAAQ,GAAGuT,aAAa,KAE7EhW,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,MAAM6V,OAAO,KAC5BjW,EAAArB,EAAAsB,cAAC4gB,GAAA,EAAD,CACI5d,MAAOtC,KAAK2B,MAAM2xB,IAClBrT,OAAQG,aAAY,CAChB4U,WAAY,UACZ3U,UAAW,aAGfhhB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4gB,UAAU,WACvB9gB,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAAE2T,SAAU,GAAGiB,cAAc,KAAvC,SACA9U,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAE2T,SAAU,KAAMlT,KAAK2B,MAAM2xB,KAC5Cj0B,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAE2T,SAAU,KAA3B,QAIR7T,EAAArB,EAAAsB,cAACkhB,GAAA,EAAD,CAASwP,YAAY,aACrB3wB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,MAAM6V,OAAO,KAC5BjW,EAAArB,EAAAsB,cAAC4gB,GAAA,EAAD,CACI5d,MAAOtC,KAAK2B,MAAM4xB,IAClBtT,OAAQG,aAAY,CAChB4U,WAAY,UACZ3U,UAAW,aAGfhhB,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC4gB,UAAU,WACvB9gB,EAAArB,EAAAsB,cAAA,KAAGC,MAAO,CAAE2T,SAAU,GAAGiB,cAAc,KAAvC,SACA9U,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAE2T,SAAU,KAAMlT,KAAK2B,MAAM4xB,KAC5Cl0B,EAAArB,EAAAsB,cAAA,UAAQC,MAAO,CAAE2T,SAAU,KAA3B,SAMhB7T,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAAC+V,OAAO,GAAG9X,gBAAgB,SACvC6B,EAAArB,EAAAsB,cAAC0E,EAAA,EAAD,CACIvD,QAAQ,YACR6B,MAAOtC,KAAK2B,MAAM2yB,UAClBpwB,SAAUlE,KAAKq0B,iBACfjwB,eAAe,UACfC,UAAU,WAEVhF,EAAArB,EAAAsB,cAACgF,EAAA,EAAD,CAAKC,KAAMlF,EAAArB,EAAAsB,cAAA,OAAKG,MAAO,GAAIK,OAAQ,GAAID,IAAI,aAAaE,IAAI,aAC5DV,EAAArB,EAAAsB,cAACgF,EAAA,EAAD,CAAKC,KAAMlF,EAAArB,EAAAsB,cAAA,OAAKG,MAAO,GAAIK,OAAQ,GAAID,IAAI,YAAYE,IAAI,aAE/DV,EAAArB,EAAAsB,cAAC21B,GAAD,CAAU3yB,MAAOtC,KAAK2B,MAAM2yB,UAAWpzB,MAAO,GA3HpE,CAAC,EAAE,EAAE,GA6HuCmH,IAAI,SAACC,EAAEC,GACT,OACIlJ,EAAArB,EAAAsB,cAACiK,GAAA,EAAD,KACAlK,EAAArB,EAAAsB,cAACwK,GAAA,EAAD,KACIzK,EAAArB,EAAAsB,cAACyK,GAAA,EAAD,KACA1K,EAAArB,EAAAsB,cAAC0K,GAAA,EAAD,KACI3K,EAAArB,EAAAsB,cAAC41B,GAAAl3B,EAAD,QAGJqB,EAAArB,EAAAsB,cAAC4K,GAAA,EAAD,CACAC,QAAO,GAAArH,OAAKiK,EAAKpL,MAAMiyB,OAAOtrB,GAAGuB,KAA1B,KAAA/G,OAAkCiK,EAAKpL,MAAMiyB,OAAOtrB,GAAGoC,MAAvD,KACPjB,UAAS,WAAA3G,OAAaiK,EAAKpL,MAAMiyB,OAAOtrB,GAAGkrB,IAAlC,cAAA1wB,OAAkDiK,EAAKpL,MAAMiyB,OAAOtrB,GAAGmrB,YAO5Gp0B,EAAArB,EAAAsB,cAAC21B,GAAD,CAAU3yB,MAAOtC,KAAK2B,MAAM2yB,UAAWpzB,MAAO,GAE5ByzB,EAAItsB,IAAI,SAACC,EAAEC,GACT,OACIlJ,EAAArB,EAAAsB,cAACiK,GAAA,EAAD,KACAlK,EAAArB,EAAAsB,cAACwK,GAAA,EAAD,KACIzK,EAAArB,EAAAsB,cAACyK,GAAA,EAAD,KACA1K,EAAArB,EAAAsB,cAAC0K,GAAA,EAAD,KACI3K,EAAArB,EAAAsB,cAAC41B,GAAAl3B,EAAD,QAGJqB,EAAArB,EAAAsB,cAAC4K,GAAA,EAAD,CACAC,QAAO,GAAArH,OAAKiK,EAAKpL,MAAMiyB,OAAOtrB,GAAGuB,KAA1B,KAAA/G,OAAkCiK,EAAKpL,MAAMiyB,OAAOtrB,GAAGoC,MAAvD,KACPjB,UAAS,WAAA3G,OAAaiK,EAAKpL,MAAMiyB,OAAOtrB,GAAGkrB,IAAlC,cAAA1wB,OAAkDiK,EAAKpL,MAAMiyB,OAAOtrB,GAAGmrB,cAUhHp0B,EAAArB,EAAAsB,cAAA,OAAKC,MAAO,CAACE,MAAM,QACnBJ,EAAArB,EAAAsB,cAACuE,EAAA,EAAD,KACIxE,EAAArB,EAAAsB,cAAC0E,EAAA,EAAD,CACI1B,MAAOtC,KAAK2B,MAAM6yB,WAClBtwB,SAAUlE,KAAKu0B,kBACfnwB,eAAe,UACfC,UAAU,WAEVhF,EAAArB,EAAAsB,cAACgF,EAAA,EAAD,CAAKkH,MAAM,UACXnM,EAAArB,EAAAsB,cAACgF,EAAA,EAAD,CAAKkH,MAAM,aAEfnM,EAAArB,EAAAsB,cAAC21B,GAAD,CAAU3yB,MAAOtC,KAAK2B,MAAM6yB,WAAYtzB,MAAO,GAC3C7B,EAAArB,EAAAsB,cAACga,GAAA,EAAD,CAAOpR,KAAMlI,KAAK2B,MAAMkb,UACpBxd,EAAArB,EAAAsB,cAACga,GAAA,EAAD,MACAja,EAAArB,EAAAsB,cAACga,GAAA,EAAD,MACAja,EAAArB,EAAAsB,cAACga,GAAA,EAAD,CACI6b,SAAS,EACT93B,MAAM,UACNqgB,WAAW,WACXC,cAAc,QAElBte,EAAArB,EAAAsB,cAAC0e,GAAA,EAAD,QAGR3e,EAAArB,EAAAsB,cAAC21B,GAAD,CAAU3yB,MAAOtC,KAAK2B,MAAM6yB,WAAYtzB,MAAO,GAC3C7B,EAAArB,EAAAsB,cAACga,GAAA,EAAD,CAAOpR,KAAMlI,KAAK2B,MAAMyxB,YACpB/zB,EAAArB,EAAAsB,cAACga,GAAA,EAAD,MACAja,EAAArB,EAAAsB,cAACga,GAAA,EAAD,MACAja,EAAArB,EAAAsB,cAACga,GAAA,EAAD,CACI6b,SAAS,EACT93B,MAAM,UACNqgB,WAAW,WACXC,cAAc,UAElBte,EAAArB,EAAAsB,cAAC0e,GAAA,EAAD,aAchC3e,EAAArB,EAAAsB,cAAC+yB,GAAD,cA/YcxxB,aAqZpBoY,GAAU,SAAAC,GAEZ,OAAGA,EAAI1M,OAAO,EACHkE,KAAKyI,MAAMD,EAAIE,OAAQ,SAAEnW,EAAGsI,GAAL,OAAYtI,EAAIsI,GAAG,GAAM2N,EAAI1M,QACxC,IAAd0M,EAAI1M,OACF0M,EAAI,GAEJ,GAKf,SAAS9W,GAAS3D,GAAO,IACb4D,EAAqC5D,EAArC4D,SAAUC,EAA2B7D,EAA3B6D,MAAOpB,EAAoBzC,EAApByC,MAAUqB,EADdC,OAAAC,EAAA,EAAAD,CACwB/D,EADxB,8BAGrB,OACEY,EAAArB,EAAAsB,cAACoD,EAAA,EAADF,OAAAG,OAAA,CACEC,UAAU,MACVjD,KAAK,WACLkD,OAAQP,IAAUpB,EAClBlE,GAAE,4BAAA8F,OAA8B5B,GAChC6B,kBAAA,uBAAAD,OAAwC5B,IACpCqB,GAEHD,IAAUpB,GAAS7B,EAAArB,EAAAsB,cAAC0D,EAAA,EAAD,CAAKC,EAAG,GAAIZ,IAKzB0wB,8BCjdfqC,KAAQ/H,IAAIgI,UAqFGC,8MAjFb3zB,MAAQ,CACNvB,iBAAiB,EACjBm1B,kBAAkB,EAClBl1B,KAAM,KACNm1B,KAAK,MAGP72B,cAAgB,SAAA82B,GACdj3B,EAAKiO,SAAS,CAAErM,gBAAiBq1B,OAGnC72B,QAAU,SAAAyB,GACR7B,EAAKiO,SAAS,CAAEpM,KAAMA,OAwBxBsM,qCAAkB,SAAA9O,IAAA,OAAAE,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACV4I,IAAIC,QAAQC,YAAiBD,IAAwBG,KAAK,SAAAc,MADhD,wBAAAhK,EAAAkB,SAAAvB,uNAhBdmC,KAAK2M,2BACiBrO,IAAKo3B,sCAC3B11B,KAAKrB,eAAc,GACnBM,QAAQC,IAAI,kBACOZ,IAAKq3B,kCAAlBt1B,SAENL,KAAKpB,QAAQyB,qDAGC,oBAAV2H,EAAAsG,IACFkC,MAAKxI,EAAAsG,YAITtO,KAAKyM,SAAS,CAAE8oB,kBAAkB,iJAQ3B,IAAAxoB,EAAA/M,KAED41B,EAAY,CAChBx1B,gBAAiBJ,KAAK2B,MAAMvB,gBAC5BC,KAAML,KAAK2B,MAAMtB,KACjB1B,cAAeqB,KAAKrB,cACpBC,QAASoB,KAAKpB,SAEhB,OACGoB,KAAK2B,MAAM4zB,kBACZl2B,EAAArB,EAAAsB,cAAA,OAAKI,UAAU,OACbL,EAAArB,EAAAsB,cAACu2B,EAAA,EAAD,KACEx2B,EAAArB,EAAAsB,cAAA,WACED,EAAArB,EAAAsB,cAACw2B,EAAD,CAAQ71B,QAASD,KAAK2B,MAAMvB,gBAAiB1B,KAAMk3B,IACnDv2B,EAAArB,EAAAsB,cAACwzB,EAAA,EAAD,KACEzzB,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,IAAI/X,OAAQ,SAAChD,GAAD,OAAYsO,EAAKpL,MAAMvB,gBAAiBf,EAAArB,EAAAsB,cAAC22B,EAAA,EAAD,CAAU91B,GAAG,iBAAoBd,EAAArB,EAAAsB,cAAC42B,EAAD1zB,OAAAG,OAAA,GAAUlE,EAAV,CAAiBC,KAAMk3B,QAC9Hv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,YAAY/X,OAAQ,SAAChD,GAAD,OAAYsO,EAAKpL,MAAMvB,gBAAiBf,EAAArB,EAAAsB,cAAC+sB,GAAD7pB,OAAAG,OAAA,GAAclE,EAAd,CAAqBC,KAAMk3B,KAAgBv2B,EAAArB,EAAAsB,cAAC22B,EAAA,EAAD,CAAU91B,GAAG,cACtId,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,eAAe/X,OAAQ,SAAChD,GAAD,OAAYsO,EAAKpL,MAAMvB,gBAAiBf,EAAArB,EAAAsB,cAAC62B,GAAD3zB,OAAAG,OAAA,GAAiBlE,EAAjB,CAAwBC,KAAMk3B,KAAgBv2B,EAAArB,EAAAsB,cAAC22B,EAAA,EAAD,CAAU91B,GAAG,cAC5Id,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,OAAO/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAAC82B,GAAD5zB,OAAAG,OAAA,GAAclE,EAAd,CAAqBC,KAAMk3B,QACtEv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,QAAQ/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAAC+2B,GAAD7zB,OAAAG,OAAA,GAAUlE,EAAV,CAAiBC,KAAMk3B,QACrEv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,SAAS/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACg3B,GAAD9zB,OAAAG,OAAA,GAAkBlE,EAAlB,CAAyBC,KAAMk3B,QAC7Ev2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,SAAS/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACi3B,GAAD/zB,OAAAG,OAAA,GAAWlE,EAAX,CAAkBC,KAAMk3B,QACtEv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,YAAY/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACk3B,GAADh0B,OAAAG,OAAA,GAAclE,EAAd,CAAqBC,KAAMk3B,QAC5Ev2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,kBAAkB/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACm3B,GAADj0B,OAAAG,OAAA,GAAoBlE,EAApB,CAA2BC,KAAMk3B,QACxFv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,8BAA8B/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACo3B,GAADl0B,OAAAG,OAAA,GAAgClE,EAAhC,CAAuCC,KAAMk3B,QAChHv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,kBAAkB/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACq3B,GAADn0B,OAAAG,OAAA,GAAoBlE,EAApB,CAA2BC,KAAMk3B,QACxFv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,8BAA8B/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACs3B,GAADp0B,OAAAG,OAAA,GAA2BlE,EAA3B,CAAkCC,KAAMk3B,QAC3Gv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,WAAW/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAAC6vB,GAAD3sB,OAAAG,OAAA,GAAalE,EAAb,CAAoBC,KAAMk3B,QAC1Ev2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,eAAe/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACu3B,GAADr0B,OAAAG,OAAA,GAAiBlE,EAAjB,CAAwBC,KAAMk3B,QAClFv2B,EAAArB,EAAAsB,cAACy2B,EAAA,EAAD,CAAOC,OAAK,EAACxc,KAAK,UAAU/X,OAAQ,SAAChD,GAAD,OAAWY,EAAArB,EAAAsB,cAACw3B,GAADt0B,OAAAG,OAAA,GAAYlE,EAAZ,CAAmBC,KAAMk3B,QAf1E,kBA1DM/0B,uBChBEk2B,QACW,cAA7Bl4B,OAAOC,SAASk4B,UAEe,UAA7Bn4B,OAAOC,SAASk4B,UAEhBn4B,OAAOC,SAASk4B,SAASC,MACvB,2DCTNC,IAAQC,UAAU,CACd74B,KAAM,CACJ84B,iBAAiB,EACjBlnB,OAAQ9C,GAAOuf,QAAQ0K,OACvBC,WAAYlqB,GAAOuf,QAAQ4K,aAC3BC,oBAAqBpqB,GAAOuf,QAAQ8K,eAEtC5L,QAAS,CACP6L,MAAO,CACHC,OAAQ,UACRznB,OAAQ,mBAGd0nB,mBAAsB,iBACtBC,4BAA+B,sFAC/BC,mBAAsB,iBACtBC,+BAAkC,UAClCC,mBAAsB,mCAG1BC,IAASx2B,OAAOpC,EAAArB,EAAAsB,cAAC44B,GAAD,MAASpL,SAASM,eAAe,SDoG3C,kBAAmB+K,WACrBA,UAAUC,cAAcC,MAAMjxB,KAAK,SAAAkxB,GACjCA,EAAaC","file":"static/js/main.3181550e.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1544;","import React, { Component } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport { Auth } from 'aws-amplify';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText('rgba(90, 105, 191,1.0)'),\n    backgroundColor: 'rgba(90, 105, 191,1.0)',\n    '&:hover': {\n      backgroundColor: 'rgba(90, 105, 191,0.95)',\n      color: '#fff',\n    },\n  },\n}))(Button);\n\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n      window.location.href=\"/\";\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav style={{backgroundColor:'#fff',position:'absolute',width:'100%'}} className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          {\n            this.props.logined?\n\n            <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <div className=\"link-1\"> \n                  <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n                </div>\n              </Link>\n              <Link to=\"/wordsetting\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"manual.png\"  width=\"20\" height=\"20\" alt=\"w\"/>\n                </div>\n              </Link>\n              <Link to=\"/products\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"group.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n              <Link to=\"/csv\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n              {/* <Link to=\"/temp\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n         \n        </div>\n        \n        \n        :\n\n          <div className=\"navbar-start\">\n                            <Link to=\"/\">\n                <div className=\"link-1\"> \n                  <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n                </div>\n              </Link>\n              <Link to=\"/wordsetting\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"manual.png\"  width=\"20\" height=\"20\" alt=\"w\"/>\n                </div>\n              </Link>\n              <Link to=\"/products\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"group.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n              <Link to=\"/csv\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n              {/* <Link to=\"/temp\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n          </div>\n         \n          }\n          \n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                     <Link to=\"/register\">\n                     <Button style={{borderColor:'#ddd',borderWidth:2,color:'#ddd'}} variant=\"outlined\">Register</Button>\n                    </Link>\n                    <Link to=\"/login\">\n                      <ColorButton style={{marginLeft:10}}  variant=\"contained\" disableElevation>\n                        Log in\n                      </ColorButton>\n                    </Link>                  \n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <Link to=\"/\">\n                    <ColorButton style={{marginLeft:10}} variant=\"contained\" onClick={this.handleLogOut} disableElevation>\n                    Logout\n                  </ColorButton>\n                 </Link>\n                 \n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n\n    )\n  }\n}\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport ScrollAnimation from 'react-animate-on-scroll';\n\n\nexport default class Home extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"#fff\", \"#fff\", \"#fff\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div align=\"center\" className=\"section section1\">\n                <div style={{padding:80}} >\n                <ScrollAnimation animateIn='fadeIn'animateOnce={false}>\n\n                <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n                </ScrollAnimation>\n                  \n                  <img style={{height:400}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n                </div>\n              </div>\n              <div className=\"section\">\n              <div style={{height:700}} align=\"center\" >\n                    <img style={{height:500}} src=\"선생님효과.png\" alt=\"teacher\"/>\n              </div>\n              </div>\n              <div className=\"section\">\n                <IconTabs/>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n  \nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n\n    },\n  });\n \nfunction IconTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const handleChangeIndex = index => {\n        setValue(index);\n      };\n    return (\n        <div >\n      <Paper elevation={0} square className={classes.root}>\n        <Tabs\n        centered\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<img width={100} height={100} src=\"1.png\" alt=\"11111\" />}  {...a11yProps(0)} aria-label=\"phone\" />\n          <Tab icon={<img width={100} height={100} src=\"2.png\" alt=\"22222\" />}  {...a11yProps(1)} aria-label=\"favorite\" />\n          <Tab icon={<img width={100} height={100} src=\"3.png\" alt=\"33333\" />}  {...a11yProps(2)} aria-label=\"person\" />\n        </Tabs>\n      </Paper>\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect1.png\" alt=\"effect1\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect2.png\" alt=\"effect2\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect3.png\" alt=\"effect3\" />\n            </div>\n      </TabPanel>\n      </SwipeableViews>\n      </div>\n    );\n  }","export const queryCall=`\r\nquery list{\r\n  listMyTypes{\r\n    items{\r\n      id type name grade class link todo words{\r\n        id name link percentage haveto\r\n      } record{id month day words etc}}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const queryCstudent=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}},limit:100){\r\n    items{\r\n      id type name grade class link todo haveto due \r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n      test{id name score month day}\r\n      homework{id name assignment done month day}\r\n    }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const studentsWords = `query list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}}){\r\n    items{\r\n      id name words{id name link due haveto deleted}\r\n    }\r\n}}` //for deleteWord\r\n\r\n\r\nexport const queryCteacher=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"teacher\"}}){\r\n    items{\r\n      id type name grade class\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const queryCword=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"word\"}}  limit:100){\r\n    items{\r\n      id name link haveto due deleted\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const createSample= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto} \r\n      record{id month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\n\r\n// id: Math.random().toString(36).substring(7),\r\n// type: \"sample\",\r\n// name: this.state.username,\r\n// address:this.state.company,\r\n// words:[{\r\n//   id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n//   name:\"2020 VOCA.json\",\r\n//   link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n//   haveto:100,\r\n//   due: due\r\n// },{\r\n// id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n// name:\"2020 VOCA2.json\",\r\n// link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n// haveto:100,\r\n// due: due\r\n// }],\r\n// record:record\r\n// });\r\n\r\n\r\nexport const createStudent= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\nexport const createStudent2= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto}\r\n      record{\r\n        id bookid month day words etc\r\n      }\r\n  }\r\n}\r\n`;\r\nexport const createStudent3= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\nexport const createWord = `mutation createMyType($input: CreateMyTypeInput!) {\r\n    createMyType(input: $input) {\r\n        id\r\n        type\r\n        name\r\n        grade\r\n        link\r\n        address\r\n        deleted\r\n    }\r\n  }\r\n  `;// address => 기간  grade => have to\r\n\r\n  export const updateAll = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        name\r\n        grade\r\n    }\r\n  }\r\n  `;\r\n\r\n  export const updateWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        words{name link due haveto deleted}\r\n    }\r\n  }\r\n  `;\r\n  export const updateHomework = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      homework{id name assignment done month day}\r\n    }\r\n  }\r\n  `;\r\n  export const updateTestRecord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      test{id name score month day}\r\n    }\r\n  }\r\n  `;\r\n  export const deleteWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        deleted\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  export const deleteWordOrigin = `mutation deleteMyType($input: DeleteMyTypeInput!) {\r\n    deleteMyType(input: $input) {\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"465tq4\"\r\n\t// \t\thomework:{name:\"숙제1\" assignment:50 done:20 date:\"20/02/13\"}\r\n  //   }){\r\n  //     homework{name assignment done date}\r\n  //   }\r\n  // }   \r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:[{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"},\r\n  //     {id:\"sdfgsdfg\"month:2,day:3,words:\"test.json\"},\r\n  //     {id:\"strwebsf\"month:2,day:2,words:\"test.json\"},]\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"}\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"test.json\"\r\n  //     type:\"word\"\r\n  //     name:\"test.json\"\r\n  //     link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //     words:[\r\n  //       {\r\n  //         id: null\r\n  //         name: null\r\n  //         link:null\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name link words{id name link}\r\n  //   }\r\n  // }  \r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"oatem28pmc\"\r\n  //     type:\"student\"\r\n  //     name:\"이병건\"\r\n  //     grade:\"m1\"\r\n  //     percentage:50,\r\n  //     words:[\r\n  //       {\r\n  //         id: \"test.json\"\r\n  //         name: \"test.json\"\r\n  //         link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name grade percentage words{id name link}\r\n  //   }\r\n  // }\r\n\r\n\r\n// mutation create{\r\n//   createToNote(input:{\r\n//     name:\"note\"\r\n//   \tdescription:\"전체숙제\"\r\n//     grades:[{id:\"01\", name:\"중등 1학년\", students:[\r\n//       {id:\"011\" name:\"홍길동\",percentage:86,assignment:\"숙제\"},\r\n//       {id:\"012\" name:\"이민정\",percentage:30,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"02\", name:\"중등 2학년\", students:[\r\n//       {id:\"021\" name:\"박보영\",percentage:100,assignment:\"숙제\"},\r\n//       {id:\"022\" name:\"신민아\",percentage:60,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"03\", name:\"중등 3학년\", students:[\r\n//       {id:\"031\" name:\"이병건\",percentage:50,assignment:\"숙제\"},\r\n//       {id:\"032\" name:\"주호민\",percentage:90,assignment:\"숙제\"}\r\n//     ]}  \r\n//     ]\r\n//   }){\r\n//     id name description grades{id name students{\r\n//       id name percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n// mutation {\r\n//   deleteToNote (\r\n//     input:{\r\n//       id:\"48f61355-996a-4a46-8638-3799aca806c7\"\r\n//     }\r\n//   ) {\r\n//   \tid\r\n//   }\r\n// }\r\n\r\n// const nodes = [{\r\n//   value: 'mid',\r\n//   label: '중학교',\r\n//   children: [\r\n//       { value: 'm1', label: '1학년' },\r\n//       { value: 'm2', label: '2학년' },\r\n//       { value: 'm3', label: '3학년' },\r\n//   ],\r\n// },{\r\n//   value: 'high',\r\n//   label: '고등학교',\r\n//   children: [\r\n//     { value: 'h1', label: '1학년' },\r\n//     { value: 'h2', label: '2학년' },\r\n//     { value: 'h3', label: '3학년' },\r\n//   ],\r\n// }];\r\n\r\n\r\n\r\n\r\n// mutation create{\r\n//   updateToNote(input:{\r\n//     id:\"9957304a-191c-4f7d-b2a5-192ba1151717\"\r\n//     grades:[{ id:\"01\"\r\n//       students:[{id:\"011\" percentage: 30 assignment: \"string\"}]}]    \r\n//   }){\r\n//     id grades{id students{\r\n//       id percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n\r\n// mutation create{\r\n// \tcreateMyType(input:{\r\n//     \ttype:\"word\"\r\n//     \tname:\"중3단어\"\r\n// \t\t\tgrade: \"m3\"\r\n//     \twords:\"단어\"\r\n//   }){\r\n// \ttype name grade words\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// input CreateToNoteInput {\r\n// \tid: ID\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [GradeInput]\r\n// }\r\n\r\n// input DeleteToNoteInput {\r\n// \tid: ID\r\n// }\r\n\r\n// type Grade {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [Student]\r\n// }\r\n\r\n// input GradeInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input ModelBooleanFilterInput {\r\n// \tne: Boolean\r\n// \teq: Boolean\r\n// }\r\n\r\n// input ModelFloatFilterInput {\r\n// \tne: Float\r\n// \teq: Float\r\n// \tle: Float\r\n// \tlt: Float\r\n// \tge: Float\r\n// \tgt: Float\r\n// \tcontains: Float\r\n// \tnotContains: Float\r\n// \tbetween: [Float]\r\n// }\r\n\r\n// input ModelIDFilterInput {\r\n// \tne: ID\r\n// \teq: ID\r\n// \tle: ID\r\n// \tlt: ID\r\n// \tge: ID\r\n// \tgt: ID\r\n// \tcontains: ID\r\n// \tnotContains: ID\r\n// \tbetween: [ID]\r\n// \tbeginsWith: ID\r\n// }\r\n\r\n// input ModelIntFilterInput {\r\n// \tne: Int\r\n// \teq: Int\r\n// \tle: Int\r\n// \tlt: Int\r\n// \tge: Int\r\n// \tgt: Int\r\n// \tcontains: Int\r\n// \tnotContains: Int\r\n// \tbetween: [Int]\r\n// }\r\n\r\n// enum ModelSortDirection {\r\n// \tASC\r\n// \tDESC\r\n// }\r\n\r\n// input ModelStringFilterInput {\r\n// \tne: String\r\n// \teq: String\r\n// \tle: String\r\n// \tlt: String\r\n// \tge: String\r\n// \tgt: String\r\n// \tcontains: String\r\n// \tnotContains: String\r\n// \tbetween: [String]\r\n// \tbeginsWith: String\r\n// }\r\n\r\n// type ModelToNoteConnection {\r\n// \titems: [ToNote]\r\n// \tnextToken: String\r\n// }\r\n\r\n// input ModelToNoteFilterInput {\r\n// \tid: ModelIDFilterInput\r\n// \tname: ModelStringFilterInput\r\n// \tdescription: ModelStringFilterInput\r\n// \tand: [ModelToNoteFilterInput]\r\n// \tor: [ModelToNoteFilterInput]\r\n// \tnot: ModelToNoteFilterInput\r\n// }\r\n\r\n// type Mutation {\r\n// \tcreateToNote(input: CreateToNoteInput!): ToNote\r\n// \tupdateToNote(input: UpdateToNoteInput!): ToNote\r\n// \tUpdateGrade(input: UpdateGradeInput!): [Grade]\r\n// \tUpdateStudent(input: UpdateStudentInput!): Student\r\n// \tdeleteToNote(input: DeleteToNoteInput!): ToNote\r\n// \taddGrade(input: [GradeInput]): [Grade]\r\n// \taddStudent(input: [StudentInput]): Student\r\n// }\r\n\r\n// type Query {\r\n// \tgetToNote(id: ID!): ToNote\r\n// \tlistToNotes(filter: ModelToNoteFilterInput, limit: Int, nextToken: String): ModelToNoteConnection\r\n// }\r\n\r\n// type Student {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input StudentInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// type Subscription {\r\n// \tonCreateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"createToNote\"])\r\n// \tonUpdateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"updateToNote\"])\r\n// \tonDeleteToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"deleteToNote\"])\r\n// }\r\n\r\n// type ToNote {\r\n// \tid: ID!\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [Grade]\r\n// }\r\n\r\n// input UpdateGradeInput {\r\n// \tid: ID\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input UpdateStudentInput {\r\n// \tid: ID!\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input UpdateToNoteInput {\r\n// \tid: ID!\r\n// \tgrades: [GradeInput]\r\n// }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nexport default function AboutFunction(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div style={props.style}>\r\n          <div style={props.iconstyle}>\r\n        <IconButton onClick={handleClickOpen} aria-label=\"delete\">\r\n          <ContactSupportIcon style={{ color: '#5a69bf' }} />\r\n        </IconButton>\r\n            </div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {props.content}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Confirm(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    props.send();\r\n    setOpen(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.button}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>handleSend()} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { Paper } from '@material-ui/core';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Confirm from './confirmreq'\r\n\r\nexport default function DeleteListComp(props) {\r\n  const [dense, setDense] = React.useState(false);\r\n\r\n\r\n\r\nconst updateDeleted = async(query) =>{\r\n    await API.graphql(graphqlOperation(graphql.updateWord, {input: query})).then(r =>{\r\n        NotificationManager.success('delete Success', `${IDBIndex} 단어장이 삭제 되었습니다`,3000);\r\n    });\r\n    window.location.reload();\r\n}\r\n\r\nconst handleAllDelete = async(id) =>{\r\n\r\n        await API.graphql(graphqlOperation(graphql.deleteWord, {input: {\r\n            id: id,\r\n            deleted:true\r\n          }}))\r\n          \r\n        await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n            data.data.listMyTypes.items.map((d,i)=>{\r\n                if(d.words !==null){\r\n                    let temp = d.words.find(x=>x.id !== id);\r\n                    let input_query={\r\n                        id: d.id,\r\n                        words:temp \r\n                    }\r\n                    updateDeleted(input_query);\r\n                }\r\n            })\r\n        });\r\n}\r\n\r\nconst handleDeletefor = async(word,man) =>{\r\n\r\n  await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n    // alert(JSON.stringify(data))\r\n      data.data.listMyTypes.items.map((d,i)=>{\r\n        if(d.id ===man){\r\n          if(d.words !==null){\r\n            let temp = d.words.find(x=>x.id !== word);\r\n            let input_query={\r\n                id: d.id,\r\n                words:temp \r\n            }\r\n            // alert(JSON.stringify(input_query))\r\n            updateDeleted(input_query);\r\n        }\r\n        }\r\n      })\r\n  });\r\n}\r\n\r\nconst handleDelete = (id,data) =>{\r\n    data.forEach(d =>{\r\n      handleDeletefor(id,d.id)\r\n    })\r\n}\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n        <NotificationContainer/>\r\n            <List dense={dense}>\r\n            {\r\n              props.CommonWords.map((data,i)=>{\r\n                  let secondary = [];\r\n                   data.common.map(one=> secondary.push(` ${one.name} `))\r\n                    return(\r\n                        <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <DescriptionIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                          primary={data.name}\r\n                          secondary={secondary}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <div style={{display:'flex'}}>\r\n                            <Confirm button=\"delete\" title=\"delete\" content={`${secondary}학생의 ${data.name}을 삭제하겠습니까?`} send={()=>handleDelete(data.id,data.common)}/>\r\n                            <Confirm button=\"delete All\" title=\"delete\" content={` ${data.name}을 가진 모든 학생에게서 ${data.name}을 삭제하겠습니까?`} send={()=>handleAllDelete(data.id)}/>\r\n                          </div>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    );\r\n                })      \r\n            }\r\n            </List>\r\n            </Paper>\r\n  );\r\n}\r\n\r\n                      \r\n                        // <div style={{display:'flex'}}>\r\n                        //     <div style={{width:80,margin:10}}>\r\n                        //         {data.name}\r\n                        //     </div>\r\n                        //     <div style={{display:'flex'}}>\r\n                        //         {\r\n                        //             data.common.map((one,i)=>{\r\n                        //                 return(\r\n                        //                 <div style={{margin:10}}>{one.name}</div>\r\n                        //                 );\r\n                        //             })\r\n                        //         }\r\n                        //     </div>\r\n                        // </div>","export const info={\r\n    name:\"정인학원\",\r\n    address:\"의왕시오전동\",\r\n    grade:[14,15,16,17,18],\r\n    class:[\"c\",\"b\",\"a\",\"s\"]\r\n}\r\n\r\n","import React,{Component} from 'react';\r\n// import TreeView from '@material-ui/lab/TreeView';\r\n// import ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// import ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\n// import TreeItem from '@material-ui/lab/TreeItem';\r\nimport * as academy from '../auth/academyInfo'\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n// import DropdownTreeSelect from 'react-dropdown-tree-select'\r\n// import 'react-dropdown-tree-select/dist/styles.css'\r\nimport CheckboxTree from 'react-checkbox-tree';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\n\r\nexport default class SelectTreeView extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          checked: [],\r\n          expanded: [],\r\n          loading:true,\r\n          AllStu:[],\r\n          treeSet:[],\r\n         };\r\n    };\r\n   \r\n    _makestudenttree=(data)=>{\r\n        let AllStu = [];\r\n      \r\n        let treeSet = academy.info.grade.map((g)=>{\r\n          let classcomp = academy.info.class.map((c,i)=>{\r\n            return {value:`${c}${g}`,label:c,children:[]}\r\n          });\r\n         return {value:g,label:g,children:classcomp}\r\n       });\r\n    \r\n         data.forEach((student,i)=>{\r\n          let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n           let nowGrade = student.grade;\r\n           let nowClass= student.class;\r\n           //react-checkbox-tree 양식에 맞도록 재가공\r\n           let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n           \r\n           let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n           let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n    \r\n            temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n            treeSet[gradeindex] = temptreeSet[gradeindex]\r\n              //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n               AllStu.push(studentInfo);   \r\n               // alert(JSON.stringify(treeSet))\r\n         })\r\n    \r\n         treeSet.forEach((i,index)=>{\r\n           let temp = i.children.filter(j=>j.children.length!==0)    \r\n            treeSet[index].children =temp\r\n          })\r\n          treeSet= treeSet.filter(x=>x.children.length!==0);\r\n    \r\n         this.setState({treeSet:treeSet,AllStu:AllStu,loading:false});\r\n      }\r\n    \r\n\r\n      _getStudentData = async() =>{\r\n        await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n          this._makestudenttree(data.data.listMyTypes.items)\r\n        })\r\n      }\r\n\r\n  componentDidMount = () => {\r\n    this._getStudentData()\r\n  }\r\n\r\n\r\n//   onChange = (currentNode, selectedNodes) => {\r\n//     alert(JSON.stringify(selectedNodes))\r\n\r\n//   }\r\n//   onAction = (node, action) => {\r\n//     console.log('onAction::', action, node)\r\n//   }\r\n//   onNodeToggle = currentNode => {\r\n//     console.log('onNodeToggle::', currentNode)\r\n//   }\r\n\r\nrender(){\r\n    return (\r\n        <div>\r\n             <div className=\"tile is-ancestor\">\r\n              <CheckboxTree\r\n              nodes={this.state.treeSet}\r\n              checked={this.state.checked}\r\n              expanded={this.state.expanded}\r\n              onCheck={checked => this.setState({ checked })}\r\n              onExpand={expanded => this.setState({ expanded })}\r\n            //   icons={{\r\n            //     check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n            //     uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n            //     halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n            //     expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n            //     expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n            //     expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n            //     collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n            //     parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n            //     parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n            //     leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            // }}\r\n          />             \r\n            </div>\r\n            {/* <DropdownTreeSelect data={this.state.treeSet} onChange={this.onChange} onAction={this.onAction} onNodeToggle={this.onNodeToggle} /> */}\r\n      </div>\r\n      );\r\n}\r\n}","import React, { Component, Fragment, useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n// import CheckboxTree from 'react-checkbox-tree';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport DateRangePicker from \"react-daterange-picker\";\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport originalMoment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DeleteListComp from './utility/deleteListComp'\r\nimport * as academy from './auth/academyInfo'\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport SelectTreeView from './utility/treeview'\r\n\r\nconst config = require('../config.json');\r\nconst moment = extendMoment(originalMoment);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default class WordSetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const today = moment();\r\n    this.state = { \r\n      value:0,  \r\n      newproduct: null,\r\n      products: [],\r\n      \r\n      addchecked: [],\r\n      addexpanded: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:[],\r\n      treeSet:[],\r\n      wordSet:[],\r\n      selectedWord:[],\r\n      AddOrDelete:true,\r\n      select:[],\r\n      calendarValue: moment.range(today.clone().subtract(1, \"days\"), today.clone())//calendar\r\n     };\r\n     this.getTree = this.getTree.bind(this)\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n\r\n\r\n  csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    let name = sender.target.files[0].name\r\n\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            let e = new File([JSON.stringify(result)], name.replace('.csv','.json'), {type: \"application/json\"})\r\n            this.handleFileInput(e);\r\n            // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\r\n            // var dlAnchorElem = document.createElement('a');\r\n            // dlAnchorElem.setAttribute(\"href\",dataStr);\r\n            // dlAnchorElem.setAttribute(\"download\", \"newworkbook.json\");\r\n            // dlAnchorElem.click();\r\n  }\r\n}\r\n  // ▽\r\n  handleFileInput =async(e)=>{\r\n      await S3.uploadFile(e, {\r\n          bucketName: config.S3.bucketName,\r\n          dirName:config.S3.dirName,\r\n          region: config.S3.region,\r\n          accessKeyId: config.S3.accessKeyId,\r\n          secretAccessKey: config.S3.secretAccessKey,\r\n      }).then( d =>{\r\n          this.SaveWords(d);\r\n        }).catch(err =>alert(err));\r\n  }\r\n  // ▽       \r\n\r\n  SaveWords = async(tempD)=>{\r\n    const input_query={\r\n      id: Math.random().toString(36).substring(7),\r\n      type: \"word\",\r\n      name: tempD.key.replace(`${config.S3.dirName}/`,\"\"),\r\n      grade:null, // haveto\r\n      link: tempD.location,\r\n      address:null,\r\n      deleted:false\r\n    };\r\n    // alert(JSON.stringify(input_query))\r\n    NotificationManager.success('Upload Success', '단어장을 저장하였습니다',3000); \r\n    await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(()=>\r\n      this._getWordData()\r\n    );\r\n  }\r\n  // ▽\r\n  _getWordData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCword)).then(data =>{\r\n   \r\n    let tt = data.data.listMyTypes.items.filter(x=> x.deleted === null || x.deleted ===false);\r\n    // alert(JSON.stringify(tt))\r\n      this.setState({wordSet:tt})\r\n    })\r\n  }\r\n \r\n\r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n    let renderTree=[];\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  getTree =(value)=>{\r\n    alert(value)\r\n  }\r\n\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectWord=(w)=>{\r\n        if(this.state.selectedWord.includes(w) === false){\r\n            this.setState({\r\n                selectedWord: [...this.state.selectedWord, w]\r\n            });\r\n        }else{\r\n            this.setState({selectedWord: this.state.selectedWord.filter(function(word) { \r\n                return word !== w\r\n            })});\r\n        }  \r\n  }\r\n\r\n  addSendData = () =>{\r\n    \r\n    this.state.AllStu.map((student, i)=>{    \r\n        if(this.state.addchecked.indexOf(student.value) !== -1){ \r\n\r\n              let wordset = this.state.wordSet\r\n\r\n            this.state.select.map(async(sw,i)=>{//선택된 단어장\r\n\r\n \r\n                let temp = student.words!==null?student.words.findIndex(x => x.label === sw):-2\r\n                let temp2 = this.state.wordSet.findIndex(x => x.name === sw)\r\n\r\n              if(temp!==-1&&temp!==-2){\r\n                    NotificationManager.warning('Upload Failed', `${student.label}이 이미 ${sw}을 가지고 있습니다.`,3000);\r\n                    return \"\";\r\n                }\r\n              else if(temp2 !== -1){\r\n\r\n                  wordset[temp2].haveto = this.state.haveto;\r\n                  wordset[temp2].due = `${this.state.calendarValue.start.format(\"YYYY-MM-DD\")}/${this.state.calendarValue.end.format(\"YYYY-MM-DD\")}`\r\n                  const ass = temp===-2?[wordset[temp2]]:student.words.concat(wordset[temp2])\r\n\r\n                  const input_query={\r\n                    id: student.value,\r\n                    words: ass,\r\n                  };\r\n\r\n                await API.graphql(graphqlOperation(graphql.updateWord, {input: input_query})).then(data =>{\r\n                     NotificationManager.success('Upload Success', `${student.label}에게 ${sw}을 업로드 하였습니다.`,3000);\r\n                })\r\n                }else return 0\r\n              })\r\n\r\n        }else return 0;\r\n    })\r\n  }\r\n  \r\n  oncalendarSelect = (calendarValue, states) => {\r\n    this.setState({ calendarValue, states });\r\n  };//calendar\r\n\r\n\r\n\r\n  renderSelectionValue = () => {\r\n    return (\r\n      <div style={{padding:25}}>\r\n        <div id=\"calendar\" style={{display:'flex'}}>\r\n          <strong>Start    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.start.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n        <div style={{display:'flex'}}>\r\n          <strong>End    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.end.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };//calendar\r\n\r\n  \r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getWordData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n  handleChangeMultiple = event => {\r\n    // alert(event.target.value)\r\n    this.setState({select:event.target.value});\r\n  };\r\n\r\n  handleHavetoChange = event => {\r\n    this.setState({haveto:event.target.value});\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n\r\n       \r\n\r\n      <Paper elevation={0} position=\"static\">\r\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"단어장 추가\" {...this.a11yProps(0)} />\r\n          <Tab label=\"단어장 삭제\" {...this.a11yProps(1)} />\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={this.state.value} index={0}>\r\n        <div>\r\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex'}}>\r\n\r\n        \r\n            <div style={{width:\"30%\"}}>\r\n\r\n\r\n            <div style={{marginBottom:50,display:'flex'}}>\r\n            <div style={{marginTop:15}}>\r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\"  name=\"file\" onChange={e => this.csvTojson(e)} accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  +\r\n                </Button>\r\n              </label>\r\n            </div>\r\n            \r\n            <div id=\"selecter\" style={{width:\"50%\",marginLeft:10}}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel id=\"demo-mutiple-chip-label\">select</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-chip-label\"\r\n            id=\"demo-mutiple-chip\"\r\n            multiple\r\n            value={this.state.select}\r\n            onChange={event =>this.handleChangeMultiple(event)}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            renderValue={selected => (\r\n              <div>\r\n                {\r\n                selected.map((w,i) => (\r\n                   <Chip\r\n                   key={i}\r\n                   label={w.replace('.json','')}\r\n                 />\r\n                ))\r\n                }\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >{this.state.wordSet.map(w => (\r\n            <MenuItem key={w.id} value={w.name}>\r\n              {w.name.replace('.json','')}\r\n            </MenuItem>\r\n          ))}\r\n          </Select>\r\n        </FormControl>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n            <SelectTreeView passChildData={this.getTree} />\r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"100%\",display:'flex'}} >\r\n              <div style={{marginRight:100}}>\r\n\r\n                <div>\r\n                  <strong>WordBook</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                     {//if selected, print that\r\n                          this.state.select.map((word,i)=>{\r\n                            return(\r\n                              <Chip\r\n                                style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                key={word}\r\n                                label={word.replace('.json','')}\r\n                              />\r\n                            );\r\n                        })\r\n                    }\r\n                  </Scrollbars>\r\n                  \r\n                </div>\r\n\r\n                <div>\r\n                  <strong>Students</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                  {\r\n                      this.state.AllStu.map((student, i)=>{    \r\n                          if(this.state.addchecked.indexOf(student.value) !== -1){\r\n                              return(\r\n                                <Chip\r\n                                  style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                  key={student.label}\r\n                                  label={student.label}\r\n                                />\r\n                          );\r\n                          }\r\n                          return \"\";\r\n                      })\r\n                      }\r\n                  </Scrollbars>\r\n                  \r\n                </div> \r\n\r\n                <div style={{ height: 80,width: 300}}>\r\n                  <strong>Have to</strong>\r\n                  <div>\r\n                      <TextField\r\n                        value={this.state.haveto}\r\n                        onChange={this.handleHavetoChange}\r\n                        id=\"outlined-number\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n\r\n                </div>  \r\n                <div>\r\n                  <div>{this.renderSelectionValue()}</div>\r\n                  <div>\r\n                    <DateRangePicker\r\n                      value={this.state.calendarValue}\r\n                      onSelect={this.oncalendarSelect}\r\n                      singleDateRange={true}\r\n                    />\r\n                  \r\n                </div>\r\n                <div>\r\n                        <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:300}} onClick={()=>{this.addSendData()}}>\r\n                            send\r\n                        </Button>\r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n      <TabPanel value={this.state.value} index={1}>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n\r\n            <div style={{width:\"30%\"}}>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                {/* <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.deletechecked}\r\n                expanded={this.state.deleteexpanded}\r\n                onCheck={checked => this.setState({ deletechecked:checked })}\r\n                onExpand={expanded => this.setState({ deleteexpanded:expanded })}\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />              */}\r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                    <CommonWordsView wordSet={this.state.wordSet} allstu={this.state.AllStu} deletechecked={this.state.deletechecked}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n\r\n        </div>\r\n       \r\n\r\n\r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CommonWordsView(props) {\r\n    let CommonWords = [];\r\n    let commonWords_id =[];\r\n\r\n    props.allstu.map((student, i)=>{                            \r\n        if(props.deletechecked.indexOf(student.value) !== -1){\r\n            if(student.words !== null){\r\n            student.words.map((perword,i)=>{\r\n              if(props.wordSet.findIndex(x=>x.id===perword.id)!==-1){ //delete되지 않은 단어인가?  맞다       \r\n                if(CommonWords.length >0){//맨 처음 push하는 것인가? 아니다\r\n                    CommonWords.map((c,i)=>{\r\n                        \r\n                          if(c.id === perword.id){ // 해당 단어장이 이미 있는가? 없다\r\n                            CommonWords[i].common.push({name:student.label, id:student.value})\r\n                            }\r\n                            else if(commonWords_id.includes(perword.id)===false){// 해당 단어장이 이미 있는가? 있다\r\n                                CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                                commonWords_id.push(perword.id);\r\n                            } \r\n                        \r\n                    })\r\n                }else if(CommonWords.length === 0){//맨 처음 push하는 것인가? 맞다\r\n                    CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                    commonWords_id.push(perword.id);\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n    })\r\n    \r\n    return (\r\n      <Scrollbars style={{height:500}}>\r\n          <div style={{width:\"80%\"}}><DeleteListComp commonWords_id={commonWords_id} CommonWords={CommonWords}/></div>\r\n      </Scrollbars>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n\r\nexport default function EditStudent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [name, setName] =  React.useState('');\r\n  const [grade, setGrade] =  React.useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n//   alert(JSON.stringify(props.All));\r\n\r\n  const handleFileInput = async()=>{\r\n      if(name !==''&& grade!==''){\r\n        await API.graphql(graphqlOperation(graphql.updateAll, {input: {\r\n            id: props.id,\r\n            name: name,\r\n            grade:grade,\r\n          }})).then(handleClose())\r\n      }else{\r\n          alert(\"모두 입력해주세요\")\r\n      }\r\n}\r\n\r\nconst thisname = props.All.find(x => x.id === props.id).name;\r\nconst thisgrade = props.All.find(x => x.id === props.id).grade;\r\n// const todo = props.All.find(x => x.id === props.id).todo;\r\n\r\n\r\n  //   id type name grade link words\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen}>\r\n        Edit\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"name\"\r\n            placeholder={thisname}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            value={grade}\r\n            onChange={(e) => setGrade(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"grade\"\r\n            placeholder={thisgrade}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleFileInput} color=\"primary\">\r\n            Edit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd'; //test\r\nimport PostAddIcon from '@material-ui/icons/PostAdd'; //test\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: '1px solid #e8e8e8',\r\n  },\r\n  indicator: {\r\n    backgroundColor: '#5a69bf',\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles(theme => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    minWidth: 50,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      color: '#5a69bf',\r\n      opacity: 1,\r\n    },\r\n    '&$selected': {\r\n      color: '#5a69bf',\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    '&:focus': {\r\n      color: '#5a69bf',\r\n    },\r\n  },\r\n  selected: {},\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: '#2e1534',\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const data = props.data===[]?[]:props.data;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const detaila = data.detaila===undefined?[]:data.detaila;\r\n  const detailh = data.detailh===undefined?[]:data.detailh;\r\n  const detailt = data.detailt===undefined?[]:data.detailt;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n          <AntTab  icon={<PhoneAndroidIcon />} {...a11yProps(0)} />\r\n          <AntTab  icon={<NoteAddIcon />}  {...a11yProps(1)} />\r\n          <AntTab  icon={<PostAddIcon />}  {...a11yProps(2)}/>\r\n        </AntTabs>\r\n    </div>\r\n    <div>\r\n                  <TabPanel value={value} index={0}>\r\n                   \r\n                    <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detaila.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.words.replace(\"https://wowproject-wow.s3.amazonaws.com/demo/\",\"\").replace(\".json\",\"\")} secondary={x.etc} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Scrollbars>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                  <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detailh.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.name} secondary={x.done} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Scrollbars>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={2}>\r\n                  <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detailt.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.name} secondary={x.score} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                   </Scrollbars>\r\n                  </TabPanel>\r\n                </div>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  ","import React,{Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Sparklines, SparklinesBars } from 'react-sparklines';\r\n\r\nconst average = arr => {\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\nexport default class DetailMoreStudent extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading:true,  \r\n          expanded:false,\r\n          dialog:false,\r\n          words:this.props.words,\r\n          weekly:this.props.weekly,\r\n          detaila:null\r\n         };\r\n    };\r\n\r\n    handleChange = panel => (event, isExpanded) => {\r\n      this.setState({expanded:isExpanded ? panel : false});\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({dialog:true})\r\n      };\r\n    \r\n    handleClose = () => {\r\n        this.setState({dialog:false})\r\n      };\r\n\r\n    componentDidMount =()=>{\r\n        let app =[];\r\n        let homework =[];\r\n        let test =[];\r\n\r\n        this.props.weekly.forEach(x=>{\r\n            let aa = x.detaila.map(a=>a.etc);\r\n            app.push(average(aa))\r\n        })\r\n        alert(JSON.stringify(app))\r\n        this.setState({detaila:app,loading:false})\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.loading?\r\n                    <div></div>:\r\n                    <div>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                            More\r\n                        </Button>\r\n                        <Dialog\r\n                            open={this.state.dialog}\r\n                            onClose={this.handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n\r\n                            <DialogContent>\r\n                                <div style={{width:100,height:20}}>\r\n\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>\r\n                                <div style={{width:100,height:20}}>\r\n\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>                                \r\n                                <div style={{width:100,height:20}}>\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>                              \r\n                                {\r\n                                    this.state.words.map((x,i)=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <ExpansionPanel expanded={this.state.expanded === x.id} onChange={this.handleChange(x.id)}>\r\n                                                <ExpansionPanelSummary\r\n                                                    expandIcon={<ExpandMoreIcon />}\r\n                                                    aria-controls=\"panel1bh-content\"\r\n                                                    id={x.id}\r\n                                                >\r\n                                                    <Typography>{x.name}</Typography>\r\n                                                </ExpansionPanelSummary>\r\n                                                <ExpansionPanelDetails>\r\n                                                    <Typography>\r\n                                                    Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget\r\n                                                    maximus est, id dignissim quam.\r\n                                                    </Typography>\r\n                                                </ExpansionPanelDetails>\r\n                                                </ExpansionPanel>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                                Agree\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                }\r\n    </div>\r\n        );\r\n    }\r\n    \r\n  }","\r\n  \r\n  import * as React from 'react';\r\n  import {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    LineSeries,\r\n    Legend,BarSeries,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\n\r\n\r\n  import { Animation,EventTracker,SelectionState,Stack } from '@devexpress/dx-react-chart';\r\n  import {\r\n    curveCatmullRom,\r\n    line,\r\n  } from 'd3-shape';\r\n  import moment from 'moment'\r\n  import DateRangePicker from \"react-daterange-picker\";\r\n  import Dialog from '@material-ui/core/Dialog';\r\n  import DialogActions from '@material-ui/core/DialogActions';\r\n  import DialogContent from '@material-ui/core/DialogContent';\r\n  import Button from '@material-ui/core/Button';\r\n  import { withStyles } from '@material-ui/core/styles';\r\n  import CustomizedTabs from './perWeekTabs'\r\n  import DetailMoreStudent from './detailmorestudent'\r\n  const Line = props => (\r\n    <LineSeries.Path\r\n      {...props}\r\n      path={line()\r\n        .x(({ arg }) => arg)\r\n        .y(({ val }) => val)\r\n        .curve(curveCatmullRom)}\r\n    />\r\n  );\r\n  \r\n  const legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n  const legendLabelStyles = theme => ({\r\n    label: {\r\n      marginBottom: theme.spacing(1),\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  });\r\n  const legendItemStyles = () => ({\r\n    item: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  });\r\n  \r\n  const legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n  );\r\n  const legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n  );\r\n  const legendItemBase = ({ classes, ...restProps }) => (\r\n    <Legend.Item className={classes.item} {...restProps} />\r\n  );\r\n  const Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n  const Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n  const Item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\r\n\r\n\r\n\r\n  const compare = (\r\n    { series, point }, { series: targetSeries, point: targetPoint },\r\n  ) => series === targetSeries && point === targetPoint;\r\n\r\n\r\n  export default class TotalChart extends React.PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        loading:false,\r\n        calendarValue: moment(),//calendar\r\n        selection: [],\r\n        calendarOpen:false,\r\n        selected:0,\r\n        daychart:undefined,\r\n        weekly:[],\r\n        };\r\n\r\n\r\n        this.click = ({ targets }) => {\r\n          const target = targets[0];\r\n          if (target) {\r\n          if(target.point!==undefined){\r\n              this.setState(({ selection,daychart }) => ({\r\n                selection: selection[0] && compare(selection[0], target) ? [] : [target],\r\n                selected:target.point\r\n              }));\r\n            }\r\n          }\r\n        };\r\n      }\r\n\r\n      toggleCalendar=()=>{\r\n        this.setState({ calendarOpen:true });\r\n      }\r\n      toggleCalendarfalse=()=>{\r\n        this.setState({ calendarOpen:false });\r\n      }\r\n      oncalendarSelect = (calendarValue, states) => {\r\n        this.toggleCalendarfalse()\r\n        this.setState({ calendarValue });\r\n        this.forWeekChart()\r\n      };//calendar\r\n\r\n    \r\n      forWeekChart=()=>{\r\n        const yyyy = Number(this.state.calendarValue.format(\"YYYY\"));\r\n        const mm = Number(this.state.calendarValue.format(\"MM\"));\r\n        const dd = Number(this.state.calendarValue.format(\"DD\"));\r\n  \r\n        const record = this.props.record\r\n        const homework = this.props.homework\r\n        const test = this.props.test\r\n        let count = 0;\r\n        let weekly = [\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n\r\n      ];\r\n        let td = moment([yyyy, mm, dd]);\r\n\r\n        let m =0;\r\n        let d =0;\r\n        let w =0;\r\n        let index=0;\r\n        let perRecord1 = []\r\n        let perRecord2 = []\r\n        let perHomework1 = []\r\n        let perHomework2 = [];\r\n        let percentage =0\r\n        let perTest1 = []\r\n        let perTest2 = []\r\n\r\n        for(let i=40;i>-1;i--){\r\n\r\n          m = moment(td).subtract(i, 'day').subtract(1, 'month').format('MM')\r\n          d = moment(td).subtract(i, 'day').format('DD')\r\n          w = weekOfMonth(moment(`${d}/${m}/2020`, \"DD/MM/YYYY\"))\r\n          \r\n          if(isNaN(w)===false){\r\n            // alert(`${m}월${d}일 // ${JSON.stringify(weekly[index])}`);\r\n            m=Number(m)\r\n            d=Number(d)\r\n            index = weekly.findIndex(x=>x.month === m&&x.week ===w);\r\n  \r\n            if(index===-1){\r\n              count++\r\n              index = count\r\n              weekly[index].month = m; \r\n              weekly[index].week = w;\r\n              weekly[index].arg =`${m}월${w}주`\r\n            }\r\n  \r\n            if(record !==null){\r\n                perRecord1 = record.filter(x=>x.month===m && Number(x.day)===d);\r\n                perRecord2 = perRecord1.map(x => x.etc)\r\n                weekly[index].detaila=weekly[index].detaila.concat(perRecord1);\r\n                weekly[index].app=weekly[index].app.concat(perRecord2);\r\n            }\r\n              \r\n            if(homework!==null){\r\n                perHomework1 = homework.filter(x=>Number(x.month)===m && Number(x.day)===d)\r\n                perHomework2 = perHomework1.map(x => {\r\n                percentage = Math.round((x.done/x.assignment)*100)\r\n                  return percentage\r\n                });\r\n                weekly[index].detailh=weekly[index].detailh.concat(perHomework1);\r\n                weekly[index].homework=weekly[index].homework.concat(perHomework2);\r\n            }\r\n              \r\n             if(test!==null){\r\n                perTest1 = test.filter(x=>x.month===m && Number(x.day)===d)\r\n                perTest2 = perTest1.map(x => {\r\n                  return x.score\r\n                });\r\n                weekly[index].detailt=weekly[index].detailt.concat(perTest1);\r\n                weekly[index].test=weekly[index].test.concat(perTest2);\r\n             }   \r\n\r\n          }\r\n      }\r\n      \r\n      weekly.forEach((x,i)=>{\r\n        weekly[i].app = average(x.app)\r\n        weekly[i].homework = average(x.homework)\r\n        weekly[i].test = average(x.test)\r\n      })\r\n\r\n      this.setState({weekly:weekly,loading:true})\r\n      }\r\n    \r\n      forDayChart=(y,m,d)=>{\r\n      let tendays = [];\r\n      let td = [y, m, d];\r\n      for(let i=9;i>-1;i--){\r\n          const d = moment(td).subtract(i, 'day').format('DD')\r\n          tendays.push(d);\r\n      }\r\n      \r\n      return tendays\r\n    }//for day chart 1\r\n    \r\n    updateAll=(y,m,d)=>{\r\n      const record = this.props.record\r\n      const homework = this.props.homework\r\n      const test = this.props.test\r\n\r\n    \r\n      const fordaychart = this.forDayChart(y,m,d);\r\n      \r\n      let DayChart = [\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        ]\r\n\r\n        fordaychart.forEach((day,i)=>{\r\n          if(DayChart[i].day ===null){DayChart[i].day = day;}\r\n          // record.forEach(x=> alert(`${x.day}   ${day}  ${Number(x.day)===Number(day)}`  ))\r\n         \r\n          let perRecord = record.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => x.etc);\r\n          DayChart[i].app=DayChart[i].app.concat(perRecord);\r\n          \r\n\r\n          let perHomework = homework.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => {\r\n            const percentage = Math.round((x.done/x.assignment)*100)\r\n            DayChart[i].info.homework.push({name:percentage,percentage:percentage});\r\n            return percentage\r\n          });\r\n          DayChart[i].homework=DayChart[i].homework.concat(perHomework);\r\n          \r\n\r\n          let perTest = test.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => {\r\n            DayChart[i].info.test.push({name:x.score,score:x.score});\r\n            return x.score\r\n          });\r\n          DayChart[i].test=DayChart[i].test.concat(perTest);\r\n          \r\n          \r\n      })\r\n\r\n      this.setState({daychart:DayChart,loading:true})\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount=()=>{\r\n      this.forWeekChart()\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n      const {weekly: chartData,selection,selected} = this.state;\r\n\r\n      return (\r\n            <div>\r\n            {\r\n              this.state.loading?\r\n              <div style={{display:'flex'}}>\r\n                <div style={{width:400}}>\r\n                  \r\n                  <div style={{margin:20}}>\r\n                                        {/* <DetailMoreStudent words={this.props.words} weekly={chartData}/> */}\r\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={this.toggleCalendar}>\r\n                                            {this.state.calendarValue.format(\"YY/MM/DD\")}\r\n                                        </Button>\r\n                                        <Dialog\r\n                                            open={this.state.calendarOpen}\r\n                                            onClose={this.toggleCalendarfalse}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            \r\n                                            <DialogContent>\r\n                                                <DateRangePicker\r\n                                                    selectionType='single'\r\n                                                    value={this.state.calendarValue}\r\n                                                    onSelect={this.oncalendarSelect}\r\n                                                    singleDateRange={true}\r\n                                                />\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                            <Button onClick={this.toggleCalendarfalse} color=\"primary\">\r\n                                                Disagree\r\n                                            </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                        </div>\r\n              <Chart\r\n                data={chartData}\r\n              >\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <BarSeries\r\n                name=\"homework\"\r\n                color='#F4F5F7'\r\n                valueField=\"homework\"\r\n                argumentField=\"arg\"\r\n              />\r\n                <BarSeries\r\n                name=\"app\"\r\n                color='#5a69bf'\r\n                valueField=\"app\"\r\n                argumentField=\"arg\"\r\n              />\r\n                <LineSeries\r\n                  name=\"test\"\r\n                  color='#ddd'\r\n                  valueField=\"test\"\r\n                  argumentField=\"arg\"\r\n                  seriesComponent={Line}\r\n                />\r\n              \r\n                <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} />\r\n                <Animation />\r\n                <Stack />\r\n                <EventTracker onClick={this.click} />\r\n                <SelectionState selection={selection} />\r\n\r\n              </Chart>\r\n                </div>\r\n                <div style={{width:300}}>\r\n                <CustomizedTabs data={chartData[selected]}/>\r\n                </div>\r\n               \r\n              </div>\r\n              :<div>\r\n                <p>loading</p>\r\n              </div>\r\n            }\r\n          </div>\r\n         \r\n      );\r\n    }\r\n  }\r\n  \r\n  const average = arr => {\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\n  function weekOfMonth (input) {\r\n    const firstDayOfMonth = input.clone().startOf('month');\r\n    const firstDayOfWeek = firstDayOfMonth.clone().startOf('week');\r\n    const offset = firstDayOfMonth.diff(firstDayOfWeek, 'days');\r\n  \r\n    return Math.ceil((input.date() + offset) / 7);\r\n  }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {  buildStyles,CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EditStudent from './editstudent'\r\nimport TotalChart from './totalchart';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '50%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DetailedExpansionPanel(props) {\r\n  const classes = useStyles();\r\n  const [selected, setselected] = React.useState('');\r\n  let Tavg = 0;\r\n  let Aavg = 0;\r\n  const words = props.All.find(x => x.id === props.id).words;\r\n  \r\n  if(props.TodayAssemble.length >0){\r\n    Tavg =props.TodayAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/props.TodayAssemble.length;\r\n  }\r\n  if(props.AllAssemble.length>0){\r\n    Aavg =props.AllAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/props.AllAssemble.length;\r\n  }\r\n\r\n  // alert(props.record)\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded={false}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div styles={{width:50}} className={classes.column}>\r\n            <Typography className={classes.heading}>{props.name}</Typography>\r\n          </div>\r\n          <div style={{display:'flex'}} className={classes.column}>\r\n\r\n              <div style={{width:100}}>\r\n              <CircularProgressbarWithChildren value={Math.round(Tavg)}>\r\n                <div style={{textAlign:'center' }}>\r\n                  <p style={{ fontSize: 15,marginBottom:-10}}>Today</p>                   \r\n                  <strong style={{ fontSize: 35}}>{Math.round(Tavg)}</strong> \r\n                  <strong style={{ fontSize: 20}}>%</strong> \r\n                </div>\r\n\r\n              </CircularProgressbarWithChildren>\r\n              </div>\r\n\r\n              <div style={{width:100,marginLeft:30}}>\r\n              <CircularProgressbarWithChildren \r\n              styles={buildStyles({\r\n                textColor: '#DC2C1A',\r\n                pathColor: '#5a69bf',\r\n                backgroundColor: '#DC2C1A',\r\n                })} value={Math.round(Aavg)}>\r\n                <div style={{textAlign:'center' }}>\r\n                  <p id=\"pfont\" style={{ fontSize: 15,marginBottom:-10}}>Total</p>                   \r\n                  <strong style={{ fontSize: 35,color:'#5a69bf'}}>{Math.round(Aavg)}</strong> \r\n                  <strong style={{ fontSize: 20,color:'#5a69bf'}}>%</strong> \r\n                </div>\r\n              </CircularProgressbarWithChildren>\r\n              </div>\r\n\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n\r\n        {words !== null?\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <div style={{width:'100%'}}>\r\n            <TotalChart\r\n              words={words}\r\n              record={props.record}\r\n              homework={props.homework}\r\n              test={props.test}\r\n            />\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n        :\r\n        <div></div>\r\n        }\r\n        <Divider />\r\n        <ExpansionPanelActions>\r\n          \r\n          <EditStudent id={props.id} All={props.All}/>\r\n        </ExpansionPanelActions>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as academy from '../auth/academyInfo';\r\nimport AboutMultiple from './AboutFunction'\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nexport default function AddStudent() {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState('');  \r\n  const [aclass, setClass] = React.useState('');\r\n  const [name, setName] = React.useState('');\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const handleRegister = async() =>{\r\n    if(age !== '' && aclass !== '' && name !==''){\r\n      const input_query={\r\n        id: Math.random().toString(36).substring(7),\r\n        type: \"student\",\r\n        name: name,\r\n        grade:age,\r\n        class:aclass\r\n      };\r\n      await API.graphql(graphqlOperation(graphql.createStudent, {input: input_query})).then(r =>{\r\n          NotificationManager.success('Upload Success', `${name} 학생이 저장 되었습니다`,3000);\r\n          handleClose()     \r\n      });\r\n    }else{\r\n      NotificationManager.error('failed', `항목을 모두 채워주세요`,3000);\r\n    }\r\n  }\r\n\r\n  const handleAgeChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n  const handleclassChange = event => {\r\n    setClass(event.target.value);\r\n  };\r\n  const handlenameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n\r\n const csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            handleFileInput(result);\r\n  }\r\n}\r\n\r\n  const handleFileInput =(e)=>{ //multiple\r\n    try {\r\n        let res = JSON.parse(e)\r\n        res.map(async(man,i)=>{\r\n          const input_query={\r\n            id: Math.random().toString(36).substring(7),\r\n            type: \"student\",\r\n            name: man.name,\r\n            grade:man.grade,\r\n            class:man.class\r\n          };\r\n          await API.graphql(graphqlOperation(graphql.createStudent, {input: input_query})).then(r =>{\r\n            if(i === res.length-1){\r\n              // alert(`${i}--${res.length}--${res[0].name} 외 ${res.length}명이 저장 되었습니다`)\r\n              NotificationManager.success('Upload Success', `${res[0].name} 외 ${res.length}명이 저장 되었습니다`,3000);             \r\n          }\r\n         });\r\n      });\r\n  } catch (err) {\r\n      console.error(err);\r\n  }\r\n      // const input_query={\r\n      //   id: tempD.key,\r\n      //   type: \"word\",\r\n      //   name: tempD.key,\r\n      //   grade:null,\r\n      //   percentage:null ,\r\n      //   words: tempD.location,\r\n      // };\r\n      \r\n      // await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(this._getWordData());\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer/>\r\n      <Tooltip title=\"Add Student\" arrow>\r\n      <IconButton  onClick={handleClickOpen}>\r\n                        <PersonAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                    </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">학생추가</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            한명의 학생을 등록하는 페이지입니다. 여러명의 학생을 한번에 등록하려면 아래의 링크를 참조하세요.\r\n              <AboutMultiple buttontitle={\"Multiple 기능 사용법\"} content={\"f\"}/>\r\n          </DialogContentText>\r\n          <div style={{float:'right'}}>\r\n              <FormControl style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">학년</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={age}\r\n                onChange={handleAgeChange}\r\n                >\r\n                {\r\n                  academy.info.grade.map((g,i)=>{\r\n                    return(\r\n                    <MenuItem value={g}>{g}</MenuItem>\r\n                    );\r\n                  })\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">반</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={aclass}\r\n                onChange={handleclassChange}\r\n                >\r\n                {\r\n                  academy.info.class.map((c,i)=>{\r\n                    return(\r\n                    <MenuItem value={c}>{c}</MenuItem>\r\n                    );\r\n                  })\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            </div>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"학생이름\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={name}\r\n          onChange={handlenameChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n         \r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\" onChange={csvTojson}  name=\"file\" accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Multiple\r\n                </Button>\r\n              </label>\r\n\r\n        \r\n          <Button onClick={handleRegister} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function HandleTestRecord() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n  \r\n                    if(lines[0] ===\"name,id,test,score,month,day\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,assignment,done,date`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n    const save = async(query) =>{\r\n        await API.graphql(graphqlOperation(graphql.updateTestRecord, {input: query})).then(r =>{\r\n            console.log(r);\r\n         });\r\n    }\r\n\r\n      const handleFileInput = async(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n\r\n            let stackid =[];\r\n\r\n            for(let i =0;i<res.length-1;i++){\r\n                if(stackid.includes(res[i].id)){\r\n\r\n                }else{\r\n                    let input_query=undefined;\r\n                         \r\n                    await API.graphql(graphqlOperation( `\r\n                         query list{\r\n                             listMyTypes(filter:{id:{contains:\"${res[i].id}\"}}){\r\n                               items{\r\n                                 id test{id name score month day}\r\n                               }\r\n                             }\r\n                           }`)).then(r =>{\r\n                            \r\n                             let Data = r.data.listMyTypes.items[0].test\r\n\r\n                             const filtered = res.filter(x=>x.id === res[i].id)\r\n                             const arrayObj = filtered.map(man => {\r\n                                     return {\r\n                                         id:Math.random().toString(36).substring(7),\r\n                                         name:man.test,\r\n                                         score:man.score,\r\n                                         month:man.month,\r\n                                         day:man.day\r\n                                     };\r\n                                   });\r\n                                   \r\n                            if(Data !== null){     \r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    test:Data.concat(arrayObj)\r\n                                }\r\n                            }else{\r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    test:arrayObj\r\n                                }\r\n                            }  \r\n                           \r\n                            save(input_query)\r\n                            NotificationManager.success('Upload Success', `${res[i].name} 외 ${arrayObj.length}개의 숙제결과가 저장 되었습니다`,3000);\r\n                        })     \r\n                        stackid.push(res[i].id)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n          <Tooltip title=\"Add Test\" arrow>\r\n                <IconButton onClick={handleClickOpen} color=\"primary\" aria-label=\"upload homeworkDialog\" component=\"span\">\r\n                <NoteAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                </IconButton>\r\n                </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <img src=\"testmanual.png\" alt=\"students setting\"/>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <input onChange={csvTojson}  name=\"file\" accept=\".csv\"  style={{display:'none'}} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n      );\r\n\r\n}","import React from 'react';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function HandleHomework() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n  \r\n                    if(lines[0] ===\"name,id,homework,assignment,done,month,day\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,assignment,done,date`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n    const save = async(query) =>{\r\n        await API.graphql(graphqlOperation(graphql.updateHomework, {input: query})).then(r =>{\r\n            console.log(r);\r\n         });\r\n    }\r\n\r\n      const handleFileInput = async(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n\r\n            let stackid =[];\r\n\r\n            for(let i =0;i<res.length-1;i++){\r\n                if(stackid.includes(res[i].id)){\r\n\r\n                }else{\r\n                    let input_query=undefined;\r\n                         \r\n                    await API.graphql(graphqlOperation( `\r\n                         query list{\r\n                             listMyTypes(filter:{id:{contains:\"${res[i].id}\"}}){\r\n                               items{\r\n                                 id homework{id name assignment done month day}\r\n                               }\r\n                             }\r\n                           }`)).then(r =>{\r\n                             let Data = r.data.listMyTypes.items[0].homework\r\n\r\n                             const filtered = res.filter(x=>x.id === res[i].id)\r\n                             const arrayObj = filtered.map(man => {\r\n                                     return {\r\n                                         id:Math.random().toString(36).substring(7),\r\n                                         name:man.homework,\r\n                                         assignment:man.assignment,\r\n                                         done:man.done,\r\n                                         month:man.month,\r\n                                         day:man.day\r\n                                     };\r\n                                   });\r\n                            \r\n                            if(Data !== null){     \r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    homework:Data.concat(arrayObj)\r\n                                }\r\n                            }else{\r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    homework:arrayObj\r\n                                }\r\n                            }  \r\n                            save(input_query)\r\n                            NotificationManager.success('Upload Success', `${res[i].name} 외 ${arrayObj.length}개의 숙제결과가 저장 되었습니다`,3000);\r\n                        })     \r\n                        stackid.push(res[i].id)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n          <Tooltip title=\"Add Homework\" arrow>\r\n                <IconButton onClick={handleClickOpen} color=\"primary\" aria-label=\"upload homeworkDialog\" component=\"span\">\r\n                <PostAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                </IconButton>\r\n                </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                <img src=\"homeworkmanual.png\" alt=\"students setting\"/>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <input onChange={csvTojson}  name=\"file\" accept=\".csv\"  style={{display:'none'}} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n      );\r\n\r\n}","import React from 'react'\r\nimport { Box, Email, Image, Item, Span, A,renderEmail } from 'react-html-email'\r\nimport axios from 'axios';\r\n\r\nconst css = `\r\n@media only screen and (max-device-width: 480px) {\r\n  font-size: 20px !important;\r\n}`.trim()\r\n\r\nconst sourceURL = 'https://raw.githubusercontent.com/chromakode/react-html-email/master/examples/kitchenSink.js'\r\n\r\nconst email = (\r\n  <Email title=\"Test Email\" headCSS={css}>\r\n    <Item>\r\n      <Span fontSize={15}>Hello, world!</Span>\r\n    </Item>\r\n    <Item>\r\n      <Box cellSpacing={20} width=\"100%\" style={{ borderTop: '3px solid black' }}>\r\n        <Item>\r\n          <Span color=\"gray\" lineHeight={20}>Generated by <A href=\"https://github.com/chromakode/react-html-email\">react-html-email</A></Span>\r\n          <Image data-mc-bar=\"bar\" data-mc-baz=\"baz\" alt=\"react\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/React.js_logo.svg/100px-React.js_logo.svg.png\" width={100} height={100} />\r\n          <A download={sourceURL} href={sourceURL}>Source code</A>\r\n        </Item>\r\n      </Box>\r\n    </Item>\r\n  </Email>\r\n)\r\n\r\nexport default async function submitEmail(){\r\n\r\n    const messageHtml =  renderEmail(email);\r\n    alert(messageHtml);\r\n    await axios.post('/addUser',{\r\n        userName: 'Fred',\r\n        userEmail:\"sosdfg728@naver.com\"\r\n    }).then((response)=>{\r\n                if (response.data.msg === 'success'){\r\n                    alert(\"Email sent, awesome!\"); \r\n                }else if(response.data.msg === 'fail'){\r\n                    alert(\"Oops, something went wrong. Try again\")\r\n                }\r\n            })\r\n        }\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Confirm from './confirmreq';\r\nimport submitEmail from './sendMail'\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'name' },\r\n  { id: 'id', numeric: true, disablePadding:  false, label: 'id' },\r\n  { id: 'grade', numeric: true, disablePadding: false, label: 'grade' },\r\n  { id: 'class', numeric: true, disablePadding: false, label: 'class' },\r\n  { id: 'todayAvg', numeric: true, disablePadding: false, label: 'today' },\r\n  { id: 'totalAvg', numeric: true, disablePadding: false, label: 'total' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\n\r\nconst checkeddelete = async(selectedid) =>{\r\n  selectedid.map(async(d,i)=>{\r\n    await API.graphql(graphqlOperation(graphql.deleteWordOrigin,{input: {id:d}})).then(data =>{\r\n      if(selectedid.length-1 ===i){\r\n        window.location.reload();\r\n        // NotificationManager.success('delete Success', `${selectedid[0]}이외 ${selectedid.length-1} 명이 삭제 되었습니다`,3000);\r\n      }\r\n      })\r\n  })\r\n}//보류 시바ㅅ거스ㅡ\r\n\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const {Selected} = props;\r\n  const {Selectedid} = props;\r\n  const num = props.Selected.length\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: num > 0,\r\n      })}\r\n    >\r\n      {num > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {num} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Students\r\n        </Typography>\r\n      )}\r\n\r\n      {num > 0 ? (\r\n        <Grid   container direction=\"row\" justify=\"flex-end\">\r\n        \r\n          <Grid item>\r\n          <Tooltip title=\"Delete\" placement=\"top-end\">\r\n              {/* <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd'}} onClick={()=>checkeddelete(Selectedid)}>\r\n                Delete\r\n              </Button> */}\r\n              <IconButton onClick={()=>checkeddelete(Selectedid)} aria-label=\"delete\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\" >\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\n// EnhancedTableToolbar.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [selectedid, setSelectedid] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const All = props.All;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = All.map(n => n.label);\r\n      const newSelectedsid = All.map(n => n.value);\r\n      setSelected(newSelecteds);\r\n      setSelectedid(newSelectedsid);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n    setSelectedid([]);\r\n  };\r\n\r\n  const handleClick = (event, name,id) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n\r\n\r\n    let newSelected = [];\r\n    let newSelectedid = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n      newSelectedid = newSelectedid.concat(selectedid, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n      newSelectedid = newSelectedid.concat(selectedid.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n      newSelectedid = newSelectedid.concat(selectedid.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n      newSelectedid = newSelectedid.concat(\r\n        selectedid.slice(0, selectedIndex),\r\n        selectedid.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n    setSelectedid(newSelectedid);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, All.length - page * rowsPerPage);\r\n\r\n  const total =props.total;\r\n  const today =props.today;\r\n  const grade = props.grade;\r\n  const aclass = props.class;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NotificationContainer/>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar Selectedid={selectedid} Selected={selected} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={All.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(All, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.label);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    if(grade.includes(row.grade) && row.todayAvg <= today&& row.totalAvg <= total && aclass.includes(row.class) ){\r\n                        return (\r\n                            <TableRow\r\n                              hover\r\n                              onClick={event => handleClick(event, row.label, row.value)}\r\n                              role=\"checkbox\"\r\n                              aria-checked={isItemSelected}\r\n                              tabIndex={-1}\r\n                              key={row.value}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                {row.label}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{row.value.split(\"-\")[0]}</TableCell>\r\n                              <TableCell align=\"right\">{row.grade}</TableCell>\r\n                              <TableCell align=\"right\">{row.class}</TableCell>\r\n                              <TableCell align=\"right\">{row.todayAvg}</TableCell>\r\n                              <TableCell align=\"right\">{row.totalAvg}</TableCell>\r\n                              </TableRow>\r\n                          );\r\n                    }\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={All.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component, Fragment } from 'react';\n// import Product from './Product';\nimport axios from \"axios\";\n// import CheckboxTree from 'react-checkbox-tree';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './utility/graphql';\nimport DetailedExpansionPanel from './utility/expansion';\nimport AddStudent from './utility/addstudent'\n\n\nimport AboutFunction from './utility/AboutFunction';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\n\n// import { Scrollbars } from 'react-custom-scrollbars';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport HandleTestRecord from './utility/addTestRecord'\nimport HandleHomework from './utility/addHomework';\n// import Slider from '@material-ui/core/Slider';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport EnhancedTable from './utility/tableview';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport * as academy from './auth/academyInfo';\nimport IconButton from '@material-ui/core/IconButton';\nconst config = require('../config.json');\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nexport default class Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      login:this.props.auth.isAuthenticated,\n\n      addchecked: [],\n      addexpanded: [], // tree view\n\n      deletechecked:[],\n      deleteexpended:[], // table view\n\n      value:0,\n      newproduct: null,\n      products: [],\n      checked: [],\n      expanded: [],\n      loading:true,\n      AllStu:null,\n      treeSet:null, date: new Date(),\n      All:null,\n\n      selectgrade:[],\n      selectclass:[],\n\n      todayfilter:100,\n      totalfilter:100,\n     };\n};\nhandleChange = (event, newValue) => {\n  this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\n}\n\na11yProps = (index) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nonChange = date => this.setState({ date })\n\n  fetchProducts = async () => {\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  _makestudenttree=(data)=>{\n    let AllStu = [];\n\n  \n    let treeSet = academy.info.grade.map((g)=>{\n      let classcomp = academy.info.class.map((c,i)=>{\n        return {value:`${c}${g}`,label:c,children:[]}\n      });\n     return {value:g,label:g,children:classcomp}\n   });\n\n     data.forEach((student,i)=>{\n        let temp =[];\n        let temptreeSet = JSON.parse(JSON.stringify(treeSet));\n       let nowGrade = student.grade;\n       let nowClass= student.class;\n       //react-checkbox-tree 양식에 맞도록 재가공\n       let TodayAssemble =[];\n       let AllAssemble = [];       \n\n   \n       if(student.record !== null){\n         temp = student.record.filter(item => \n           item.month === Number(new Date().getMonth())  && item.day === Number(new Date().getDate())\n         );\n         TodayAssemble=temp.map(data => {return data.etc});\n         \n         AllAssemble = student.record.map(item => {\n               return item.etc\n         });\n       }    \n       let Today =0;\n       let Total =0;\n       if(TodayAssemble.length >0){\n         Today =TodayAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/TodayAssemble.length;\n       }\n       if(AllAssemble.length>0){\n         Total =AllAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/AllAssemble.length;\n       }\n       let studentInfo = { \n         value: student.id , \n         grade: student.grade,\n         class:student.class,\n         label: student.name, \n         words:student.words, \n         todo:student.todo, \n         record:student.record,  \n         TodayAssemble:TodayAssemble,// 오늘 퍼센트 배열\n         AllAssemble:AllAssemble,//전체 퍼센트 배열\n         todayAvg:Math.round(Today),\n         totalAvg:Math.round(Total),\n         homework:student.homework,\n         test:student.test}\n      \n         let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\n       \n         let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\n\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\n        treeSet[gradeindex] = temptreeSet[gradeindex]\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\n           AllStu.push(studentInfo);   \n           // alert(JSON.stringify(treeSet))\n     })\n\n     treeSet.forEach((i,index)=>{\n       let temp = i.children.filter(j=>j.children.length!==0)    \n        treeSet[index].children =temp\n      })\n      treeSet= treeSet.filter(x=>x.children.length!==0);\n      this.setState({treeSet:treeSet,AllStu:AllStu,All:data,selectgrade:academy.info.grade,selectclass:academy.info.class});\n  }\n \n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{\n      this._makestudenttree(data.data.listMyTypes.items)\n      \n    })\n  }\n\n  componentDidMount = async() => {\n    await Promise.all([this._getStudentData()]).then((d)=>{\n      this.setState({loading:false})\n    }\n    )   \n  }\n\n  //selecter\n  handleChangeMultiplegrade = event => {\n    this.setState({selectgrade:event.target.value});\n    // alert(event.target.value)\n  };\n  handleChangeMultipleclass = event => {\n    this.setState({selectclass:event.target.value});\n    // alert(event.target.value)\n  };\n\n  //slider\n  valuetext=(value) =>{\n    return `${value}% 이하`;\n  }\n\n  handleSliderChange = (event, newValue) => {\n    // this.setState({Slider:Number(event.target.value)});\n   return newValue\n  };\n\n  \n\n  render() {\n    return (\n      <div>\n        {\n          this.state.loading?\n          <p>loading</p>\n          :\n        <Fragment>\n        \n        <div style={{height:70}}/>\n        <section style={{marginTop:-270,backgroundColor:'#fff'}} className=\"section\">\n        <div className=\"container\">\n        <h1 style={{color:'#5a69bf'}}>학생 데이터/관리</h1>\n        <p className=\"subtitle is-5\">학생들의 데이터를 확인하거나 등록/삭제를 할 수 있습니다.</p> \n        <br/><br/><br/><br/><br/><br/>\n        <div style={{float:'right'}}><AddStudent/></div>   \n        <div style={{float:'right'}}><HandleHomework/></div>   \n        <div style={{float:'right'}}><HandleTestRecord/></div>   \n        <Paper elevation={0} square>\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"table\" {...this.a11yProps(0)} />\n          <Tab label=\"tree\" {...this.a11yProps(1)} />\n        </Tabs>\n      </Paper>        \n        <br />\n        <TabPanel value={this.state.value} index={1}>\n          <div>\n          <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:30}} content={\"f\"}/>\n        <div style={{display:'flex',marginTop:30}}>\n          <div style={{width:\"30%\"}}>\n            {/* <div className=\"tile is-ancestor\">\n              <CheckboxTree\n              nodes={this.state.treeSet}\n              checked={this.state.checked}\n              expanded={this.state.expanded}\n              onCheck={checked => this.setState({ checked })}\n              onExpand={expanded => this.setState({ expanded })}\n              icons={{\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\n            }}\n          />             \n            </div> */}\n          </div>\n          <div  style={{width:750}}>\n\n            {\n              this.state.AllStu.map((student, i)=>{\n                if(this.state.checked.indexOf(student.value) !== -1){\n                  return(\n                    <DetailedExpansionPanel \n                      All={this.state.All} \n                      id={student.value} \n                      name={student.label} \n                      TodayAssemble={student.TodayAssemble}\n                      AllAssemble={student.AllAssemble}\n                      record={student.record}\n                      homework={student.homework}\n                      test={student.test}/>\n                  );// to utility/expansion  ->  calendar and editstudent\n                }\n                return \"\";\n              })\n            }\n\n          </div>   \n        </div>      \n        </div>          \n        </TabPanel>\n        <TabPanel value={this.state.value} index={0}> \n        <div>\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:30}} content={\"f\"}/>\n        <div style={{display:'flex',marginTop:30}}>\n          <div id=\"selecter\" style={{width:\"30%\"}}>\n            <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"demo-mutiple-chip-label\">반을 선택하세요</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-chip-label\"\n            id=\"demo-mutiple-chip\"\n            multiple\n            value={this.state.selectgrade}\n            onChange={event =>this.handleChangeMultiplegrade(event)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div>\n                {selected.map(value => (\n                  <Chip key={value} label={value} deleteIcon={<DoneIcon />}/>\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {academy.info.grade.map(grade => (\n              <MenuItem key={grade} value={grade}>\n                {grade}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n            </div>\n            <div id=\"selecter\" style={{width:\"30%\"}}>\n            <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"demo-mutiple-chip-label\">학년을 선택하세요</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-chip-label\"\n            id=\"demo-mutiple-chip\"\n            multiple\n            value={this.state.selectclass}\n            onChange={event =>this.handleChangeMultipleclass(event)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div>\n                {selected.map(value => (\n                  <Chip key={value} label={value} deleteIcon={<DoneIcon />}/>\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {academy.info.class.map(aclass => (\n              <MenuItem key={aclass} value={aclass}>\n                {aclass}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n            </div>\n            \n              <div style={{width:\"15%\",marginTop:20,marginLeft:30}}>\n              <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Total</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={this.state.todayfilter}\n              onChange={event=>this.setState({todayfilter:event.target.value})}\n              endAdornment={<InputAdornment position=\"end\">이하</InputAdornment>}\n              labelWidth={60}\n            />\n            </FormControl>\n              </div>\n              <div style={{width:\"15%\",marginTop:20,marginLeft:30}}>\n              <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Total</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={this.state.totalfilter}\n              onChange={event=>this.setState({totalfilter:event.target.value})}\n              endAdornment={<InputAdornment position=\"end\">이하</InputAdornment>}\n              labelWidth={60}\n            />\n            </FormControl>\n              </div>\n            <div id=\"slider\" style={{marginTop:10,marginLeft:30}}>\n            <IconButton onClick={()=>this.setState({Slider:this.state.Slider2})}  aria-label=\"search\">\n              <PageviewIcon fontSize=\"large\" style={{ color: '#5a69bf' }}/>\n            </IconButton>\n            </div>\n          </div>\n          <EnhancedTable \n            grade={this.state.selectgrade}\n            class={this.state.selectclass}\n            total={this.state.totalfilter}\n            today={this.state.todayfilter}\n            All={this.state.AllStu}/>\n             {/*to utility/Tableview  */}\n             </div>\n        </TabPanel>        \n      </div>  \n\n      {/* :<p>xxxxxxxxxx</p>} */}\n         \n        </section>\n      </Fragment>\n        }\n      </div>\n      \n    )\n  }\n}\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-prevent-tabpanel-${index}`}\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}","import React from 'react'\nimport {API, graphqlOperation,Storage } from 'aws-amplify';\nimport Products from './Products'\n\nconst query=`\nquery list{\n  listMyTypes(filter:{type:{contains:\"word\"}}){\n    items{\n      id type name grade percentage words\n    }\n  }\n}\n`\n\n\nconst Checkbox = ({ type = 'checkbox', name, checked = false, onChange }) => (\n  <input style={{display:'none'}} type={type} name={name} checked={checked} onChange={onChange} />\n);\n\nexport default class ProductAdmin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkedItems: new Map(),\n      checkboxes:[]\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = e.target.name;\n    const isChecked = e.target.checked; \n\n    this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n  }\n\n\n  callChecked=()=>{\n    let checkedlist =[];\n    this.state.checkedItems.forEach((value,key)=>{\n      if(value === true){\n        checkedlist.push(key);\n      }\n     });\n     alert(checkedlist);\n  }\n\n\n  componentDidMount = async() => {\n    await API.graphql(graphqlOperation(query)).then(data =>{\n      let tempBox = [];\n      data.data.listMyTypes.items.map((comp,i)=>{\n        // alert(JSON.stringify(comp))\n        let groupComp ={\n          name: comp.name,\n          key: comp.name,\n          label: comp.name\n        }\n        tempBox.push(groupComp);\n    })\n    this.setState({checkboxes:tempBox})\n    Storage.put('test.txt', 'Hello')\n    .then (result => console.log(result)) // {key: \"test.txt\"}\n    .catch(err => console.log(err));\n    return \"\";  \n  })\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div style={{display:'flex'}}>\n\n        {\n         this.state.checkboxes.map(item => (\n            <label key={item.key}>\n              <div style={{backgroundColor:this.state.checkedItems.get(item.name)?\"red\":\"blue\", margin:10}} >{item.name}</div>\n              <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleChange} />\n            </label>\n          ))\n        }\n        </div>\n        <Products/>\n      </React.Fragment>\n    );\n  }\n}","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\nimport Paper from '@material-ui/core/Paper';\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\");\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <div style={{backgroundColor:'#fff'}}>\n      <div style={{height:150}}/>\n      <section className=\"section auth\">\n        <div style={{display:'flex'}}  className=\"container\">\n          <div style={{width:'50%'}}>\n            <img src=\"secure.jpg\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\n          \n          </div>\n       \n          <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\n          <form onSubmit={this.handleSubmit}>\n            <h1>Login</h1>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>User ID</p>\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>Password</p>\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <FormErrors formerrors={this.state.errors} />\n                <button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </Paper>\n        </div>\n      </section>\n      <div style={{height:150}}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\nimport Paper from '@material-ui/core/Paper';\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: email\n        }\n      });\n      this.props.history.push(\"/welcome\");\n      console.log(signUpResponse);\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n\n<div style={{backgroundColor:'#fff'}}>\n<div style={{height:150}}/>\n<section className=\"section auth\">\n  <div style={{display:'flex'}}  className=\"container\">\n    <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\n    <form onSubmit={this.handleSubmit}>\n      <h1>Register</h1>\n      <div className=\"field\">\n        <p style={{width:400}} className=\"control\">\n        <p>Name</p>\n          <input \n            className=\"input\" \n            type=\"text\"\n            id=\"username\"\n            aria-describedby=\"userNameHelp\"\n            placeholder=\"Enter username\"\n            value={this.state.username}\n            onChange={this.onInputChange}\n          />\n        </p>\n      </div>\n      <div className=\"field\">\n        <p style={{width:400}} className=\"control\">\n          <p>Email</p>\n          <input \n           className=\"input\" \n           type=\"email\"\n           id=\"email\"\n           aria-describedby=\"emailHelp\"\n           placeholder=\"Enter email\"\n           value={this.state.email}\n           onChange={this.onInputChange}\n          />\n        </p>\n      </div>\n      <div className=\"field\">\n        <p style={{width:400}} className=\"control has-icons-left\">\n          <p>Password</p>\n          <input \n            className=\"input\" \n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.onInputChange}\n          />\n        </p>\n      </div>\n      <div className=\"field\">\n        <p style={{width:400}} className=\"control has-icons-left\">\n          <p>Confirm Password</p>\n          <input \n            className=\"input\" \n            type=\"password\"\n            id=\"confirmpassword\"\n            placeholder=\"Confirm password\"\n            value={this.state.confirmpassword}\n            onChange={this.onInputChange}\n          />\n        </p>\n      </div>\n      <div className=\"field\">\n        <p className=\"control\">\n          <FormErrors formerrors={this.state.errors} />\n          <button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\n            Register\n          </button>\n        </p>\n      </div>\n    </form>\n  </Paper>\n  <div style={{width:'50%',marginLeft:30}}>\n      <img src=\"art.png\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\n    </div>\n  </div>\n</section>\n<div style={{height:150}}/>\n\n</div>\n    );\n  }\n}\n\nexport default Register;\n\n\n ","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  }\n\n  forgotPasswordHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Forgot your password?</h1>\n          <p>\n            Please enter the email address associated with your account and we'll\n            email you a password reset link.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.forgotPasswordHandler}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\n\nclass ForgotPasswordVerification extends Component {\n  state = {\n    verificationcode: \"\",\n    email: \"\",\n    newpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  passwordVerificationHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Set new password</h1>\n          <p>\n            Please enter the verification code sent to your email address below,\n            your email address and a new password.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.passwordVerificationHandler}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationCodeHelp\"\n                  placeholder=\"Enter verification code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\n\nclass ChangePassword extends Component {\n  state = {\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"oldpassword\"\n                  placeholder=\"Old password\"\n                  value={this.state.oldpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePassword;","import React, { Component } from \"react\";\n\nclass ChangePasswordConfirmation extends Component {\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <p>Your password has been successfully updated!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePasswordConfirmation;","import React from 'react';\n\nexport default function Welcome() {\n  return (\n    <section style={{backgroundColor:'#fff',height:800}} className=\"section auth\">\n      <div style={{textAlign:'center'}}>\n        <img src=\"mail.jpg\" width=\"400\" height=\"400\" alt=\"hexal logo\" />\n        <h1>Welcome!</h1>\n        <p>You have successfully registered a new account.</p>\n        <p>We've sent you a email. Please click on the confirmation link to verify your account.</p>\n      </div>\n    </section>\n  )\n}\n","import React, { Component, Fragment } from 'react';\r\nimport axios from \"axios\";\r\n// import CheckboxTree from 'react-checkbox-tree';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport MaterialTable from 'material-table';\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {CSVLink} from \"react-csv\";\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport * as academy from './auth/academyInfo'\r\n\r\nconst config = require('../config.json');\r\n\r\nconst steptitle =[\r\n    '어떠한 작업을 하시겠습니까?', \r\n    '대상 학생을 선택해주세요', \r\n    '엑셀파일을 다운로드 받으세요.',\r\n    '다운받은 파일을 다음과 같은 형식으로 작성하신 후, 아래의 버튼을 눌러 업로드 해주세요'\r\n]\r\n\r\nexport default class CsvTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      value:1,  \r\n      newproduct: null,\r\n      tablevalue: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],activeStep:0,\r\n      type:\"숙제\",\r\n      filename:'filename'\r\n     };\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectATtree=(w)=>{\r\n      let tablevalue=[]\r\n    this.state.AllStu.forEach(i=>{\r\n        w.forEach(j=>{\r\n            if(i.value === j){\r\n                tablevalue.push(i)\r\n            }\r\n        })\r\n    })\r\n\r\n    tablevalue=tablevalue.map(x=>{\r\n        return {name:x.label,id:x.value}\r\n    })\r\n\r\n    let csv=null\r\n    if(this.state.type ===\"숙제\"){\r\n        csv =[\r\n            ['name', 'id','homework','asignment','done','month','day']\r\n          ];\r\n    }else{\r\n        csv =[\r\n            ['name', 'id','test','score','month','day']\r\n        ];\r\n    }\r\n\r\n    tablevalue.forEach(x=>{\r\n        let temp = [];\r\n        temp.push(x.name)\r\n        temp.push(x.id)\r\n        csv.push(temp);\r\n    })  \r\n    this.setState({csv:csv,tablevalue:tablevalue,deletechecked:w})\r\n  }\r\n\r\n  handleRadioChange = event => {\r\n    this.setState({type:event.target.value})\r\n  };\r\n  handleFileNameChange = event => {\r\n    this.setState({filename:event.target.value});\r\n  };\r\n\r\n  handleNext = () => {\r\n    this.setState({activeStep:this.state.activeStep+1})\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState({activeStep:this.state.activeStep-1})\r\n  };\r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n      <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n        {steptitle.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n                <div>\r\n                    {index===0&&\r\n                        <div style={{width:400}}>\r\n                            <FormControlLabel\r\n                                value=\"숙제\"\r\n                                control={<Radio\r\n                                color=\"default\"\r\n                                    checked={this.state.type === '숙제'}\r\n                                    onChange={this.handleRadioChange}\r\n                                />}\r\n                                label=\"숙제결과 입력\"\r\n                                labelPlacement=\"End\"\r\n                                />\r\n                             <FormControlLabel\r\n                                value=\"시험\"\r\n                                control={<Radio\r\n                                color=\"default\"\r\n                                    checked={this.state.type === '시험'}\r\n                                    onChange={this.handleRadioChange}\r\n                                />}\r\n                                label=\"시험결과 입력\"\r\n                                labelPlacement=\"End\"\r\n                                />     \r\n                                \r\n                          \r\n                        </div>\r\n                    }\r\n                    {index===1&&\r\n                    <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n                        <div style={{width:\"30%\"}}>\r\n                            <div className=\"tile is-ancestor\">\r\n                                {/* <CheckboxTree\r\n                                nodes={this.state.treeSet}\r\n                                checked={this.state.deletechecked}\r\n                                expanded={this.state.deleteexpanded}\r\n                                onCheck={checked => this.selectATtree(checked)}\r\n                                onExpand={expanded => this.setState({ deleteexpanded:expanded })}\r\n                                icons={{\r\n                                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n                            }}\r\n                            />              */}\r\n                            </div>\r\n                        </div>\r\n                        <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                            <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                            <MakeCsvPage tablevalue={this.state.tablevalue}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n                    {index===2&&\r\n                        <div style={{height:150}}>\r\n                           <TextField\r\n                                value={this.state.filename}\r\n                                onChange={this.handleFileNameChange}\r\n                                type=\"text\"\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                            />\r\n                           <CSVLink filename={`${this.state.filename}.csv`} data={this.state.csv}>\r\n                           <Button variant=\"contained\" color=\"primary\" startIcon={<img src=\"spreadsheet.png\" width=\"20\" height=\"20\" alt=\"spreadsheet\"/>}>download</Button>\r\n                            </CSVLink>\r\n                        </div>\r\n                    }\r\n                           \r\n                </div>\r\n              <div>\r\n                <div>\r\n                  <Button\r\n                    disabled={this.state.activeStep === 0}\r\n                    onClick={this.handleBack}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleNext}\r\n                  >\r\n                    {this.state.activeStep === steptitle.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n       \r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nfunction MakeCsvPage(props) {\r\n    const [state, setState] = React.useState({\r\n      columns: [\r\n        { title: 'name', field: 'name' },\r\n        { title: 'full ID', field: 'id' },\r\n      ],\r\n    });\r\n\r\n    // 'homework','assignment','done','month','day'\r\n\r\n    return (\r\n        <div>\r\n      <MaterialTable\r\n        title=\"Select\"\r\n        columns={state.columns}\r\n        data={props.tablevalue }\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n\r\n","import React, { Component, Fragment, useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n// import CheckboxTree from 'react-checkbox-tree';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport DateRangePicker from \"react-daterange-picker\";\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport originalMoment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DeleteListComp from './utility/deleteListComp'\r\nimport * as academy from './auth/academyInfo'\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport ControlledTreeView from './utility/treeview'\r\n\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\n\r\nconst config = require('../config.json');\r\nconst moment = extendMoment(originalMoment);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default class WordSetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const today = moment();\r\n    this.state = { \r\n      value:0,  \r\n      newproduct: null,\r\n      products: [],\r\n      \r\n      addchecked: [],\r\n      addexpanded: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],\r\n      selectedWord:[],\r\n      AddOrDelete:true,\r\n      select:[],\r\n      calendarValue: moment.range(today.clone().subtract(1, \"days\"), today.clone())//calendar\r\n     };\r\n     this.getTree = this.getTree.bind(this)\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n\r\n\r\n  csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    let name = sender.target.files[0].name\r\n\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            let e = new File([JSON.stringify(result)], name.replace('.csv','.json'), {type: \"application/json\"})\r\n            this.handleFileInput(e);\r\n            // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\r\n            // var dlAnchorElem = document.createElement('a');\r\n            // dlAnchorElem.setAttribute(\"href\",dataStr);\r\n            // dlAnchorElem.setAttribute(\"download\", \"newworkbook.json\");\r\n            // dlAnchorElem.click();\r\n  }\r\n}\r\n  // ▽\r\n  handleFileInput =async(e)=>{\r\n      await S3.uploadFile(e, {\r\n          bucketName: config.S3.bucketName,\r\n          dirName:config.S3.dirName,\r\n          region: config.S3.region,\r\n          accessKeyId: config.S3.accessKeyId,\r\n          secretAccessKey: config.S3.secretAccessKey,\r\n      }).then( d =>{\r\n          this.SaveWords(d);\r\n        }).catch(err =>alert(err));\r\n  }\r\n  // ▽       \r\n\r\n  SaveWords = async(tempD)=>{\r\n    const input_query={\r\n      id: Math.random().toString(36).substring(7),\r\n      type: \"word\",\r\n      name: tempD.key.replace(`${config.S3.dirName}/`,\"\"),\r\n      grade:null, // haveto\r\n      link: tempD.location,\r\n      address:null,\r\n      deleted:false\r\n    };\r\n    // alert(JSON.stringify(input_query))\r\n    NotificationManager.success('Upload Success', '단어장을 저장하였습니다',3000); \r\n    await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(()=>\r\n      this._getWordData()\r\n    );\r\n  }\r\n  // ▽\r\n  _getWordData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCword)).then(data =>{\r\n   \r\n    let tt = data.data.listMyTypes.items.filter(x=> x.deleted === null || x.deleted ===false);\r\n    // alert(JSON.stringify(tt))\r\n      this.setState({wordSet:tt})\r\n    })\r\n  }\r\n \r\n\r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n    let renderTree=[];\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  getTree =(value)=>{\r\n    alert(value)\r\n  }\r\n\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectWord=(w)=>{\r\n        if(this.state.selectedWord.includes(w) === false){\r\n            this.setState({\r\n                selectedWord: [...this.state.selectedWord, w]\r\n            });\r\n        }else{\r\n            this.setState({selectedWord: this.state.selectedWord.filter(function(word) { \r\n                return word !== w\r\n            })});\r\n        }  \r\n  }\r\n\r\n  addSendData = () =>{\r\n    \r\n    this.state.AllStu.map((student, i)=>{    \r\n        if(this.state.addchecked.indexOf(student.value) !== -1){ \r\n\r\n              let wordset = this.state.wordSet\r\n\r\n            this.state.select.map(async(sw,i)=>{//선택된 단어장\r\n\r\n \r\n                let temp = student.words!==null?student.words.findIndex(x => x.label === sw):-2\r\n                let temp2 = this.state.wordSet.findIndex(x => x.name === sw)\r\n\r\n              if(temp!==-1&&temp!==-2){\r\n                    NotificationManager.warning('Upload Failed', `${student.label}이 이미 ${sw}을 가지고 있습니다.`,3000);\r\n                    return \"\";\r\n                }\r\n              else if(temp2 !== -1){\r\n\r\n                  wordset[temp2].haveto = this.state.haveto;\r\n                  wordset[temp2].due = `${this.state.calendarValue.start.format(\"YYYY-MM-DD\")}/${this.state.calendarValue.end.format(\"YYYY-MM-DD\")}`\r\n                  const ass = temp===-2?[wordset[temp2]]:student.words.concat(wordset[temp2])\r\n\r\n                  const input_query={\r\n                    id: student.value,\r\n                    words: ass,\r\n                  };\r\n\r\n                await API.graphql(graphqlOperation(graphql.updateWord, {input: input_query})).then(data =>{\r\n                     NotificationManager.success('Upload Success', `${student.label}에게 ${sw}을 업로드 하였습니다.`,3000);\r\n                })\r\n                }else return 0\r\n              })\r\n\r\n        }else return 0;\r\n    })\r\n  }\r\n  \r\n  oncalendarSelect = (calendarValue, states) => {\r\n    this.setState({ calendarValue, states });\r\n  };//calendar\r\n\r\n\r\n\r\n  renderSelectionValue = () => {\r\n    return (\r\n      <div style={{padding:25}}>\r\n        <div id=\"calendar\" style={{display:'flex'}}>\r\n          <strong>Start    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.start.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n        <div style={{display:'flex'}}>\r\n          <strong>End    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.end.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };//calendar\r\n\r\n  \r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData(), this._getWordData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n  handleChangeMultiple = event => {\r\n    // alert(event.target.value)\r\n    this.setState({select:event.target.value});\r\n  };\r\n\r\n  handleHavetoChange = event => {\r\n    this.setState({haveto:event.target.value});\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n\r\n       \r\n\r\n      <Paper elevation={0} position=\"static\">\r\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"단어장 추가\" {...this.a11yProps(0)} />\r\n          <Tab label=\"단어장 삭제\" {...this.a11yProps(1)} />\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={this.state.value} index={0}>\r\n        <div>\r\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex'}}>\r\n\r\n        <ControlledTreeView passChildData={this.getTree} />\r\n            <div style={{width:\"30%\"}}>\r\n\r\n\r\n            <div style={{marginBottom:50,display:'flex'}}>\r\n            <div style={{marginTop:15}}>\r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\"  name=\"file\" onChange={e => this.csvTojson(e)} accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  +\r\n                </Button>\r\n              </label>\r\n            </div>\r\n            \r\n            <div id=\"selecter\" style={{width:\"50%\",marginLeft:10}}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel id=\"demo-mutiple-chip-label\">select</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-chip-label\"\r\n            id=\"demo-mutiple-chip\"\r\n            multiple\r\n            value={this.state.select}\r\n            onChange={event =>this.handleChangeMultiple(event)}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            renderValue={selected => (\r\n              <div>\r\n                {\r\n                selected.map((w,i) => (\r\n                   <Chip\r\n                   key={i}\r\n                   label={w.replace('.json','')}\r\n                 />\r\n                ))\r\n                }\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >{this.state.wordSet.map(w => (\r\n            <MenuItem key={w.id} value={w.name}>\r\n              {w.name.replace('.json','')}\r\n            </MenuItem>\r\n          ))}\r\n          </Select>\r\n        </FormControl>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                {/* <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.addchecked}\r\n                expanded={this.state.addexpanded}\r\n                onCheck={checked =>{ this.setState({ addchecked:checked })}}\r\n                onExpand={expanded =>{ this.setState({ addexpanded:expanded })} }\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />              */}\r\n             <TreeView\r\n              defaultCollapseIcon={<ExpandMoreIcon />}\r\n              defaultExpandIcon={<ChevronRightIcon />}\r\n              expanded={this.state.addexpanded}\r\n              selected={this.state.addchecked}\r\n              onNodeToggle={(event, nodeIds) =>{ this.setState({ addexpanded:nodeIds })} }\r\n              onNodeSelect={(event, nodeIds) =>{ this.setState({ addchecked:nodeIds })}}\r\n              multiSelect\r\n            >\r\n              <TreeItem nodeId=\"1\" label=\"Applications\">\r\n                <TreeItem nodeId=\"2\" label=\"Calendar\" />\r\n                <TreeItem nodeId=\"3\" label=\"Chrome\" />\r\n                <TreeItem nodeId=\"4\" label=\"Webstorm\" />\r\n              </TreeItem>\r\n              <TreeItem nodeId=\"5\" label=\"Documents\">\r\n                <TreeItem nodeId=\"6\" label=\"Material-UI\">\r\n                  <TreeItem nodeId=\"7\" label=\"src\">\r\n                    <TreeItem nodeId=\"8\" label=\"index.js\" />\r\n                    <TreeItem nodeId=\"9\" label=\"tree-view.js\" />\r\n                  </TreeItem>\r\n                </TreeItem>\r\n              </TreeItem>\r\n            </TreeView>\r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"100%\",display:'flex'}} >\r\n              <div style={{marginRight:100}}>\r\n\r\n                <div>\r\n                  <strong>WordBook</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                     {//if selected, print that\r\n                          this.state.select.map((word,i)=>{\r\n                            return(\r\n                              <Chip\r\n                                style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                key={word}\r\n                                label={word.replace('.json','')}\r\n                              />\r\n                            );\r\n                        })\r\n                    }\r\n                  </Scrollbars>\r\n                  \r\n                </div>\r\n\r\n                <div>\r\n                  <strong>Students</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                  {\r\n                      this.state.AllStu.map((student, i)=>{    \r\n                          if(this.state.addchecked.indexOf(student.value) !== -1){\r\n                              return(\r\n                                <Chip\r\n                                  style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                  key={student.label}\r\n                                  label={student.label}\r\n                                />\r\n                          );\r\n                          }\r\n                          return \"\";\r\n                      })\r\n                      }\r\n                  </Scrollbars>\r\n                  \r\n                </div> \r\n\r\n                <div style={{ height: 80,width: 300}}>\r\n                  <strong>Have to</strong>\r\n                  <div>\r\n                      <TextField\r\n                        value={this.state.haveto}\r\n                        onChange={this.handleHavetoChange}\r\n                        id=\"outlined-number\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n\r\n                </div>  \r\n                <div>\r\n                  <div>{this.renderSelectionValue()}</div>\r\n                  <div>\r\n                    <DateRangePicker\r\n                      value={this.state.calendarValue}\r\n                      onSelect={this.oncalendarSelect}\r\n                      singleDateRange={true}\r\n                    />\r\n                  \r\n                </div>\r\n                <div>\r\n                        <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:300}} onClick={()=>{this.addSendData()}}>\r\n                            send\r\n                        </Button>\r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n      <TabPanel value={this.state.value} index={1}>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n\r\n            <div style={{width:\"30%\"}}>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                {/* <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.deletechecked}\r\n                expanded={this.state.deleteexpanded}\r\n                onCheck={checked => this.setState({ deletechecked:checked })}\r\n                onExpand={expanded => this.setState({ deleteexpanded:expanded })}\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />              */}\r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                    <CommonWordsView wordSet={this.state.wordSet} allstu={this.state.AllStu} deletechecked={this.state.deletechecked}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n\r\n        </div>\r\n       \r\n\r\n\r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CommonWordsView(props) {\r\n    let CommonWords = [];\r\n    let commonWords_id =[];\r\n\r\n    props.allstu.map((student, i)=>{                            \r\n        if(props.deletechecked.indexOf(student.value) !== -1){\r\n            if(student.words !== null){\r\n            student.words.map((perword,i)=>{\r\n              if(props.wordSet.findIndex(x=>x.id===perword.id)!==-1){ //delete되지 않은 단어인가?  맞다       \r\n                if(CommonWords.length >0){//맨 처음 push하는 것인가? 아니다\r\n                    CommonWords.map((c,i)=>{\r\n                        \r\n                          if(c.id === perword.id){ // 해당 단어장이 이미 있는가? 없다\r\n                            CommonWords[i].common.push({name:student.label, id:student.value})\r\n                            }\r\n                            else if(commonWords_id.includes(perword.id)===false){// 해당 단어장이 이미 있는가? 있다\r\n                                CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                                commonWords_id.push(perword.id);\r\n                            } \r\n                        \r\n                    })\r\n                }else if(CommonWords.length === 0){//맨 처음 push하는 것인가? 맞다\r\n                    CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                    commonWords_id.push(perword.id);\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n    })\r\n    \r\n    return (\r\n      <Scrollbars style={{height:500}}>\r\n          <div style={{width:\"80%\"}}><DeleteListComp commonWords_id={commonWords_id} CommonWords={CommonWords}/></div>\r\n      </Scrollbars>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n","import React, { Component } from 'react';\r\nimport FormErrors from \"./FormErrors\";\r\nimport Validate from \"./utility/FormValidation\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './utility/graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport moment from 'moment'\r\n\r\nexport default class Sample extends Component {\r\n  state = {\r\n    username: \"\",\r\n    company: \"\",\r\n    key:\"\",\r\n    errors: {\r\n      cognito: null,\r\n      blankfield: false\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  generateRandom = (min, max) =>{\r\n    var ranNum = Math.floor(Math.random()*(max-min+1)) + min;\r\n    return ranNum;\r\n  }\r\n\r\n  handleFileInput =(e)=>{ //multiple\r\n\r\n    let input_query =[]\r\n    let due = `${moment().format('YYYY-MM-DD')}/${moment().add(7, 'day').format('YYYY-MM-DD')}`\r\n\r\n        let record = [];\r\n        let nowMonth = Number(moment().format('MM'));\r\n        let nowDay = Number(moment().format('DD'));\r\n        for(let i=0;i<40;i++){\r\n            const d = Number(moment().subtract(i, 'day').format('DD'))\r\n            if(d>nowDay){\r\n                nowMonth = nowMonth -1\r\n            }\r\n\r\n              record.push({\r\n                id:Math.random().toString(36).substring(7),\r\n                bookid:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n                month:nowMonth,\r\n                day: d,\r\n                words:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n                etc:this.generateRandom(0, 99)\r\n              },{\r\n                id:Math.random().toString(36).substring(7),\r\n                bookid:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n                month:nowMonth,\r\n                day: d,\r\n                words:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n                etc:this.generateRandom(0, 99)\r\n              });\r\n            \r\n              nowDay = d\r\n        }\r\n\r\n        input_query.push({\r\n            id: Math.random().toString(36).substring(7),\r\n            type: \"sample\",\r\n            name: this.state.username,\r\n            address:this.state.company,\r\n            words:[{\r\n              id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n              name:\"2020 VOCA.json\",\r\n              link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n              haveto:100,\r\n              due: due\r\n          },{\r\n            id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n            name:\"2020 VOCA2.json\",\r\n            link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n            haveto:100,\r\n            due: due\r\n        }],\r\n           record:record\r\n          });\r\n          \r\n          input_query.forEach(async(query,i) =>{\r\n            await API.graphql(graphqlOperation(graphql.createStudent3, {input: query})).then(result=>{\r\n              let temp =result.data.createMyType.id;\r\n              this.setState({key:temp.split(\"-\")[0]})\r\n            })\r\n          })\r\n}\r\n\r\n\r\n  clearErrorState = () => {\r\n    this.setState({\r\n      errors: {\r\n        cognito: null,\r\n        blankfield: false\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    // Form validation\r\n    this.clearErrorState();\r\n    const error = Validate(event, this.state);\r\n    if (error) {\r\n      this.setState({\r\n        errors: { ...this.state.errors, ...error }\r\n      });\r\n    }\r\n\r\n    // AWS Cognito integration here\r\n    try {\r\n      const user = await Auth.signIn(this.state.username, this.state.password);\r\n      console.log(user);\r\n      this.props.auth.setAuthStatus(true);\r\n      this.props.auth.setUser(user);\r\n      this.props.history.push(\"/\");\r\n    }catch(error) {\r\n      let err = null;\r\n      !error.message ? err = { \"message\": error } : err = error;\r\n      this.setState({\r\n        errors: {\r\n          ...this.state.errors,\r\n          cognito: err\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{backgroundColor:'#fff'}}>\r\n          <NotificationContainer/>\r\n      <div style={{height:150}}/>\r\n      <section className=\"section auth\">\r\n        <div style={{display:'flex'}}  className=\"container\">\r\n          <div style={{width:'50%'}}>\r\n            <img src=\"secure.jpg\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\r\n          \r\n          </div>\r\n       \r\n          <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\r\n            <h1>Get Sample!</h1>\r\n            <div style={{width:\"70%\"}}>\r\n                <TextField\r\n                fullWidth\r\n                style={{ margin: 8 }}\r\n                id=\"company\"\r\n                label=\"Company Name\"\r\n                type=\"text\"\r\n                value={this.state.password}\r\n                onChange={this.onInputChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}/>\r\n            </div>\r\n            <div style={{width:\"70%\"}}>\r\n                <TextField\r\n                fullWidth\r\n                style={{ margin: 8 }}\r\n                id=\"username\"\r\n                label=\"User Name\"\r\n                type=\"text\"\r\n                value={this.state.username}\r\n                onChange={this.onInputChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                />\r\n\r\n                <Button onClick={() => { this.handleFileInput(); }} style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\r\n                    get Key\r\n                </Button>\r\n                <div>\r\n                    <p>{`key: ${this.state.key}`}</p>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n        </div>\r\n      </section>\r\n      <div style={{height:150}}/>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport moment from 'moment'\r\nconst Nexmo = require('nexmo');\r\nconst nexmo = new Nexmo({\r\n  apiKey: '954aa91e',\r\n  apiSecret: 'uVGSbCKUeetd59Lj',\r\n});\r\n\r\nconst from = 'Nexmo';\r\nconst to = '821045261396';\r\nconst text = 'Hello from Nexmo';\r\n\r\nexport default function MultiAddStudent() {\r\n\r\n      const generateRandom = (min, max) =>{\r\n        var ranNum = Math.floor(Math.random()*(max-min+1)) + min;\r\n        return ranNum;\r\n      }\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n                    if(lines[0] ===\"name,grade,class\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,grade,class`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n\r\n      const handleFileInput =(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n            let input_query =[]\r\n            res.forEach((man,i)=>{\r\n                \r\n                let record = [];\r\n                let nowMonth = Number(moment().format('MM'));\r\n                let nowDay = Number(moment().format('DD'));\r\n                for(let i=0;i<40;i++){\r\n                    const d = Number(moment().subtract(i, 'day').format('DD'))\r\n                    if(d>nowDay){\r\n                        nowMonth = nowMonth -1\r\n                    }\r\n                    if(i>20){\r\n                      record.push({\r\n                        id:Math.random().toString(36).substring(7),\r\n                        bookid:\"4691a31b-b7e7-4bdf-b0f0-15c8731eef74\",\r\n                        month:nowMonth,\r\n                        day: d,\r\n                        words:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n                        etc:generateRandom(0, 99)\r\n                      }\r\n                      );\r\n                    }else{\r\n                      record.push({\r\n                        id:Math.random().toString(36).substring(7),\r\n                        bookid:\"aa3c5394-1161-4496-adb5-17cada2786d8\",\r\n                        month:nowMonth,\r\n                        day: d,\r\n                        words:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n                        etc:generateRandom(0, 99)\r\n                      }\r\n                      );\r\n                    }\r\n                      nowDay = d\r\n                }\r\n\r\n                input_query.push({\r\n                    id: Math.random().toString(36).substring(7),\r\n                    type: \"student\",\r\n                    name: man.name,\r\n                    grade:man.grade,\r\n                    class:man.class,\r\n                    words:[{\r\n                      id:\"4691a31b-b7e7-4bdf-b0f0-15c8731eef74\",\r\n                      name:\"2020 VOCA2.json\",\r\n                      link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n                      haveto:100,\r\n                      due: \"2020-03-10/2020-03-17\"\r\n                  },{\r\n                    id:\"aa3c5394-1161-4496-adb5-17cada2786d8\",\r\n                    name:\"2020 VOCA.json\",\r\n                    link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n                    haveto:120,\r\n                    due: \"2020-03-07/2020-03-15\"\r\n                }],\r\n                   record:record \r\n                  });\r\n              \r\n                  // API.graphql(graphqlOperation(graphql.createStudent, {input: input_query}))\r\n          });\r\n\r\n          input_query.forEach(async(query,i) =>{\r\n            await API.graphql(graphqlOperation(graphql.createStudent, {input: query})).then(result=>{\r\n              if(input_query.length-1===i){\r\n                NotificationManager.success('Upload Success', `${input_query[0].name} 이외 ${input_query.length}명이 저장 되었습니다.`,3000);  \r\n              }\r\n            })\r\n          })\r\n          window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n            <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\" onChange={csvTojson}  name=\"file\" accept=\".csv\"/>\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                      Multiple\r\n                    </Button>\r\n                  </label>\r\n                  \r\n        </div>\r\n      );\r\n\r\n}","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer id=\"footer\" class=\"footer-1\">\n    <div class=\"main-footer widgets-dark typo-light\">\n    <div class=\"container\">\n    <div style={{display:'flex'}}>\n      \n      <div align=\"center\" style={{width:\"20%\"}}>\n        <img  src=\"NEWLOGO2.png\" width=\"50\" height=\"50\" alt=\"home\"/>\n      </div>\n    \n      <div align=\"center\" style={{width:\"60%\"}}>\n        <div class=\"widget no-box\">\n        <h5>회사소개 / 이용약관 / 개인정보취급방침 / 제휴문의</h5>\n        <ul class=\"thumbnail-widget\">\n        <li>\n        <div >\n          <h5>(우) 08378 서울특별시 구로구 디지털로34길 27 대륭포스트타워3차 1004호, 1005호 대표이사 : 정현진</h5>\n          <h5>사업자등록번호 : 220-81-51475 통신판매업 : 제 1684호</h5>\n        </div>\t\n        </li>\n        <li>\n        <div>\n          <h5>문의전화 : 010-4526-1396 (평일 : 10:00~19:00) E-Mail : realhustlecoder@gmail.com</h5>\n        </div>\t\n        </li>\n        <li>\n        <div><h5>ⓒ NextStepLab.</h5></div>\t\n        </li>\n        </ul>\n        </div>\n      </div>\n    \n  \n    \n      <div align=\"center\" style={{width:\"20%\"}}>\n      \n      <div class=\"widget no-box\">\n      <h5 class=\"widget-title\">Contact Us<span></span></h5>\n      \n      <p><a href=\"mailto:info@domain.com\" title=\"glorythemes\">info@domain.com</a></p>\n      <ul class=\"social-footer2\">\n      <li class=\"\"><a title=\"youtube\" target=\"_blank\" href=\"https://www.youtube.com/\"> <img src=\"home-run.png\" width=\"28\" height=\"28\" alt=\"home\"/></a></li>\n      </ul>\n      </div>\n      </div>\n    \n    </div>\n    </div>\n    </div>\n\n    </footer>\n  )\n}\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Chart,\r\n    BarSeries,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\n  import { Animation } from '@devexpress/dx-react-chart';\r\n  import { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\n  import List from '@material-ui/core/List';\r\n  import ListItem from '@material-ui/core/ListItem';\r\n  import ListItemText from '@material-ui/core/ListItemText';\r\n  import Switch from '@material-ui/core/Switch';\r\n  import Tabs from '@material-ui/core/Tabs';\r\n  import Tab from '@material-ui/core/Tab';\r\n  import Typography from '@material-ui/core/Typography';\r\n  import Box from '@material-ui/core/Box';\r\n  import ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n  import Avatar from '@material-ui/core/Avatar';\r\n  import AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n  import {API, graphqlOperation } from 'aws-amplify';\r\n  import * as graphql from './utility/graphql';\r\n  import * as academyinfo from './auth/academyInfo'\r\n  import moment from 'moment'\r\n  import { withStyles,createStyles } from '@material-ui/core/styles';\r\n  import FormGroup from '@material-ui/core/FormGroup';\r\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n  import Divider from '@material-ui/core/Divider';\r\n  import Button from '@material-ui/core/Button';\r\n  import MultiAddStudent from './utility/multiAddStudent';\r\n  import DateRangePicker from \"react-daterange-picker\";\r\n  import Dialog from '@material-ui/core/Dialog';\r\n  import DialogActions from '@material-ui/core/DialogActions';\r\n  import DialogContent from '@material-ui/core/DialogContent';\r\n  import Footer from './Footer';\r\n  import MakeCsvPage from './utility/makeCSV'\r\n  const styles = createStyles({\r\n    formControlLabel: { color:'#fff', \r\n    '& label': { color:'#fff' } }\r\n });//left side toggle label font color\r\n\r\n  const CustomSwitch = withStyles({\r\n    switchBase: {\r\n      color: '$ddd',\r\n      '&$checked': {\r\n        color: '#FFF',\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: '#FFF',\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);//left side toggle color\r\n\r\n\r\nclass MainConsole extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n          checked:academyinfo.info.grade,\r\n          listIndex:0,\r\n          chartIndex:0,\r\n          All:[],\r\n          ratelength:0,\r\n          loading:true,\r\n          MonthChart:[],\r\n          DayChart:[],\r\n          noStudent:false,\r\n          Taa:0,  //now selected TodayAssembleAvg\r\n          Aaa:0, //now selected TodayAssembleAvg\r\n          calendarValue: moment(),//calendar\r\n          calendarOpen:false\r\n        };\r\n      }\r\n\r\n      toggleCalendar=()=>{\r\n\r\n        this.setState({ calendarOpen:true });\r\n      }\r\n      toggleCalendarfalse=()=>{\r\n        this.setState({ calendarOpen:false });\r\n      }\r\n      oncalendarSelect = (calendarValue, states) => {\r\n        this.toggleCalendarfalse()\r\n        this.setState({ calendarValue });\r\n        this.updateAll()\r\n      };//calendar\r\n    \r\n      \r\n      queryCstudent = async(formonthchart,fordaychart,thisMonth,thisDay) =>{\r\n\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{\r\n        let nowselected = [] //left side age selector\r\n        let MonthChart = [{month:null,assemble:[]},{month:null,assemble:[]},{month:null,assemble:[]},{month:null,assemble:[]},{month:null,assemble:[]}]\r\n        let DayChart = [\r\n            {day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},\r\n            {day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]}\r\n            ]\r\n        let Taa =0; //now selected TodayAssembleAvg\r\n        let Aaa =0; //now selected TodayAssembleAvg\r\n        let Data = data.data.listMyTypes.items;\r\n\r\n        if(Data.length>0){\r\n            Data.map((d,i)=>{\r\n                let TodayAssemble = []\r\n                let AllAssemble = []\r\n\r\n                if(this.state.checked.includes(d.grade)){\r\n                    if(d.record !==null && d.record.length>0){\r\n    \r\n                        formonthchart.map((month,i)=>{\r\n                            let temp = d.record.filter(x=>x.month===Number(month)).map(x => x.etc);\r\n                            if(MonthChart[i].month ===null){\r\n                                MonthChart[i].month = month;\r\n                            }\r\n                            MonthChart[i].assemble=MonthChart[i].assemble.concat(temp);\r\n                        })//for month chart 3\r\n\r\n    \r\n                        fordaychart.map((day,i)=>{\r\n                            let temp = d.record.filter(x=>x.month===Number(day.m) && x.day===Number(day.d)).map(x => x.etc);\r\n                    \r\n                            if(DayChart[i].day ===null){\r\n                                DayChart[i].day = day.d;\r\n                            }\r\n                            DayChart[i].assemble=DayChart[i].assemble.concat(temp);\r\n                        })//for day chart 3\r\n\r\n\r\n                        d.record.map((record,i)=>{ \r\n                                if(record.month === thisMonth && record.day === thisDay){ //나중에 수정\r\n                                    TodayAssemble.push(record.etc)\r\n                                    }\r\n                                AllAssemble.push(record.etc)   \r\n                        })//per student's record\r\n                }    \r\n                    const taa = average(TodayAssemble) ===undefined?0:average(TodayAssemble); \r\n                    const aaa = average(AllAssemble)\r\n                    \r\n                    nowselected.push({name:d.name,grade:d.grade,ta:TodayAssemble,aa:AllAssemble,taa:taa,aaa:aaa})\r\n                }\r\n            });\r\n            \r\n            Taa = average(nowselected.map(x=>x.taa))===undefined?0:average(nowselected.map(x=>x.taa)) //체크된 학생 전부가 오늘 얼마나 숙제를 했는지\r\n            Aaa = average(nowselected.map(x=>x.aaa)) //체크된 학생 전부가 지금까지 숙제한 퍼센트   \r\n            \r\n            MonthChart.map(d=>{\r\n                d.assemble = average(d.assemble)\r\n            });//for month chart 4\r\n            DayChart.map(d=>{\r\n                d.assemble = average(d.assemble)\r\n            });//for day chart 4\r\n            \r\n\r\n            let rating = nowselected.sort((a, b) => a.ta < b.ta ? -1 : a.ta < b.ta ? 1 : 0);\r\n\r\n            this.setState({\r\n                All:nowselected,\r\n                rating:rating,\r\n                loading:false,\r\n                ratelength:rating.length,\r\n                DayChart:DayChart,\r\n                MonthChart:MonthChart,\r\n                Taa:Taa,\r\n                Aaa:Aaa\r\n            });\r\n        }else{\r\n            this.setState({noStudent:true,loading:false})\r\n        }\r\n\r\n    })\r\n  }\r\n\r\n\r\n  formonthchart=(y,m,d)=>{\r\n    let fivemonths = [];\r\n    let td = [y, m, d];\r\n    for(let i=4;i>-1;i--){\r\n        const d = moment(td).subtract(i, 'month').format('MM')\r\n        fivemonths.push(d);\r\n    }\r\n    return fivemonths\r\n  }//for month chart 1\r\n  \r\n\r\n  forDayChart=(y,m,d)=>{\r\n    let tendays = [];\r\n    let td = [y, m, d];\r\n    for(let i=9;i>-1;i--){\r\n        const m = moment(td).subtract(i, 'day').subtract(1, 'month').format('MM')\r\n        const d = moment(td).subtract(i, 'day').format('DD')\r\n        let day =moment(`${d}/${m}/2020`, \"DD/MM/YYYY\")\r\n        if(moment(day).isValid()===true){\r\n            tendays.push({m:moment(day).format(\"MM\"),d:moment(day).format(\"DD\")});\r\n        }\r\n    }\r\n    return tendays\r\n  }//for day chart 1\r\n  \r\n  updateAll=()=>{\r\n    const y = Number(this.state.calendarValue.format(\"YYYY\"));\r\n    const m = Number(this.state.calendarValue.format(\"MM\"));\r\n    const d = Number(this.state.calendarValue.format(\"DD\"));\r\n    \r\n    const formonthchart = this.formonthchart(y,m,d);//for month chart 2\r\n    const fordaychart = this.forDayChart(y,m,d);//for day chart 2\r\n    this.queryCstudent(formonthchart,fordaychart,m,d);\r\n  }\r\n\r\n  componentDidMount =()=>{\r\n    this.updateAll();\r\n  }\r\n\r\n\r\n    handleToggle = value => () => {\r\n        const currentIndex = this.state.checked.indexOf(value);\r\n        const newChecked = [...this.state.checked];\r\n    \r\n        if (currentIndex === -1) {\r\n          newChecked.push(value);\r\n        } else {\r\n          newChecked.splice(currentIndex, 1);\r\n        }\r\n        this.updateAll();\r\n        this.setState({checked:newChecked})\r\n      }; //left side age toggle\r\n\r\n\r\n    handleListChange = (event, newValue) => {\r\n        this.setState({listIndex:newValue});\r\n      };\r\n\r\n    handleChartChange = (event, newValue) => {\r\n        this.setState({chartIndex:newValue});\r\n      };\r\n\r\n  render() {\r\n    let leng = this.state.ratelength;\r\n    let one = [0,1,2] //상위 3명\r\n    let two = [leng-1,leng-2,leng-3] //하위 3명\r\n    \r\n    return (\r\n        <div>\r\n            <div style={{height:70}}/>\r\n            {\r\n                this.state.loading?\r\n                    <div></div>:\r\n                        <div>\r\n                            {\r\n                                this.state.noStudent?\r\n                                <div style={{width:'100%',height:500,display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center',backgroundColor:'#fff'}}>\r\n                                    <div>\r\n                                    <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"home\"/>\r\n                                        <MultiAddStudent/>\r\n                                    </div>\r\n                                </div>:\r\n                                <div style={{width:'100%',display:'flex',backgroundColor:'#F4F5F7'}}>    \r\n                                <div>\r\n                                    <div style={{margin:20}}>\r\n                                    <Button variant=\"outlined\" color=\"primary\" onClick={this.toggleCalendar}>\r\n                                        {this.state.calendarValue.format(\"YY/MM/DD\")}\r\n                                    </Button>\r\n                                    <Dialog\r\n                                        open={this.state.calendarOpen}\r\n                                        onClose={this.toggleCalendarfalse}\r\n                                        aria-labelledby=\"alert-dialog-title\"\r\n                                        aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                        \r\n                                        <DialogContent>\r\n                                            <DateRangePicker\r\n                                                selectionType='single'\r\n                                                value={this.state.calendarValue}\r\n                                                onSelect={this.oncalendarSelect}\r\n                                                singleDateRange={true}\r\n                                            />\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                        <Button onClick={this.toggleCalendarfalse} color=\"primary\">\r\n                                            Disagree\r\n                                        </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n                                    </div>\r\n                                    <div style={{width:150,backgroundColor:'#5a69bf',padding:20,borderTopRightRadius:30,borderBottomRightRadius:30,marginTop:30}} >\r\n                                    <FormGroup>\r\n                                    {academyinfo.info.grade.map((d,i)=>{\r\n                                        return(\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                <CustomSwitch\r\n                                                    onChange={this.handleToggle(d)}\r\n                                                    checked={this.state.checked.indexOf(d) !== -1}\r\n                                                    value=\"checkedA\"\r\n                                                />\r\n                                                }\r\n                                                label={<Typography style={styles.formControlLabel}>{d}</Typography>}\r\n                                            />\r\n                                        )\r\n                                    })}\r\n                                     </FormGroup>\r\n                                     </div>    \r\n                                     <div>\r\n    \r\n                                     </div>    \r\n                            </div>\r\n                            \r\n                            {\r\n                            leng<3?\r\n    \r\n                            <div>너무적어</div>:\r\n                            <div style={{display:'flex',width:'100%',padding:20,backgroundColor:'#F4F5F7'}}>\r\n                            <div style={{width:\"40%\"}}>\r\n\r\n                          \r\n                                    <div style={{display:'flex',backgroundColor:'#fff',margin:10,padding:30,borderRadius:50}}>\r\n                                        \r\n                                            <div style={{width:\"40%\",margin:20}}>\r\n                                                <CircularProgressbarWithChildren \r\n                                                    value={this.state.Taa}\r\n                                                    styles={buildStyles({\r\n                                                        trailColor: '#F4F5F7',\r\n                                                        pathColor: '#5a69bf',\r\n                                                      })}\r\n                                                    >\r\n                                                    <div style={{textAlign:'center' }}>\r\n                                                    <p style={{ fontSize: 15,marginBottom:-10}}>Today</p>                   \r\n                                                    <strong style={{ fontSize: 35}}>{this.state.Taa}</strong> \r\n                                                    <strong style={{ fontSize: 20}}>%</strong> \r\n                                                    </div>\r\n                                                </CircularProgressbarWithChildren>\r\n                                            </div>\r\n                                            <Divider orientation=\"vertical\"/>\r\n                                            <div style={{width:\"40%\",margin:20}}>\r\n                                                <CircularProgressbarWithChildren \r\n                                                    value={this.state.Aaa}\r\n                                                    styles={buildStyles({\r\n                                                        trailColor: '#F4F5F7',\r\n                                                        pathColor: '#5a69bf',\r\n                                                      })}\r\n                                                    >\r\n                                                    <div style={{textAlign:'center' }}>\r\n                                                    <p style={{ fontSize: 15,marginBottom:-10}}>Total</p>                   \r\n                                                    <strong style={{ fontSize: 35}}>{this.state.Aaa}</strong> \r\n                                                    <strong style={{ fontSize: 20}}>%</strong> \r\n                                                    </div>\r\n                                                </CircularProgressbarWithChildren>\r\n                                            </div>\r\n                                        \r\n                                    </div>\r\n                                    <div style={{margin:10,backgroundColor:'#fff'}}>\r\n                                    <Tabs\r\n                                        variant=\"fullWidth\"\r\n                                        value={this.state.listIndex}\r\n                                        onChange={this.handleListChange}\r\n                                        indicatorColor=\"primary\"\r\n                                        textColor=\"primary\"\r\n                                    >\r\n                                        <Tab icon={<img width={50} height={50} src=\"trophy.png\" alt=\"trophy\" />}/>\r\n                                        <Tab icon={<img width={50} height={50} src=\"alert.png\" alt=\"alert\" />} />\r\n                                    </Tabs>\r\n                                    <TabPanel value={this.state.listIndex} index={1}>\r\n                                    {\r\n                                                      one.map((d,i)=>{\r\n                                                        return(\r\n                                                            <List>\r\n                                                            <ListItem>\r\n                                                                <ListItemAvatar>\r\n                                                                <Avatar>\r\n                                                                    <AccountCircleIcon />\r\n                                                                </Avatar>\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText \r\n                                                                primary={`${this.state.rating[d].name}(${this.state.rating[d].grade})`} \r\n                                                                secondary={`Today : ${this.state.rating[d].taa}/ Total : ${this.state.rating[d].aaa}`} />\r\n                                                            </ListItem>\r\n                                                            </List>\r\n                                                        )\r\n                                                    })\r\n                                       }\r\n                                    </TabPanel>\r\n                                    <TabPanel value={this.state.listIndex} index={0}>\r\n                                       {\r\n                                                      two.map((d,i)=>{\r\n                                                        return(\r\n                                                            <List>\r\n                                                            <ListItem>\r\n                                                                <ListItemAvatar>\r\n                                                                <Avatar>\r\n                                                                    <AccountCircleIcon />\r\n                                                                </Avatar>\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText \r\n                                                                primary={`${this.state.rating[d].name}(${this.state.rating[d].grade})`} \r\n                                                                secondary={`Today : ${this.state.rating[d].taa}/ Total : ${this.state.rating[d].aaa}`} />\r\n                                                            </ListItem>\r\n                                                            </List>\r\n                                                        )\r\n                                                    })\r\n                                       }\r\n                                    </TabPanel>                        \r\n                                    </div>\r\n                                    </div>\r\n                            \r\n                                <div style={{width:\"60%\"}}>\r\n                                <Paper>\r\n                                    <Tabs\r\n                                        value={this.state.chartIndex}\r\n                                        onChange={this.handleChartChange}\r\n                                        indicatorColor=\"primary\"\r\n                                        textColor=\"primary\"\r\n                                    >\r\n                                        <Tab label=\"daily\"/>\r\n                                        <Tab label=\"monthly\"/>\r\n                                    </Tabs>\r\n                                    <TabPanel value={this.state.chartIndex} index={0}>\r\n                                        <Chart data={this.state.DayChart}>\r\n                                            <ArgumentAxis />\r\n                                            <ValueAxis/>\r\n                                            <BarSeries\r\n                                                rotated={true}\r\n                                                color='#5a69bf'\r\n                                                valueField=\"assemble\"\r\n                                                argumentField=\"day\"\r\n                                            />\r\n                                            <Animation />\r\n                                        </Chart>\r\n                                    </TabPanel>\r\n                                    <TabPanel value={this.state.chartIndex} index={1}>\r\n                                        <Chart data={this.state.MonthChart}>\r\n                                            <ArgumentAxis />\r\n                                            <ValueAxis/>\r\n                                            <BarSeries\r\n                                                rotated={true}\r\n                                                color='#5a69bf'\r\n                                                valueField=\"assemble\"\r\n                                                argumentField=\"month\"\r\n                                            />\r\n                                            <Animation />\r\n                                        </Chart>\r\n                                    </TabPanel>                        \r\n                                </Paper>\r\n                                    \r\n                                </div>\r\n                                </div>\r\n                    \r\n                        } \r\n                    </div>\r\n                            }\r\n              \r\n            </div>\r\n            }\r\n            <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst average = arr => {\r\n\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nexport default MainConsole;\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './components/utility/graphql';\n\nimport WordSetting from './components/WordSetting';\nimport Products from './components/Products';\nimport ProductAdmin from './components/ProductAdmin';\nimport LogIn from './components/auth/LogIn';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\nimport ChangePassword from './components/auth/ChangePassword';\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\nimport Welcome from './components/auth/Welcome';\nimport CsvTable from './components/CSVtablepage'\nimport Temp from './components/temp'\n\nimport Sample from './components/Sample';\nimport MainConsole from './components/mainConsole'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth} from 'aws-amplify';\nlibrary.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n    note:[]\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {      \n      \n      // const data = await API.graphql(graphqlOperation(query))\n      // alert(JSON.stringify(data));\n      this._getStudentData()\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(\"ttttt\");\n      const user = await Auth.currentAuthenticatedUser();\n      // alert(`Hi ${user}!!`)\n      this.setUser(user);\n\n    } catch(error) {\n      if (error !== 'No current user') {\n        alert(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \n      // alert(JSON.stringify(data.data.listMyTypes.items))\n    })\n  }\n\n  render() {\n\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar logined={this.state.isAuthenticated} auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => (this.state.isAuthenticated?(<Redirect to=\"/mainconsole\" />):(<Home {...props} auth={authProps} />))}/>\n              <Route exact path=\"/products\" render={(props) => (this.state.isAuthenticated?(<Products {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} />\n              <Route exact path=\"/wordsetting\" render={(props) => (this.state.isAuthenticated?(<WordSetting {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} />\n              <Route exact path=\"/csv\" render={(props) => <CsvTable {...props} auth={authProps} />} />\n               <Route exact path=\"/temp\" render={(props) => <Temp {...props} auth={authProps} />} />\n              <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} />\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n              <Route exact path=\"/mainconsole\" render={(props) => <MainConsole {...props} auth={authProps} />} />\n              <Route exact path=\"/Sample\" render={(props) => <Sample {...props} auth={authProps} />} /> */}\n            </Switch>\n            \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      AWSS3: {\n          bucket: 'verdemo', //REQUIRED -  Amazon S3 bucket\n          region: 'ap-northeast-2', //OPTIONAL -  Amazon service region\n      }\n  },\n    \"aws_project_region\": \"ap-northeast-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://6rha74vb45elpo6wue7tw2ladm.appsync-api.ap-northeast-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-53xamyyb3vagfcwl5xylphc43u\"\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}