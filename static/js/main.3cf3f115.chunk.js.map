{"version":3,"sources":["components/Navbar.js","components/Home.js","components/utility/graphql.js","components/utility/editstudent.js","components/utility/perWeekTabs.js","components/utility/detailmorestudent.js","components/utility/totalchart.js","components/utility/expansion.js","components/auth/academyInfo.js","components/utility/AboutFunction.js","components/utility/addstudent.js","components/utility/addTestRecord.js","components/utility/addHomework.js","components/utility/confirmreq.js","components/utility/sendMail.js","components/utility/tableview.js","components/Products.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/utility/deleteListComp.js","components/temp.js","App.js","serviceWorker.js","index.js"],"names":["ColorButton","withStyles","theme","root","color","palette","getContrastText","backgroundColor","&:hover","Button","Navbar","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","window","location","href","error","console","log","message","stop","react_default","createElement","style","position","width","className","role","aria-label","src","height","alt","id","this","logined","Link","to","isAuthenticated","user","username","borderColor","borderWidth","variant","marginLeft","disableElevation","onClick","Component","Home","origin","destination","direction","index","react_fullpage_default","scrollOverflow","sectionsColor","onLeave","bind","afterLoad","render","_ref","state","fullpageApi","align","padding","scrollAnimation_min_default","animateIn","animateOnce","IconTabs","React","TabPanel","children","value","other","Object","objectWithoutProperties","Typography","assign","component","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","flexGrow","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","Paper","elevation","square","Tabs","centered","onChange","newValue","indicatorColor","textColor","Tab","icon","lib_default","axis","onChangeIndex","queryCstudent","studentsWords","queryCword","createStudent","createWord","updateAll","updateWord","updateHomework","updateTestRecord","deleteWord","EditStudent","open","setOpen","_React$useState3","_React$useState4","name","setName","_React$useState5","_React$useState6","grade","setGrade","handleClose","handleFileInput","asyncToGenerator","mark","API","graphql","graphqlOperation","input","then","alert","apply","arguments","thisname","All","find","x","thisgrade","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","e","target","autoFocus","margin","label","placeholder","type","fullWidth","DialogActions","AntTabs","borderBottom","indicator","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","fontFamily","join","opacity","&$selected","fontWeightMedium","&:focus","selected","disableRipple","demo1","background","paper","demo2","CustomizedTabs","data","detaila","undefined","detailh","detailt","PhoneAndroid_default","NoteAdd_default","PostAdd_default","perWeekTabs_TabPanel","react_custom_scrollbars_lib","map","ListItem","ListItemIcon","Inbox_default","ListItemText","primary","words","replace","secondary","etc","done","score","average","arr","length","Math","round","reduce","c","Line","react","dx_react_chart_material_ui_es","Path","path","line","arg","y","_ref2","val","curve","curveCatmullRom","Root","display","flexDirection","_ref3","restProps","Label","marginBottom","whiteSpace","_ref4","Item","item","_ref5","compare","_ref6","_ref7","series","point","targetSeries","targetPoint","TotalChart","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCalendar","setState","calendarOpen","toggleCalendarfalse","oncalendarSelect","calendarValue","states","forWeekChart","yyyy","Number","format","mm","dd","record","homework","test","count","weekly","month","week","app","td","moment","m","d","w","perRecord1","perRecord2","perHomework1","perHomework2","perTest1","perTest2","i","subtract","weekOfMonth","isNaN","findIndex","filter","day","assignment","forEach","loading","forDayChart","tendays","push","fordaychart","DayChart","info","perRecord","perHomework","percentage","perTest","daychart","componentDidMount","selection","click","_ref8","targets","_ref9","_this$state","chartData","aria-describedby","DateRangePicker_default","selectionType","onSelect","singleDateRange","valueField","argumentField","seriesComponent","rootComponent","itemComponent","labelComponent","dx_react_chart_es","firstDayOfMonth","clone","startOf","firstDayOfWeek","offset","diff","ceil","date","heading","fontSize","pxToRem","secondaryHeading","text","verticalAlign","details","alignItems","column","flexBasis","helper","borderLeft","divider","link","main","textDecoration","DetailedExpansionPanel","Tavg","Aavg","TodayAssemble","accumulator","currentValue","AllAssemble","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","styles","index_esm","textAlign","buildStyles","pathColor","ExpansionPanelDetails","totalchart_TotalChart","Divider","ExpansionPanelActions","address","class","AboutFunction","iconstyle","IconButton","ContactSupport_default","content","AddStudent","age","setAge","aclass","setClass","_React$useState7","_React$useState8","handleRegister","input_query","random","toString","substring","r","NotificationManager","success","res","JSON","parse","_callee2","man","_context2","_x","_x2","err","react_notifications_lib","Tooltip","title","arrow","PersonAdd_default","size","buttontitle","float","FormControl","InputLabel","Select","labelId","academy","g","MenuItem","sender","result","reader","FileReader","readAsText","files","onload","lines","split","headers","obj","currentline","j","accept","htmlFor","HandleTestRecord","save","query","stackid","_loop","_context3","includes","Data","listMyTypes","items","arrayObj","delegateYield","pop","stringify","HandleHomework","Confirm","button","send","css","trim","sourceURL","react_html_email_lib","headCSS","cellSpacing","borderTop","lineHeight","data-mc-bar","data-mc-baz","download","descendingComparator","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","key","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","dark","flex","checkeddelete","selectedid","reload","_x3","EnhancedTableToolbar","Selectedid","Selected","num","Toolbar","clsx","defineProperty","Grid","container","justify","placement","Delete_default","FilterList_default","table","border","clip","overflow","top","EnhancedTable","setOrder","setOrderBy","setSelected","setSelectedid","_React$useState9","_React$useState10","page","setPage","_React$useState11","_React$useState12","dense","setDense","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","emptyRows","min","total","today","tableview_EnhancedTableToolbar","TableContainer","Table","newSelecteds","n","newSelectedsid","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","todayAvg","totalAvg","hover","selectedIndex","newSelected","newSelectedid","handleClick","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch_Switch","config","require","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Products","handleChange","addchecked","addexpanded","deletechecked","deleteexpended","fetchProducts","products","axios","get","api","invokeUrl","sent","t0","_makestudenttree","AllStu","treeSet","classcomp","student","temptreeSet","nowGrade","nowClass","Date","getMonth","getDate","Today","Total","studentInfo","todo","gradeindex","classindex","temp","selectgrade","selectclass","_getStudentData","_callee3","Promise","all","handleChangeMultiplegrade","handleChangeMultipleclass","valuetext","handleSliderChange","login","newproduct","expanded","todayfilter","totalfilter","_this2","marginTop","Products_TabPanel","right","multiple","Input","renderValue","Chip","deleteIcon","Done_default","OutlinedInput","endAdornment","InputAdornment","labelWidth","Slider","Slider2","Pageview_default","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","inputs","document","getElementsByClassName","classList","contains","remove","hasOwnProperty","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","handleSubmit","Validate","objectSpread","signIn","history","onInputChange","onSubmit","components_FormErrors","DeleteListComp","updateDeleted","IDBIndex","handleAllDelete","deleted","handleDeletefor","word","_x4","List","CommonWords","common","one","ListItemAvatar","Avatar","Description_default","ListItemSecondaryAction","handleDelete","extendMoment","originalMoment","Temp","csvTojson","File","S3","uploadFile","bucketName","dirName","region","accessKeyId","secretAccessKey","SaveWords","catch","tempD","_getWordData","_callee4","_context4","tt","wordSet","_callee5","_context5","selectWord","selectedWord","toConsumableArray","addSendData","wordset","select","_callee6","sw","temp2","ass","_context6","warning","abrupt","haveto","due","start","end","renderSelectionValue","_callee7","_context7","handleChangeMultiple","handleHavetoChange","AddOrDelete","range","temp_TabPanel","borderRadius","InputLabelProps","shrink","CommonWordsView","allstu","commonWords_id","perword","App","isAuthenticating","note","authenticated","currentSession","currentAuthenticatedUser","authProps","HashRouter","Navbar_Navbar","Switch","Route","exact","Redirect","Home_Home","Products_Products","temp_Temp","auth_LogIn","Boolean","hostname","match","Amplify","configure","mandatorySignIn","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","Storage","AWSS3","bucket","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cf3f115.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\nimport { Auth } from 'aws-amplify';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText('rgba(90, 105, 191,1.0)'),\n    backgroundColor: 'rgba(90, 105, 191,1.0)',\n    '&:hover': {\n      backgroundColor: 'rgba(90, 105, 191,0.95)',\n      color: '#fff',\n    },\n  },\n}))(Button);\n\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n      window.location.href=\"/\";\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav style={{backgroundColor:'#fff',position:'absolute',width:'100%'}} className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          {\n            this.props.logined?\n\n            <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <div className=\"link-1\"> \n                  <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n                </div>\n              </Link>\n              {/* <Link to=\"/wordsetting\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"manual.png\"  width=\"20\" height=\"20\" alt=\"w\"/>\n                </div>\n              </Link> */}\n              <Link to=\"/products\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"group.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n              {/* <Link to=\"/csv\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link> */}\n              <Link to=\"/temp\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n         \n        </div>\n        \n        \n        :\n\n          <div className=\"navbar-start\">\n              <Link to=\"/\">\n                <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n              </Link>\n              <Link to=\"/temp\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"fileadd.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n              <Link to=\"/products\">\n                <div className=\"link-1\">\n                  <img  className=\"hovicon effect-1\" src=\"group.png\"  width=\"20\" height=\"20\" alt=\"p\"/>\n                </div>\n              </Link>\n          </div>\n         \n          }\n          \n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                     <Link to=\"/register\">\n                     <Button style={{borderColor:'#ddd',borderWidth:2,color:'#ddd'}} variant=\"outlined\">Register</Button>\n                    </Link>\n                    <Link to=\"/login\">\n                      <ColorButton style={{marginLeft:10}}  variant=\"contained\" disableElevation>\n                        Log in\n                      </ColorButton>\n                    </Link>                  \n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <Link to=\"/\">\n                    <ColorButton style={{marginLeft:10}} variant=\"contained\" onClick={this.handleLogOut} disableElevation>\n                    Logout\n                  </ColorButton>\n                 </Link>\n                 \n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n\n    )\n  }\n}\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport ScrollAnimation from 'react-animate-on-scroll';\n\n\nexport default class Home extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"#fff\", \"#fff\", \"#fff\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div align=\"center\" className=\"section section1\">\n                <div style={{padding:80}} >\n                <ScrollAnimation animateIn='fadeIn'animateOnce={false}>\n\n                <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n                </ScrollAnimation>\n                  \n                  <img style={{height:400}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n                </div>\n              </div>\n              <div className=\"section\">\n              <div style={{height:700}} align=\"center\" >\n                    <img style={{height:500}} src=\"선생님효과.png\" alt=\"teacher\"/>\n              </div>\n              </div>\n              <div className=\"section\">\n                <IconTabs/>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n  \nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n\n    },\n  });\n \nfunction IconTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const handleChangeIndex = index => {\n        setValue(index);\n      };\n    return (\n        <div >\n      <Paper elevation={0} square className={classes.root}>\n        <Tabs\n        centered\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<img width={100} height={100} src=\"1.png\" alt=\"11111\" />}  {...a11yProps(0)} aria-label=\"phone\" />\n          <Tab icon={<img width={100} height={100} src=\"2.png\" alt=\"22222\" />}  {...a11yProps(1)} aria-label=\"favorite\" />\n          <Tab icon={<img width={100} height={100} src=\"3.png\" alt=\"33333\" />}  {...a11yProps(2)} aria-label=\"person\" />\n        </Tabs>\n      </Paper>\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect1.png\" alt=\"effect1\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect2.png\" alt=\"effect2\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect3.png\" alt=\"effect3\" />\n            </div>\n      </TabPanel>\n      </SwipeableViews>\n      </div>\n    );\n  }","export const queryCall=`\r\nquery list{\r\n  listMyTypes{\r\n    items{\r\n      id type name grade class link todo words{\r\n        id name link percentage haveto\r\n      } record{id month day words etc}}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const queryCstudent=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}},limit:100){\r\n    items{\r\n      id type name grade class link todo haveto due \r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n      test{id name score month day}\r\n      homework{id name assignment done month day}\r\n    }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const studentsWords = `query list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}}){\r\n    items{\r\n      id name words{id name link due haveto deleted}\r\n    }\r\n}}` //for deleteWord\r\n\r\n\r\nexport const queryCteacher=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"teacher\"}}){\r\n    items{\r\n      id type name grade class\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const queryCword=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"word\"}}  limit:100){\r\n    items{\r\n      id name link haveto due deleted\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const createSample= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto} \r\n      record{id month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\n\r\n// id: Math.random().toString(36).substring(7),\r\n// type: \"sample\",\r\n// name: this.state.username,\r\n// address:this.state.company,\r\n// words:[{\r\n//   id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n//   name:\"2020 VOCA.json\",\r\n//   link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n//   haveto:100,\r\n//   due: due\r\n// },{\r\n// id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n// name:\"2020 VOCA2.json\",\r\n// link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n// haveto:100,\r\n// due: due\r\n// }],\r\n// record:record\r\n// });\r\n\r\n\r\nexport const createStudent= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\nexport const createStudent2= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto}\r\n      record{\r\n        id bookid month day words etc\r\n      }\r\n  }\r\n}\r\n`;\r\nexport const createStudent3= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\nexport const createWord = `mutation createMyType($input: CreateMyTypeInput!) {\r\n    createMyType(input: $input) {\r\n        id\r\n        type\r\n        name\r\n        grade\r\n        link\r\n        address\r\n        deleted\r\n    }\r\n  }\r\n  `;// address => 기간  grade => have to\r\n\r\n  export const updateAll = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        name\r\n        grade\r\n    }\r\n  }\r\n  `;\r\n\r\n  export const updateWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        words{name link due haveto deleted}\r\n    }\r\n  }\r\n  `;\r\n  export const updateHomework = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      homework{id name assignment done month day}\r\n    }\r\n  }\r\n  `;\r\n  export const updateTestRecord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      test{id name score month day}\r\n    }\r\n  }\r\n  `;\r\n  export const deleteWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        deleted\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  export const deleteWordOrigin = `mutation deleteMyType($input: DeleteMyTypeInput!) {\r\n    deleteMyType(input: $input) {\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"465tq4\"\r\n\t// \t\thomework:{name:\"숙제1\" assignment:50 done:20 date:\"20/02/13\"}\r\n  //   }){\r\n  //     homework{name assignment done date}\r\n  //   }\r\n  // }   \r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:[{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"},\r\n  //     {id:\"sdfgsdfg\"month:2,day:3,words:\"test.json\"},\r\n  //     {id:\"strwebsf\"month:2,day:2,words:\"test.json\"},]\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"}\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"test.json\"\r\n  //     type:\"word\"\r\n  //     name:\"test.json\"\r\n  //     link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //     words:[\r\n  //       {\r\n  //         id: null\r\n  //         name: null\r\n  //         link:null\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name link words{id name link}\r\n  //   }\r\n  // }  \r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"oatem28pmc\"\r\n  //     type:\"student\"\r\n  //     name:\"이병건\"\r\n  //     grade:\"m1\"\r\n  //     percentage:50,\r\n  //     words:[\r\n  //       {\r\n  //         id: \"test.json\"\r\n  //         name: \"test.json\"\r\n  //         link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name grade percentage words{id name link}\r\n  //   }\r\n  // }\r\n\r\n\r\n// mutation create{\r\n//   createToNote(input:{\r\n//     name:\"note\"\r\n//   \tdescription:\"전체숙제\"\r\n//     grades:[{id:\"01\", name:\"중등 1학년\", students:[\r\n//       {id:\"011\" name:\"홍길동\",percentage:86,assignment:\"숙제\"},\r\n//       {id:\"012\" name:\"이민정\",percentage:30,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"02\", name:\"중등 2학년\", students:[\r\n//       {id:\"021\" name:\"박보영\",percentage:100,assignment:\"숙제\"},\r\n//       {id:\"022\" name:\"신민아\",percentage:60,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"03\", name:\"중등 3학년\", students:[\r\n//       {id:\"031\" name:\"이병건\",percentage:50,assignment:\"숙제\"},\r\n//       {id:\"032\" name:\"주호민\",percentage:90,assignment:\"숙제\"}\r\n//     ]}  \r\n//     ]\r\n//   }){\r\n//     id name description grades{id name students{\r\n//       id name percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n// mutation {\r\n//   deleteToNote (\r\n//     input:{\r\n//       id:\"48f61355-996a-4a46-8638-3799aca806c7\"\r\n//     }\r\n//   ) {\r\n//   \tid\r\n//   }\r\n// }\r\n\r\n// const nodes = [{\r\n//   value: 'mid',\r\n//   label: '중학교',\r\n//   children: [\r\n//       { value: 'm1', label: '1학년' },\r\n//       { value: 'm2', label: '2학년' },\r\n//       { value: 'm3', label: '3학년' },\r\n//   ],\r\n// },{\r\n//   value: 'high',\r\n//   label: '고등학교',\r\n//   children: [\r\n//     { value: 'h1', label: '1학년' },\r\n//     { value: 'h2', label: '2학년' },\r\n//     { value: 'h3', label: '3학년' },\r\n//   ],\r\n// }];\r\n\r\n\r\n\r\n\r\n// mutation create{\r\n//   updateToNote(input:{\r\n//     id:\"9957304a-191c-4f7d-b2a5-192ba1151717\"\r\n//     grades:[{ id:\"01\"\r\n//       students:[{id:\"011\" percentage: 30 assignment: \"string\"}]}]    \r\n//   }){\r\n//     id grades{id students{\r\n//       id percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n\r\n// mutation create{\r\n// \tcreateMyType(input:{\r\n//     \ttype:\"word\"\r\n//     \tname:\"중3단어\"\r\n// \t\t\tgrade: \"m3\"\r\n//     \twords:\"단어\"\r\n//   }){\r\n// \ttype name grade words\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// input CreateToNoteInput {\r\n// \tid: ID\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [GradeInput]\r\n// }\r\n\r\n// input DeleteToNoteInput {\r\n// \tid: ID\r\n// }\r\n\r\n// type Grade {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [Student]\r\n// }\r\n\r\n// input GradeInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input ModelBooleanFilterInput {\r\n// \tne: Boolean\r\n// \teq: Boolean\r\n// }\r\n\r\n// input ModelFloatFilterInput {\r\n// \tne: Float\r\n// \teq: Float\r\n// \tle: Float\r\n// \tlt: Float\r\n// \tge: Float\r\n// \tgt: Float\r\n// \tcontains: Float\r\n// \tnotContains: Float\r\n// \tbetween: [Float]\r\n// }\r\n\r\n// input ModelIDFilterInput {\r\n// \tne: ID\r\n// \teq: ID\r\n// \tle: ID\r\n// \tlt: ID\r\n// \tge: ID\r\n// \tgt: ID\r\n// \tcontains: ID\r\n// \tnotContains: ID\r\n// \tbetween: [ID]\r\n// \tbeginsWith: ID\r\n// }\r\n\r\n// input ModelIntFilterInput {\r\n// \tne: Int\r\n// \teq: Int\r\n// \tle: Int\r\n// \tlt: Int\r\n// \tge: Int\r\n// \tgt: Int\r\n// \tcontains: Int\r\n// \tnotContains: Int\r\n// \tbetween: [Int]\r\n// }\r\n\r\n// enum ModelSortDirection {\r\n// \tASC\r\n// \tDESC\r\n// }\r\n\r\n// input ModelStringFilterInput {\r\n// \tne: String\r\n// \teq: String\r\n// \tle: String\r\n// \tlt: String\r\n// \tge: String\r\n// \tgt: String\r\n// \tcontains: String\r\n// \tnotContains: String\r\n// \tbetween: [String]\r\n// \tbeginsWith: String\r\n// }\r\n\r\n// type ModelToNoteConnection {\r\n// \titems: [ToNote]\r\n// \tnextToken: String\r\n// }\r\n\r\n// input ModelToNoteFilterInput {\r\n// \tid: ModelIDFilterInput\r\n// \tname: ModelStringFilterInput\r\n// \tdescription: ModelStringFilterInput\r\n// \tand: [ModelToNoteFilterInput]\r\n// \tor: [ModelToNoteFilterInput]\r\n// \tnot: ModelToNoteFilterInput\r\n// }\r\n\r\n// type Mutation {\r\n// \tcreateToNote(input: CreateToNoteInput!): ToNote\r\n// \tupdateToNote(input: UpdateToNoteInput!): ToNote\r\n// \tUpdateGrade(input: UpdateGradeInput!): [Grade]\r\n// \tUpdateStudent(input: UpdateStudentInput!): Student\r\n// \tdeleteToNote(input: DeleteToNoteInput!): ToNote\r\n// \taddGrade(input: [GradeInput]): [Grade]\r\n// \taddStudent(input: [StudentInput]): Student\r\n// }\r\n\r\n// type Query {\r\n// \tgetToNote(id: ID!): ToNote\r\n// \tlistToNotes(filter: ModelToNoteFilterInput, limit: Int, nextToken: String): ModelToNoteConnection\r\n// }\r\n\r\n// type Student {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input StudentInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// type Subscription {\r\n// \tonCreateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"createToNote\"])\r\n// \tonUpdateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"updateToNote\"])\r\n// \tonDeleteToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"deleteToNote\"])\r\n// }\r\n\r\n// type ToNote {\r\n// \tid: ID!\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [Grade]\r\n// }\r\n\r\n// input UpdateGradeInput {\r\n// \tid: ID\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input UpdateStudentInput {\r\n// \tid: ID!\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input UpdateToNoteInput {\r\n// \tid: ID!\r\n// \tgrades: [GradeInput]\r\n// }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n\r\nexport default function EditStudent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [name, setName] =  React.useState('');\r\n  const [grade, setGrade] =  React.useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n//   alert(JSON.stringify(props.All));\r\n\r\n  const handleFileInput = async()=>{\r\n      if(name !==''&& grade!==''){\r\n        await API.graphql(graphqlOperation(graphql.updateAll, {input: {\r\n            id: props.id,\r\n            name: name,\r\n            grade:grade,\r\n          }})).then(handleClose())\r\n      }else{\r\n          alert(\"모두 입력해주세요\")\r\n      }\r\n}\r\n\r\nconst thisname = props.All.find(x => x.id === props.id).name;\r\nconst thisgrade = props.All.find(x => x.id === props.id).grade;\r\n// const todo = props.All.find(x => x.id === props.id).todo;\r\n\r\n\r\n  //   id type name grade link words\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen}>\r\n        Edit\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"name\"\r\n            placeholder={thisname}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            value={grade}\r\n            onChange={(e) => setGrade(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"grade\"\r\n            placeholder={thisgrade}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleFileInput} color=\"primary\">\r\n            Edit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd'; //test\r\nimport PostAddIcon from '@material-ui/icons/PostAdd'; //test\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: '1px solid #e8e8e8',\r\n  },\r\n  indicator: {\r\n    backgroundColor: '#5a69bf',\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles(theme => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    minWidth: 50,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      color: '#5a69bf',\r\n      opacity: 1,\r\n    },\r\n    '&$selected': {\r\n      color: '#5a69bf',\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    '&:focus': {\r\n      color: '#5a69bf',\r\n    },\r\n  },\r\n  selected: {},\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: '#2e1534',\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const data = props.data===[]?[]:props.data;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const detaila = data.detaila===undefined?[]:data.detaila;\r\n  const detailh = data.detailh===undefined?[]:data.detailh;\r\n  const detailt = data.detailt===undefined?[]:data.detailt;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n          <AntTab  icon={<PhoneAndroidIcon />} {...a11yProps(0)} />\r\n          <AntTab  icon={<NoteAddIcon />}  {...a11yProps(1)} />\r\n          <AntTab  icon={<PostAddIcon />}  {...a11yProps(2)}/>\r\n        </AntTabs>\r\n    </div>\r\n    <div>\r\n                  <TabPanel value={value} index={0}>\r\n                   \r\n                    <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detaila.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.words.replace(\"https://wowproject-wow.s3.amazonaws.com/demo/\",\"\").replace(\".json\",\"\")} secondary={x.etc} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Scrollbars>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                  <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detailh.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.name} secondary={x.done} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Scrollbars>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={2}>\r\n                  <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detailt.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.name} secondary={x.score} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                   </Scrollbars>\r\n                  </TabPanel>\r\n                </div>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  ","import React,{Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Sparklines, SparklinesBars } from 'react-sparklines';\r\n\r\nconst average = arr => {\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\nexport default class DetailMoreStudent extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading:true,  \r\n          expanded:false,\r\n          dialog:false,\r\n          words:this.props.words,\r\n          weekly:this.props.weekly,\r\n          detaila:null\r\n         };\r\n    };\r\n\r\n    handleChange = panel => (event, isExpanded) => {\r\n      this.setState({expanded:isExpanded ? panel : false});\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({dialog:true})\r\n      };\r\n    \r\n    handleClose = () => {\r\n        this.setState({dialog:false})\r\n      };\r\n\r\n    componentDidMount =()=>{\r\n        let app =[];\r\n        let homework =[];\r\n        let test =[];\r\n\r\n        this.props.weekly.forEach(x=>{\r\n            let aa = x.detaila.map(a=>a.etc);\r\n            app.push(average(aa))\r\n        })\r\n        alert(JSON.stringify(app))\r\n        this.setState({detaila:app,loading:false})\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.loading?\r\n                    <div></div>:\r\n                    <div>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                            More\r\n                        </Button>\r\n                        <Dialog\r\n                            open={this.state.dialog}\r\n                            onClose={this.handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n\r\n                            <DialogContent>\r\n                                <div style={{width:100,height:20}}>\r\n\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>\r\n                                <div style={{width:100,height:20}}>\r\n\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>                                \r\n                                <div style={{width:100,height:20}}>\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>                              \r\n                                {\r\n                                    this.state.words.map((x,i)=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <ExpansionPanel expanded={this.state.expanded === x.id} onChange={this.handleChange(x.id)}>\r\n                                                <ExpansionPanelSummary\r\n                                                    expandIcon={<ExpandMoreIcon />}\r\n                                                    aria-controls=\"panel1bh-content\"\r\n                                                    id={x.id}\r\n                                                >\r\n                                                    <Typography>{x.name}</Typography>\r\n                                                </ExpansionPanelSummary>\r\n                                                <ExpansionPanelDetails>\r\n                                                    <Typography>\r\n                                                    Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget\r\n                                                    maximus est, id dignissim quam.\r\n                                                    </Typography>\r\n                                                </ExpansionPanelDetails>\r\n                                                </ExpansionPanel>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                                Agree\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                }\r\n    </div>\r\n        );\r\n    }\r\n    \r\n  }","\r\n  \r\n  import * as React from 'react';\r\n  import {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    LineSeries,\r\n    Legend,BarSeries,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\n\r\n\r\n  import { Animation,EventTracker,SelectionState,Stack } from '@devexpress/dx-react-chart';\r\n  import {\r\n    curveCatmullRom,\r\n    line,\r\n  } from 'd3-shape';\r\n  import moment from 'moment'\r\n  import DateRangePicker from \"react-daterange-picker\";\r\n  import Dialog from '@material-ui/core/Dialog';\r\n  import DialogActions from '@material-ui/core/DialogActions';\r\n  import DialogContent from '@material-ui/core/DialogContent';\r\n  import Button from '@material-ui/core/Button';\r\n  import { withStyles } from '@material-ui/core/styles';\r\n  import CustomizedTabs from './perWeekTabs'\r\n  import DetailMoreStudent from './detailmorestudent'\r\n  const Line = props => (\r\n    <LineSeries.Path\r\n      {...props}\r\n      path={line()\r\n        .x(({ arg }) => arg)\r\n        .y(({ val }) => val)\r\n        .curve(curveCatmullRom)}\r\n    />\r\n  );\r\n  \r\n  const legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n  const legendLabelStyles = theme => ({\r\n    label: {\r\n      marginBottom: theme.spacing(1),\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  });\r\n  const legendItemStyles = () => ({\r\n    item: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  });\r\n  \r\n  const legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n  );\r\n  const legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n  );\r\n  const legendItemBase = ({ classes, ...restProps }) => (\r\n    <Legend.Item className={classes.item} {...restProps} />\r\n  );\r\n  const Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n  const Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n  const Item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\r\n\r\n\r\n\r\n  const compare = (\r\n    { series, point }, { series: targetSeries, point: targetPoint },\r\n  ) => series === targetSeries && point === targetPoint;\r\n\r\n\r\n  export default class TotalChart extends React.PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        loading:false,\r\n        calendarValue: moment(),//calendar\r\n        selection: [],\r\n        calendarOpen:false,\r\n        selected:0,\r\n        daychart:undefined,\r\n        weekly:[],\r\n        };\r\n\r\n\r\n        this.click = ({ targets }) => {\r\n          const target = targets[0];\r\n          if (target) {\r\n          if(target.point!==undefined){\r\n              this.setState(({ selection,daychart }) => ({\r\n                selection: selection[0] && compare(selection[0], target) ? [] : [target],\r\n                selected:target.point\r\n              }));\r\n            }\r\n          }\r\n        };\r\n      }\r\n\r\n      toggleCalendar=()=>{\r\n        this.setState({ calendarOpen:true });\r\n      }\r\n      toggleCalendarfalse=()=>{\r\n        this.setState({ calendarOpen:false });\r\n      }\r\n      oncalendarSelect = (calendarValue, states) => {\r\n        this.toggleCalendarfalse()\r\n        this.setState({ calendarValue });\r\n        this.forWeekChart()\r\n      };//calendar\r\n\r\n    \r\n      forWeekChart=()=>{\r\n        const yyyy = Number(this.state.calendarValue.format(\"YYYY\"));\r\n        const mm = Number(this.state.calendarValue.format(\"MM\"));\r\n        const dd = Number(this.state.calendarValue.format(\"DD\"));\r\n  \r\n        const record = this.props.record\r\n        const homework = this.props.homework\r\n        const test = this.props.test\r\n        let count = 0;\r\n        let weekly = [\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n\r\n      ];\r\n        let td = moment([yyyy, mm, dd]);\r\n\r\n        let m =0;\r\n        let d =0;\r\n        let w =0;\r\n        let index=0;\r\n        let perRecord1 = []\r\n        let perRecord2 = []\r\n        let perHomework1 = []\r\n        let perHomework2 = [];\r\n        let percentage =0\r\n        let perTest1 = []\r\n        let perTest2 = []\r\n\r\n        for(let i=40;i>-1;i--){\r\n\r\n          m = moment(td).subtract(i, 'day').subtract(1, 'month').format('MM')\r\n          d = moment(td).subtract(i, 'day').format('DD')\r\n          w = weekOfMonth(moment(`${d}/${m}/2020`, \"DD/MM/YYYY\"))\r\n          \r\n          if(isNaN(w)===false){\r\n            // alert(`${m}월${d}일 // ${JSON.stringify(weekly[index])}`);\r\n            m=Number(m)\r\n            d=Number(d)\r\n            index = weekly.findIndex(x=>x.month === m&&x.week ===w);\r\n  \r\n            if(index===-1){\r\n              count++\r\n              index = count\r\n              weekly[index].month = m; \r\n              weekly[index].week = w;\r\n              weekly[index].arg =`${m}월${w}주`\r\n            }\r\n  \r\n            if(record !==null){\r\n                perRecord1 = record.filter(x=>x.month===m && Number(x.day)===d);\r\n                perRecord2 = perRecord1.map(x => x.etc)\r\n                weekly[index].detaila=weekly[index].detaila.concat(perRecord1);\r\n                weekly[index].app=weekly[index].app.concat(perRecord2);\r\n            }\r\n              \r\n            if(homework!==null){\r\n                perHomework1 = homework.filter(x=>Number(x.month)===m && Number(x.day)===d)\r\n                perHomework2 = perHomework1.map(x => {\r\n                percentage = Math.round((x.done/x.assignment)*100)\r\n                  return percentage\r\n                });\r\n                weekly[index].detailh=weekly[index].detailh.concat(perHomework1);\r\n                weekly[index].homework=weekly[index].homework.concat(perHomework2);\r\n            }\r\n              \r\n             if(test!==null){\r\n                perTest1 = test.filter(x=>x.month===m && Number(x.day)===d)\r\n                perTest2 = perTest1.map(x => {\r\n                  return x.score\r\n                });\r\n                weekly[index].detailt=weekly[index].detailt.concat(perTest1);\r\n                weekly[index].test=weekly[index].test.concat(perTest2);\r\n             }   \r\n\r\n          }\r\n      }\r\n      \r\n      weekly.forEach((x,i)=>{\r\n        weekly[i].app = average(x.app)\r\n        weekly[i].homework = average(x.homework)\r\n        weekly[i].test = average(x.test)\r\n      })\r\n\r\n      this.setState({weekly:weekly,loading:true})\r\n      }\r\n    \r\n      forDayChart=(y,m,d)=>{\r\n      let tendays = [];\r\n      let td = [y, m, d];\r\n      for(let i=9;i>-1;i--){\r\n          const d = moment(td).subtract(i, 'day').format('DD')\r\n          tendays.push(d);\r\n      }\r\n      \r\n      return tendays\r\n    }//for day chart 1\r\n    \r\n    updateAll=(y,m,d)=>{\r\n      const record = this.props.record\r\n      const homework = this.props.homework\r\n      const test = this.props.test\r\n\r\n    \r\n      const fordaychart = this.forDayChart(y,m,d);\r\n      \r\n      let DayChart = [\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        ]\r\n\r\n        fordaychart.forEach((day,i)=>{\r\n          if(DayChart[i].day ===null){DayChart[i].day = day;}\r\n          // record.forEach(x=> alert(`${x.day}   ${day}  ${Number(x.day)===Number(day)}`  ))\r\n         \r\n          let perRecord = record.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => x.etc);\r\n          DayChart[i].app=DayChart[i].app.concat(perRecord);\r\n          \r\n\r\n          let perHomework = homework.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => {\r\n            const percentage = Math.round((x.done/x.assignment)*100)\r\n            DayChart[i].info.homework.push({name:percentage,percentage:percentage});\r\n            return percentage\r\n          });\r\n          DayChart[i].homework=DayChart[i].homework.concat(perHomework);\r\n          \r\n\r\n          let perTest = test.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => {\r\n            DayChart[i].info.test.push({name:x.score,score:x.score});\r\n            return x.score\r\n          });\r\n          DayChart[i].test=DayChart[i].test.concat(perTest);\r\n          \r\n          \r\n      })\r\n\r\n      this.setState({daychart:DayChart,loading:true})\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount=()=>{\r\n      this.forWeekChart()\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n      const {weekly: chartData,selection,selected} = this.state;\r\n\r\n      return (\r\n            <div>\r\n            {\r\n              this.state.loading?\r\n              <div style={{display:'flex'}}>\r\n                <div style={{width:400}}>\r\n                  \r\n                  <div style={{margin:20}}>\r\n                                        {/* <DetailMoreStudent words={this.props.words} weekly={chartData}/> */}\r\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={this.toggleCalendar}>\r\n                                            {this.state.calendarValue.format(\"YY/MM/DD\")}\r\n                                        </Button>\r\n                                        <Dialog\r\n                                            open={this.state.calendarOpen}\r\n                                            onClose={this.toggleCalendarfalse}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            \r\n                                            <DialogContent>\r\n                                                <DateRangePicker\r\n                                                    selectionType='single'\r\n                                                    value={this.state.calendarValue}\r\n                                                    onSelect={this.oncalendarSelect}\r\n                                                    singleDateRange={true}\r\n                                                />\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                            <Button onClick={this.toggleCalendarfalse} color=\"primary\">\r\n                                                Disagree\r\n                                            </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                        </div>\r\n              <Chart\r\n                data={chartData}\r\n              >\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <BarSeries\r\n                name=\"homework\"\r\n                color='#F4F5F7'\r\n                valueField=\"homework\"\r\n                argumentField=\"arg\"\r\n              />\r\n                <BarSeries\r\n                name=\"app\"\r\n                color='#5a69bf'\r\n                valueField=\"app\"\r\n                argumentField=\"arg\"\r\n              />\r\n                <LineSeries\r\n                  name=\"test\"\r\n                  color='#ddd'\r\n                  valueField=\"test\"\r\n                  argumentField=\"arg\"\r\n                  seriesComponent={Line}\r\n                />\r\n              \r\n                <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} />\r\n                <Animation />\r\n                <Stack />\r\n                <EventTracker onClick={this.click} />\r\n                <SelectionState selection={selection} />\r\n\r\n              </Chart>\r\n                </div>\r\n                <div style={{width:300}}>\r\n                <CustomizedTabs data={chartData[selected]}/>\r\n                </div>\r\n               \r\n              </div>\r\n              :<div>\r\n                <p>loading</p>\r\n              </div>\r\n            }\r\n          </div>\r\n         \r\n      );\r\n    }\r\n  }\r\n  \r\n  const average = arr => {\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\n  function weekOfMonth (input) {\r\n    const firstDayOfMonth = input.clone().startOf('month');\r\n    const firstDayOfWeek = firstDayOfMonth.clone().startOf('week');\r\n    const offset = firstDayOfMonth.diff(firstDayOfWeek, 'days');\r\n  \r\n    return Math.ceil((input.date() + offset) / 7);\r\n  }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {  buildStyles,CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EditStudent from './editstudent'\r\nimport TotalChart from './totalchart';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '50%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DetailedExpansionPanel(props) {\r\n  const classes = useStyles();\r\n  const [selected, setselected] = React.useState('');\r\n  let Tavg = 0;\r\n  let Aavg = 0;\r\n  const words = props.All.find(x => x.id === props.id).words;\r\n  \r\n  if(props.TodayAssemble.length >0){\r\n    Tavg =props.TodayAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/props.TodayAssemble.length;\r\n  }\r\n  if(props.AllAssemble.length>0){\r\n    Aavg =props.AllAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/props.AllAssemble.length;\r\n  }\r\n\r\n  // alert(props.record)\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded={false}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div styles={{width:50}} className={classes.column}>\r\n            <Typography className={classes.heading}>{props.name}</Typography>\r\n          </div>\r\n          <div style={{display:'flex'}} className={classes.column}>\r\n\r\n              <div style={{width:100}}>\r\n              <CircularProgressbarWithChildren value={Math.round(Tavg)}>\r\n                <div style={{textAlign:'center' }}>\r\n                  <p style={{ fontSize: 15,marginBottom:-10}}>Today</p>                   \r\n                  <strong style={{ fontSize: 35}}>{Math.round(Tavg)}</strong> \r\n                  <strong style={{ fontSize: 20}}>%</strong> \r\n                </div>\r\n\r\n              </CircularProgressbarWithChildren>\r\n              </div>\r\n\r\n              <div style={{width:100,marginLeft:30}}>\r\n              <CircularProgressbarWithChildren \r\n              styles={buildStyles({\r\n                textColor: '#DC2C1A',\r\n                pathColor: '#5a69bf',\r\n                backgroundColor: '#DC2C1A',\r\n                })} value={Math.round(Aavg)}>\r\n                <div style={{textAlign:'center' }}>\r\n                  <p id=\"pfont\" style={{ fontSize: 15,marginBottom:-10}}>Total</p>                   \r\n                  <strong style={{ fontSize: 35,color:'#5a69bf'}}>{Math.round(Aavg)}</strong> \r\n                  <strong style={{ fontSize: 20,color:'#5a69bf'}}>%</strong> \r\n                </div>\r\n              </CircularProgressbarWithChildren>\r\n              </div>\r\n\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n\r\n        {words !== null?\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <div style={{width:'100%'}}>\r\n            <TotalChart\r\n              words={words}\r\n              record={props.record}\r\n              homework={props.homework}\r\n              test={props.test}\r\n            />\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n        :\r\n        <div></div>\r\n        }\r\n        <Divider />\r\n        <ExpansionPanelActions>\r\n          \r\n          <EditStudent id={props.id} All={props.All}/>\r\n        </ExpansionPanelActions>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\n","export const info={\r\n    name:\"정인학원\",\r\n    address:\"의왕시오전동\",\r\n    grade:[14,15,16,17,18],\r\n    class:[\"c\",\"b\",\"a\",\"s\"]\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nexport default function AboutFunction(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div style={props.style}>\r\n          <div style={props.iconstyle}>\r\n        <IconButton onClick={handleClickOpen} aria-label=\"delete\">\r\n          <ContactSupportIcon style={{ color: '#5a69bf' }} />\r\n        </IconButton>\r\n            </div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {props.content}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as academy from '../auth/academyInfo';\r\nimport AboutMultiple from './AboutFunction'\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nexport default function AddStudent() {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState('');  \r\n  const [aclass, setClass] = React.useState('');\r\n  const [name, setName] = React.useState('');\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const handleRegister = async() =>{\r\n    if(age !== '' && aclass !== '' && name !==''){\r\n      const input_query={\r\n        id: Math.random().toString(36).substring(7),\r\n        type: \"student\",\r\n        name: name,\r\n        grade:age,\r\n        class:aclass\r\n      };\r\n      await API.graphql(graphqlOperation(graphql.createStudent, {input: input_query})).then(r =>{\r\n          NotificationManager.success('Upload Success', `${name} 학생이 저장 되었습니다`,3000);\r\n          handleClose()     \r\n      });\r\n    }else{\r\n      NotificationManager.error('failed', `항목을 모두 채워주세요`,3000);\r\n    }\r\n  }\r\n\r\n  const handleAgeChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n  const handleclassChange = event => {\r\n    setClass(event.target.value);\r\n  };\r\n  const handlenameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n\r\n const csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            handleFileInput(result);\r\n  }\r\n}\r\n\r\n  const handleFileInput =(e)=>{ //multiple\r\n    try {\r\n        let res = JSON.parse(e)\r\n        res.map(async(man,i)=>{\r\n          const input_query={\r\n            id: Math.random().toString(36).substring(7),\r\n            type: \"student\",\r\n            name: man.name,\r\n            grade:man.grade,\r\n            class:man.class\r\n          };\r\n          await API.graphql(graphqlOperation(graphql.createStudent, {input: input_query})).then(r =>{\r\n            if(i === res.length-1){\r\n              // alert(`${i}--${res.length}--${res[0].name} 외 ${res.length}명이 저장 되었습니다`)\r\n              NotificationManager.success('Upload Success', `${res[0].name} 외 ${res.length}명이 저장 되었습니다`,3000);             \r\n          }\r\n         });\r\n      });\r\n  } catch (err) {\r\n      console.error(err);\r\n  }\r\n      // const input_query={\r\n      //   id: tempD.key,\r\n      //   type: \"word\",\r\n      //   name: tempD.key,\r\n      //   grade:null,\r\n      //   percentage:null ,\r\n      //   words: tempD.location,\r\n      // };\r\n      \r\n      // await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(this._getWordData());\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer/>\r\n      <Tooltip title=\"Add Student\" arrow>\r\n      <IconButton  onClick={handleClickOpen}>\r\n                        <PersonAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                    </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">학생추가</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            한명의 학생을 등록하는 페이지입니다. 여러명의 학생을 한번에 등록하려면 아래의 링크를 참조하세요.\r\n              <AboutMultiple buttontitle={\"Multiple 기능 사용법\"} content={\"f\"}/>\r\n          </DialogContentText>\r\n          <div style={{float:'right'}}>\r\n              <FormControl style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">학년</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={age}\r\n                onChange={handleAgeChange}\r\n                >\r\n                {\r\n                  academy.info.grade.map((g,i)=>{\r\n                    return(\r\n                    <MenuItem value={g}>{g}</MenuItem>\r\n                    );\r\n                  })\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">반</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={aclass}\r\n                onChange={handleclassChange}\r\n                >\r\n                {\r\n                  academy.info.class.map((c,i)=>{\r\n                    return(\r\n                    <MenuItem value={c}>{c}</MenuItem>\r\n                    );\r\n                  })\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            </div>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"학생이름\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={name}\r\n          onChange={handlenameChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n         \r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\" onChange={csvTojson}  name=\"file\" accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Multiple\r\n                </Button>\r\n              </label>\r\n\r\n        \r\n          <Button onClick={handleRegister} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function HandleTestRecord() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n  \r\n                    if(lines[0] ===\"name,id,test,score,month,day\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,assignment,done,date`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n    const save = async(query) =>{\r\n        await API.graphql(graphqlOperation(graphql.updateTestRecord, {input: query})).then(r =>{\r\n            console.log(r);\r\n         });\r\n    }\r\n\r\n      const handleFileInput = async(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n\r\n            let stackid =[];\r\n\r\n            for(let i =0;i<res.length-1;i++){\r\n                if(stackid.includes(res[i].id)){\r\n\r\n                }else{\r\n                    let input_query=undefined;\r\n                         \r\n                    await API.graphql(graphqlOperation( `\r\n                         query list{\r\n                             listMyTypes(filter:{id:{contains:\"${res[i].id}\"}}){\r\n                               items{\r\n                                 id test{id name score month day}\r\n                               }\r\n                             }\r\n                           }`)).then(r =>{\r\n                            \r\n                             let Data = r.data.listMyTypes.items[0].test\r\n\r\n                             const filtered = res.filter(x=>x.id === res[i].id)\r\n                             const arrayObj = filtered.map(man => {\r\n                                     return {\r\n                                         id:Math.random().toString(36).substring(7),\r\n                                         name:man.test,\r\n                                         score:man.score,\r\n                                         month:man.month,\r\n                                         day:man.day\r\n                                     };\r\n                                   });\r\n                                   \r\n                            if(Data !== null){     \r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    test:Data.concat(arrayObj)\r\n                                }\r\n                            }else{\r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    test:arrayObj\r\n                                }\r\n                            }  \r\n                           \r\n                            save(input_query)\r\n                            NotificationManager.success('Upload Success', `${res[i].name} 외 ${arrayObj.length}개의 숙제결과가 저장 되었습니다`,3000);\r\n                        })     \r\n                        stackid.push(res[i].id)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n          <Tooltip title=\"Add Test\" arrow>\r\n                <IconButton onClick={handleClickOpen} color=\"primary\" aria-label=\"upload homeworkDialog\" component=\"span\">\r\n                <NoteAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                </IconButton>\r\n                </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <img src=\"testmanual.png\" alt=\"students setting\"/>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <input onChange={csvTojson}  name=\"file\" accept=\".csv\"  style={{display:'none'}} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n      );\r\n\r\n}","import React from 'react';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function HandleHomework() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n  \r\n                    if(lines[0] ===\"name,id,homework,assignment,done,month,day\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,assignment,done,date`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n    const save = async(query) =>{\r\n        await API.graphql(graphqlOperation(graphql.updateHomework, {input: query})).then(r =>{\r\n            console.log(r);\r\n         });\r\n    }\r\n\r\n      const handleFileInput = async(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n\r\n            let stackid =[];\r\n\r\n            for(let i =0;i<res.length-1;i++){\r\n                if(stackid.includes(res[i].id)){\r\n\r\n                }else{\r\n                    let input_query=undefined;\r\n                         \r\n                    await API.graphql(graphqlOperation( `\r\n                         query list{\r\n                             listMyTypes(filter:{id:{contains:\"${res[i].id}\"}}){\r\n                               items{\r\n                                 id homework{id name assignment done month day}\r\n                               }\r\n                             }\r\n                           }`)).then(r =>{\r\n                             let Data = r.data.listMyTypes.items[0].homework\r\n\r\n                             const filtered = res.filter(x=>x.id === res[i].id)\r\n                             const arrayObj = filtered.map(man => {\r\n                                     return {\r\n                                         id:Math.random().toString(36).substring(7),\r\n                                         name:man.homework,\r\n                                         assignment:man.assignment,\r\n                                         done:man.done,\r\n                                         month:man.month,\r\n                                         day:man.day\r\n                                     };\r\n                                   });\r\n                            \r\n                            if(Data !== null){     \r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    homework:Data.concat(arrayObj)\r\n                                }\r\n                            }else{\r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    homework:arrayObj\r\n                                }\r\n                            }  \r\n                            save(input_query)\r\n                            NotificationManager.success('Upload Success', `${res[i].name} 외 ${arrayObj.length}개의 숙제결과가 저장 되었습니다`,3000);\r\n                        })     \r\n                        stackid.push(res[i].id)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n          <Tooltip title=\"Add Homework\" arrow>\r\n                <IconButton onClick={handleClickOpen} color=\"primary\" aria-label=\"upload homeworkDialog\" component=\"span\">\r\n                <PostAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                </IconButton>\r\n                </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                <img src=\"homeworkmanual.png\" alt=\"students setting\"/>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <input onChange={csvTojson}  name=\"file\" accept=\".csv\"  style={{display:'none'}} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n      );\r\n\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Confirm(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    props.send();\r\n    setOpen(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.button}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>handleSend()} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { Box, Email, Image, Item, Span, A,renderEmail } from 'react-html-email'\r\nimport axios from 'axios';\r\n\r\nconst css = `\r\n@media only screen and (max-device-width: 480px) {\r\n  font-size: 20px !important;\r\n}`.trim()\r\n\r\nconst sourceURL = 'https://raw.githubusercontent.com/chromakode/react-html-email/master/examples/kitchenSink.js'\r\n\r\nconst email = (\r\n  <Email title=\"Test Email\" headCSS={css}>\r\n    <Item>\r\n      <Span fontSize={15}>Hello, world!</Span>\r\n    </Item>\r\n    <Item>\r\n      <Box cellSpacing={20} width=\"100%\" style={{ borderTop: '3px solid black' }}>\r\n        <Item>\r\n          <Span color=\"gray\" lineHeight={20}>Generated by <A href=\"https://github.com/chromakode/react-html-email\">react-html-email</A></Span>\r\n          <Image data-mc-bar=\"bar\" data-mc-baz=\"baz\" alt=\"react\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/React.js_logo.svg/100px-React.js_logo.svg.png\" width={100} height={100} />\r\n          <A download={sourceURL} href={sourceURL}>Source code</A>\r\n        </Item>\r\n      </Box>\r\n    </Item>\r\n  </Email>\r\n)\r\n\r\nexport default async function submitEmail(){\r\n\r\n    const messageHtml =  renderEmail(email);\r\n    alert(messageHtml);\r\n    await axios.post('/addUser',{\r\n        userName: 'Fred',\r\n        userEmail:\"sosdfg728@naver.com\"\r\n    }).then((response)=>{\r\n                if (response.data.msg === 'success'){\r\n                    alert(\"Email sent, awesome!\"); \r\n                }else if(response.data.msg === 'fail'){\r\n                    alert(\"Oops, something went wrong. Try again\")\r\n                }\r\n            })\r\n        }\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Confirm from './confirmreq';\r\nimport submitEmail from './sendMail'\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'name' },\r\n  { id: 'id', numeric: true, disablePadding:  false, label: 'id' },\r\n  { id: 'grade', numeric: true, disablePadding: false, label: 'grade' },\r\n  { id: 'class', numeric: true, disablePadding: false, label: 'class' },\r\n  { id: 'todayAvg', numeric: true, disablePadding: false, label: 'today' },\r\n  { id: 'totalAvg', numeric: true, disablePadding: false, label: 'total' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\n\r\nconst checkeddelete = async(selectedid) =>{\r\n  selectedid.map(async(d,i)=>{\r\n    await API.graphql(graphqlOperation(graphql.deleteWordOrigin,{input: {id:d}})).then(data =>{\r\n      if(selectedid.length-1 ===i){\r\n        window.location.reload();\r\n        // NotificationManager.success('delete Success', `${selectedid[0]}이외 ${selectedid.length-1} 명이 삭제 되었습니다`,3000);\r\n      }\r\n      })\r\n  })\r\n}//보류 시바ㅅ거스ㅡ\r\n\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const {Selected} = props;\r\n  const {Selectedid} = props;\r\n  const num = props.Selected.length\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: num > 0,\r\n      })}\r\n    >\r\n      {num > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {num} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Students\r\n        </Typography>\r\n      )}\r\n\r\n      {num > 0 ? (\r\n        <Grid   container direction=\"row\" justify=\"flex-end\">\r\n        \r\n          <Grid item>\r\n          <Tooltip title=\"Delete\" placement=\"top-end\">\r\n              {/* <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd'}} onClick={()=>checkeddelete(Selectedid)}>\r\n                Delete\r\n              </Button> */}\r\n              <IconButton onClick={()=>checkeddelete(Selectedid)} aria-label=\"delete\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\" >\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\n// EnhancedTableToolbar.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [selectedid, setSelectedid] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const All = props.All;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = All.map(n => n.label);\r\n      const newSelectedsid = All.map(n => n.value);\r\n      setSelected(newSelecteds);\r\n      setSelectedid(newSelectedsid);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n    setSelectedid([]);\r\n  };\r\n\r\n  const handleClick = (event, name,id) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n\r\n\r\n    let newSelected = [];\r\n    let newSelectedid = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n      newSelectedid = newSelectedid.concat(selectedid, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n      newSelectedid = newSelectedid.concat(selectedid.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n      newSelectedid = newSelectedid.concat(selectedid.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n      newSelectedid = newSelectedid.concat(\r\n        selectedid.slice(0, selectedIndex),\r\n        selectedid.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n    setSelectedid(newSelectedid);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, All.length - page * rowsPerPage);\r\n\r\n  const total =props.total;\r\n  const today =props.today;\r\n  const grade = props.grade;\r\n  const aclass = props.class;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NotificationContainer/>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar Selectedid={selectedid} Selected={selected} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={All.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(All, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.label);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    if(grade.includes(row.grade) && row.todayAvg <= today&& row.totalAvg <= total && aclass.includes(row.class) ){\r\n                        return (\r\n                            <TableRow\r\n                              hover\r\n                              onClick={event => handleClick(event, row.label, row.value)}\r\n                              role=\"checkbox\"\r\n                              aria-checked={isItemSelected}\r\n                              tabIndex={-1}\r\n                              key={row.value}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                {row.label}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{row.value.split(\"-\")[0]}</TableCell>\r\n                              <TableCell align=\"right\">{row.grade}</TableCell>\r\n                              <TableCell align=\"right\">{row.class}</TableCell>\r\n                              <TableCell align=\"right\">{row.todayAvg}</TableCell>\r\n                              <TableCell align=\"right\">{row.totalAvg}</TableCell>\r\n                              </TableRow>\r\n                          );\r\n                    }\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={All.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component, Fragment } from 'react';\n// import Product from './Product';\nimport axios from \"axios\";\n// import CheckboxTree from 'react-checkbox-tree';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './utility/graphql';\nimport DetailedExpansionPanel from './utility/expansion';\nimport AddStudent from './utility/addstudent'\n\n\nimport AboutFunction from './utility/AboutFunction';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\n// import Button from '@material-ui/core/Button';\n\n// import { Scrollbars } from 'react-custom-scrollbars';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport HandleTestRecord from './utility/addTestRecord'\nimport HandleHomework from './utility/addHomework';\n// import Slider from '@material-ui/core/Slider';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport EnhancedTable from './utility/tableview';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport * as academy from './auth/academyInfo';\nimport IconButton from '@material-ui/core/IconButton';\nconst config = require('../config.json');\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nexport default class Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      login:this.props.auth.isAuthenticated,\n\n      addchecked: [],\n      addexpanded: [], // tree view\n\n      deletechecked:[],\n      deleteexpended:[], // table view\n\n      value:0,\n      newproduct: null,\n      products: [],\n      checked: [],\n      expanded: [],\n      loading:true,\n      AllStu:null,\n      treeSet:null, date: new Date(),\n      All:null,\n\n      selectgrade:[],\n      selectclass:[],\n\n      todayfilter:100,\n      totalfilter:100,\n     };\n};\nhandleChange = (event, newValue) => {\n  this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\n}\n\na11yProps = (index) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nonChange = date => this.setState({ date })\n\n  fetchProducts = async () => {\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  _makestudenttree=(data)=>{\n    let AllStu = [];\n\n  \n    let treeSet = academy.info.grade.map((g)=>{\n      let classcomp = academy.info.class.map((c,i)=>{\n        return {value:`${c}${g}`,label:c,children:[]}\n      });\n     return {value:g,label:g,children:classcomp}\n   });\n\n     data.forEach((student,i)=>{\n        let temp =[];\n        let temptreeSet = JSON.parse(JSON.stringify(treeSet));\n       let nowGrade = student.grade;\n       let nowClass= student.class;\n       //react-checkbox-tree 양식에 맞도록 재가공\n       let TodayAssemble =[];\n       let AllAssemble = [];       \n\n   \n       if(student.record !== null){\n         temp = student.record.filter(item => \n           item.month === Number(new Date().getMonth())  && item.day === Number(new Date().getDate())\n         );\n         TodayAssemble=temp.map(data => {return data.etc});\n         \n         AllAssemble = student.record.map(item => {\n               return item.etc\n         });\n       }    \n       let Today =0;\n       let Total =0;\n       if(TodayAssemble.length >0){\n         Today =TodayAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/TodayAssemble.length;\n       }\n       if(AllAssemble.length>0){\n         Total =AllAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/AllAssemble.length;\n       }\n       let studentInfo = { \n         value: student.id , \n         grade: student.grade,\n         class:student.class,\n         label: student.name, \n         words:student.words, \n         todo:student.todo, \n         record:student.record,  \n         TodayAssemble:TodayAssemble,// 오늘 퍼센트 배열\n         AllAssemble:AllAssemble,//전체 퍼센트 배열\n         todayAvg:Math.round(Today),\n         totalAvg:Math.round(Total),\n         homework:student.homework,\n         test:student.test}\n      \n         let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\n       \n         let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\n\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\n        treeSet[gradeindex] = temptreeSet[gradeindex]\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\n           AllStu.push(studentInfo);   \n           // alert(JSON.stringify(treeSet))\n     })\n\n     treeSet.forEach((i,index)=>{\n       let temp = i.children.filter(j=>j.children.length!==0)    \n        treeSet[index].children =temp\n      })\n      treeSet= treeSet.filter(x=>x.children.length!==0);\n      this.setState({treeSet:treeSet,AllStu:AllStu,All:data,selectgrade:academy.info.grade,selectclass:academy.info.class});\n  }\n \n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{\n      this._makestudenttree(data.data.listMyTypes.items)\n      \n    })\n  }\n\n  componentDidMount = async() => {\n    await Promise.all([this._getStudentData()]).then((d)=>{\n      this.setState({loading:false})\n    }\n    )   \n  }\n\n  //selecter\n  handleChangeMultiplegrade = event => {\n    this.setState({selectgrade:event.target.value});\n    // alert(event.target.value)\n  };\n  handleChangeMultipleclass = event => {\n    this.setState({selectclass:event.target.value});\n    // alert(event.target.value)\n  };\n\n  //slider\n  valuetext=(value) =>{\n    return `${value}% 이하`;\n  }\n\n  handleSliderChange = (event, newValue) => {\n    // this.setState({Slider:Number(event.target.value)});\n   return newValue\n  };\n\n  \n\n  render() {\n    return (\n      <div>\n        {\n          this.state.loading?\n          <p>loading</p>\n          :\n        <Fragment>\n        \n        <div style={{height:70}}/>\n        <section style={{marginTop:-270,backgroundColor:'#fff'}} className=\"section\">\n        <div className=\"container\">\n        <h1 style={{color:'#5a69bf'}}>학생 데이터/관리</h1>\n        <p className=\"subtitle is-5\">학생들의 데이터를 확인하거나 등록/삭제를 할 수 있습니다.</p> \n        <br/><br/><br/><br/><br/><br/>\n        <div style={{float:'right'}}><AddStudent/></div>   \n        <div style={{float:'right'}}><HandleHomework/></div>   \n        <div style={{float:'right'}}><HandleTestRecord/></div>   \n        <Paper elevation={0} square>\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"table\" {...this.a11yProps(0)} />\n          <Tab label=\"tree\" {...this.a11yProps(1)} />\n        </Tabs>\n      </Paper>        \n        <br />\n        <TabPanel value={this.state.value} index={1}>\n          <div>\n          <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:30}} content={\"f\"}/>\n        <div style={{display:'flex',marginTop:30}}>\n          <div style={{width:\"30%\"}}>\n            {/* <div className=\"tile is-ancestor\">\n              <CheckboxTree\n              nodes={this.state.treeSet}\n              checked={this.state.checked}\n              expanded={this.state.expanded}\n              onCheck={checked => this.setState({ checked })}\n              onExpand={expanded => this.setState({ expanded })}\n              icons={{\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\n            }}\n          />             \n            </div> */}\n          </div>\n          <div  style={{width:750}}>\n\n            {\n              this.state.AllStu.map((student, i)=>{\n                if(this.state.checked.indexOf(student.value) !== -1){\n                  return(\n                    <DetailedExpansionPanel \n                      All={this.state.All} \n                      id={student.value} \n                      name={student.label} \n                      TodayAssemble={student.TodayAssemble}\n                      AllAssemble={student.AllAssemble}\n                      record={student.record}\n                      homework={student.homework}\n                      test={student.test}/>\n                  );// to utility/expansion  ->  calendar and editstudent\n                }\n                return \"\";\n              })\n            }\n\n          </div>   \n        </div>      \n        </div>          \n        </TabPanel>\n        <TabPanel value={this.state.value} index={0}> \n        <div>\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:30}} content={\"f\"}/>\n        <div style={{display:'flex',marginTop:30}}>\n          <div id=\"selecter\" style={{width:\"30%\"}}>\n            <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"demo-mutiple-chip-label\">반을 선택하세요</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-chip-label\"\n            id=\"demo-mutiple-chip\"\n            multiple\n            value={this.state.selectgrade}\n            onChange={event =>this.handleChangeMultiplegrade(event)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div>\n                {selected.map(value => (\n                  <Chip key={value} label={value} deleteIcon={<DoneIcon />}/>\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {academy.info.grade.map(grade => (\n              <MenuItem key={grade} value={grade}>\n                {grade}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n            </div>\n            <div id=\"selecter\" style={{width:\"30%\"}}>\n            <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"demo-mutiple-chip-label\">학년을 선택하세요</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-chip-label\"\n            id=\"demo-mutiple-chip\"\n            multiple\n            value={this.state.selectclass}\n            onChange={event =>this.handleChangeMultipleclass(event)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div>\n                {selected.map(value => (\n                  <Chip key={value} label={value} deleteIcon={<DoneIcon />}/>\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {academy.info.class.map(aclass => (\n              <MenuItem key={aclass} value={aclass}>\n                {aclass}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n            </div>\n            \n              <div style={{width:\"15%\",marginTop:20,marginLeft:30}}>\n              <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Total</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={this.state.todayfilter}\n              onChange={event=>this.setState({todayfilter:event.target.value})}\n              endAdornment={<InputAdornment position=\"end\">이하</InputAdornment>}\n              labelWidth={60}\n            />\n            </FormControl>\n              </div>\n              <div style={{width:\"15%\",marginTop:20,marginLeft:30}}>\n              <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Total</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={this.state.totalfilter}\n              onChange={event=>this.setState({totalfilter:event.target.value})}\n              endAdornment={<InputAdornment position=\"end\">이하</InputAdornment>}\n              labelWidth={60}\n            />\n            </FormControl>\n              </div>\n            <div id=\"slider\" style={{marginTop:10,marginLeft:30}}>\n            <IconButton onClick={()=>this.setState({Slider:this.state.Slider2})}  aria-label=\"search\">\n              <PageviewIcon fontSize=\"large\" style={{ color: '#5a69bf' }}/>\n            </IconButton>\n            </div>\n          </div>\n          <EnhancedTable \n            grade={this.state.selectgrade}\n            class={this.state.selectclass}\n            total={this.state.totalfilter}\n            today={this.state.todayfilter}\n            All={this.state.AllStu}/>\n             {/*to utility/Tableview  */}\n             </div>\n        </TabPanel>        \n      </div>  \n\n      {/* :<p>xxxxxxxxxx</p>} */}\n         \n        </section>\n      </Fragment>\n        }\n      </div>\n      \n    )\n  }\n}\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-prevent-tabpanel-${index}`}\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\nimport Paper from '@material-ui/core/Paper';\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\");\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <div style={{backgroundColor:'#fff'}}>\n      <div style={{height:150}}/>\n      <section className=\"section auth\">\n        <div style={{display:'flex'}}  className=\"container\">\n          <div style={{width:'50%'}}>\n            <img src=\"secure.jpg\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\n          \n          </div>\n       \n          <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\n          <form onSubmit={this.handleSubmit}>\n            <h1>Login</h1>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>User ID</p>\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>Password</p>\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <FormErrors formerrors={this.state.errors} />\n                <button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </Paper>\n        </div>\n      </section>\n      <div style={{height:150}}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default LogIn;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { Paper } from '@material-ui/core';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Confirm from './confirmreq'\r\n\r\nexport default function DeleteListComp(props) {\r\n  const [dense, setDense] = React.useState(false);\r\n\r\n\r\n\r\nconst updateDeleted = async(query) =>{\r\n    await API.graphql(graphqlOperation(graphql.updateWord, {input: query})).then(r =>{\r\n        NotificationManager.success('delete Success', `${IDBIndex} 단어장이 삭제 되었습니다`,3000);\r\n    });\r\n    window.location.reload();\r\n}\r\n\r\nconst handleAllDelete = async(id) =>{\r\n\r\n        await API.graphql(graphqlOperation(graphql.deleteWord, {input: {\r\n            id: id,\r\n            deleted:true\r\n          }}))\r\n          \r\n        await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n            data.data.listMyTypes.items.map((d,i)=>{\r\n                if(d.words !==null){\r\n                    let temp = d.words.find(x=>x.id !== id);\r\n                    let input_query={\r\n                        id: d.id,\r\n                        words:temp \r\n                    }\r\n                    updateDeleted(input_query);\r\n                }\r\n            })\r\n        });\r\n}\r\n\r\nconst handleDeletefor = async(word,man) =>{\r\n\r\n  await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n    // alert(JSON.stringify(data))\r\n      data.data.listMyTypes.items.map((d,i)=>{\r\n        if(d.id ===man){\r\n          if(d.words !==null){\r\n            let temp = d.words.find(x=>x.id !== word);\r\n            let input_query={\r\n                id: d.id,\r\n                words:temp \r\n            }\r\n            // alert(JSON.stringify(input_query))\r\n            updateDeleted(input_query);\r\n        }\r\n        }\r\n      })\r\n  });\r\n}\r\n\r\nconst handleDelete = (id,data) =>{\r\n    data.forEach(d =>{\r\n      handleDeletefor(id,d.id)\r\n    })\r\n}\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n        <NotificationContainer/>\r\n            <List dense={dense}>\r\n            {\r\n              props.CommonWords.map((data,i)=>{\r\n                  let secondary = [];\r\n                   data.common.map(one=> secondary.push(` ${one.name} `))\r\n                    return(\r\n                        <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <DescriptionIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                          primary={data.name}\r\n                          secondary={secondary}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <div style={{display:'flex'}}>\r\n                            <Confirm button=\"delete\" title=\"delete\" content={`${secondary}학생의 ${data.name}을 삭제하겠습니까?`} send={()=>handleDelete(data.id,data.common)}/>\r\n                            <Confirm button=\"delete All\" title=\"delete\" content={` ${data.name}을 가진 모든 학생에게서 ${data.name}을 삭제하겠습니까?`} send={()=>handleAllDelete(data.id)}/>\r\n                          </div>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    );\r\n                })      \r\n            }\r\n            </List>\r\n            </Paper>\r\n  );\r\n}\r\n\r\n                      \r\n                        // <div style={{display:'flex'}}>\r\n                        //     <div style={{width:80,margin:10}}>\r\n                        //         {data.name}\r\n                        //     </div>\r\n                        //     <div style={{display:'flex'}}>\r\n                        //         {\r\n                        //             data.common.map((one,i)=>{\r\n                        //                 return(\r\n                        //                 <div style={{margin:10}}>{one.name}</div>\r\n                        //                 );\r\n                        //             })\r\n                        //         }\r\n                        //     </div>\r\n                        // </div>","import React, { Component, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport DateRangePicker from \"react-daterange-picker\";\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport originalMoment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DeleteListComp from './utility/deleteListComp'\r\nimport * as academy from './auth/academyInfo'\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst config = require('../config.json');\r\nconst moment = extendMoment(originalMoment);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default class Temp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const today = moment();\r\n    this.state = { \r\n      value:0,  \r\n      newproduct: null,\r\n      products: [],\r\n      \r\n      addchecked: [],\r\n      addexpanded: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],\r\n      selectedWord:[],\r\n      AddOrDelete:true,\r\n      select:[],\r\n      calendarValue: moment.range(today.clone().subtract(1, \"days\"), today.clone())//calendar\r\n     };\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n\r\n\r\n  csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    let name = sender.target.files[0].name\r\n\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            let e = new File([JSON.stringify(result)], name.replace('.csv','.json'), {type: \"application/json\"})\r\n            this.handleFileInput(e);\r\n            // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\r\n            // var dlAnchorElem = document.createElement('a');\r\n            // dlAnchorElem.setAttribute(\"href\",dataStr);\r\n            // dlAnchorElem.setAttribute(\"download\", \"newworkbook.json\");\r\n            // dlAnchorElem.click();\r\n  }\r\n}\r\n  // ▽\r\n  handleFileInput =async(e)=>{\r\n      await S3.uploadFile(e, {\r\n          bucketName: config.S3.bucketName,\r\n          dirName:config.S3.dirName,\r\n          region: config.S3.region,\r\n          accessKeyId: config.S3.accessKeyId,\r\n          secretAccessKey: config.S3.secretAccessKey,\r\n      }).then( d =>{\r\n          this.SaveWords(d);\r\n        }).catch(err =>alert(err));\r\n  }\r\n  // ▽       \r\n\r\n  SaveWords = async(tempD)=>{\r\n    const input_query={\r\n      id: Math.random().toString(36).substring(7),\r\n      type: \"word\",\r\n      name: tempD.key.replace(`${config.S3.dirName}/`,\"\"),\r\n      grade:null, // haveto\r\n      link: tempD.location,\r\n      address:null,\r\n      deleted:false\r\n    };\r\n    // alert(JSON.stringify(input_query))\r\n    NotificationManager.success('Upload Success', '단어장을 저장하였습니다',3000); \r\n    await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(()=>\r\n      this._getWordData()\r\n    );\r\n  }\r\n  // ▽\r\n  _getWordData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCword)).then(data =>{\r\n   \r\n    let tt = data.data.listMyTypes.items.filter(x=> x.deleted === null || x.deleted ===false);\r\n    // alert(JSON.stringify(tt))\r\n      this.setState({wordSet:tt})\r\n    })\r\n  }\r\n \r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectWord=(w)=>{\r\n        if(this.state.selectedWord.includes(w) === false){\r\n            this.setState({\r\n                selectedWord: [...this.state.selectedWord, w]\r\n            });\r\n        }else{\r\n            this.setState({selectedWord: this.state.selectedWord.filter(function(word) { \r\n                return word !== w\r\n            })});\r\n        }  \r\n  }\r\n\r\n  addSendData = () =>{\r\n    \r\n    this.state.AllStu.map((student, i)=>{    \r\n        if(this.state.addchecked.indexOf(student.value) !== -1){ \r\n\r\n              let wordset = this.state.wordSet\r\n\r\n            this.state.select.map(async(sw,i)=>{//선택된 단어장\r\n\r\n \r\n                let temp = student.words!==null?student.words.findIndex(x => x.label === sw):-2\r\n                let temp2 = this.state.wordSet.findIndex(x => x.name === sw)\r\n\r\n              if(temp!==-1&&temp!==-2){\r\n                    NotificationManager.warning('Upload Failed', `${student.label}이 이미 ${sw}을 가지고 있습니다.`,3000);\r\n                    return \"\";\r\n                }\r\n              else if(temp2 !== -1){\r\n\r\n                  wordset[temp2].haveto = this.state.haveto;\r\n                  wordset[temp2].due = `${this.state.calendarValue.start.format(\"YYYY-MM-DD\")}/${this.state.calendarValue.end.format(\"YYYY-MM-DD\")}`\r\n                  const ass = temp===-2?[wordset[temp2]]:student.words.concat(wordset[temp2])\r\n\r\n                  const input_query={\r\n                    id: student.value,\r\n                    words: ass,\r\n                  };\r\n\r\n                await API.graphql(graphqlOperation(graphql.updateWord, {input: input_query})).then(data =>{\r\n                     NotificationManager.success('Upload Success', `${student.label}에게 ${sw}을 업로드 하였습니다.`,3000);\r\n                })\r\n                }else return 0\r\n              })\r\n\r\n        }else return 0;\r\n    })\r\n  }\r\n  \r\n  oncalendarSelect = (calendarValue, states) => {\r\n    this.setState({ calendarValue, states });\r\n  };//calendar\r\n\r\n\r\n\r\n  renderSelectionValue = () => {\r\n    return (\r\n      <div style={{padding:25}}>\r\n        <div id=\"calendar\" style={{display:'flex'}}>\r\n          <strong>Start    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.start.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n        <div style={{display:'flex'}}>\r\n          <strong>End    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.end.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };//calendar\r\n\r\n  \r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData(), this._getWordData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n  handleChangeMultiple = event => {\r\n    // alert(event.target.value)\r\n    this.setState({select:event.target.value});\r\n  };\r\n\r\n  handleHavetoChange = event => {\r\n    this.setState({haveto:event.target.value});\r\n  };\r\n\r\n  render() {\r\n    alert(\"zzzz\")\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n\r\n       \r\n\r\n      <Paper elevation={0} position=\"static\">\r\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"단어장 추가\" {...this.a11yProps(0)} />\r\n          <Tab label=\"단어장 삭제\" {...this.a11yProps(1)} />\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={this.state.value} index={0}>\r\n        <div>\r\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex'}}>\r\n\r\n        \r\n            <div style={{width:\"30%\"}}>\r\n\r\n\r\n            <div style={{marginBottom:50,display:'flex'}}>\r\n            <div style={{marginTop:15}}>\r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\"  name=\"file\" onChange={e => this.csvTojson(e)} accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  +\r\n                </Button>\r\n              </label>\r\n            </div>\r\n            \r\n            <div id=\"selecter\" style={{width:\"50%\",marginLeft:10}}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel id=\"demo-mutiple-chip-label\">select</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-chip-label\"\r\n            id=\"demo-mutiple-chip\"\r\n            multiple\r\n            value={this.state.select}\r\n            onChange={event =>this.handleChangeMultiple(event)}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            renderValue={selected => (\r\n              <div>\r\n                {\r\n                selected.map((w,i) => (\r\n                   <Chip\r\n                   key={i}\r\n                   label={w.replace('.json','')}\r\n                 />\r\n                ))\r\n                }\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >{this.state.wordSet.map(w => (\r\n            <MenuItem key={w.id} value={w.name}>\r\n              {w.name.replace('.json','')}\r\n            </MenuItem>\r\n          ))}\r\n          </Select>\r\n        </FormControl>\r\n            </div>\r\n            </div>\r\n\r\n           \r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"100%\",display:'flex'}} >\r\n              <div style={{marginRight:100}}>\r\n\r\n                <div>\r\n                  <strong>WordBook</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                     {//if selected, print that\r\n                          this.state.select.map((word,i)=>{\r\n                            return(\r\n                              <Chip\r\n                                style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                key={word}\r\n                                label={word.replace('.json','')}\r\n                              />\r\n                            );\r\n                        })\r\n                    }\r\n                  </Scrollbars>\r\n                  \r\n                </div>\r\n\r\n                <div>\r\n                  <strong>Students</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                  {\r\n                      this.state.AllStu.map((student, i)=>{    \r\n                          if(this.state.addchecked.indexOf(student.value) !== -1){\r\n                              return(\r\n                                <Chip\r\n                                  style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                  key={student.label}\r\n                                  label={student.label}\r\n                                />\r\n                          );\r\n                          }\r\n                          return \"\";\r\n                      })\r\n                      }\r\n                  </Scrollbars>\r\n                  \r\n                </div> \r\n\r\n                <div style={{ height: 80,width: 300}}>\r\n                  <strong>Have to</strong>\r\n                  <div>\r\n                      <TextField\r\n                        value={this.state.haveto}\r\n                        onChange={this.handleHavetoChange}\r\n                        id=\"outlined-number\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n\r\n                </div>  \r\n                <div>\r\n                  <div>{this.renderSelectionValue()}</div>\r\n                  <div>\r\n                    <DateRangePicker\r\n                      value={this.state.calendarValue}\r\n                      onSelect={this.oncalendarSelect}\r\n                      singleDateRange={true}\r\n                    />\r\n                  \r\n                </div>\r\n                <div>\r\n                        <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:300}} onClick={()=>{this.addSendData()}}>\r\n                            send\r\n                        </Button>\r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n      <TabPanel value={this.state.value} index={1}>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n\r\n            <div style={{width:\"30%\"}}>\r\n\r\n           \r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                    <CommonWordsView wordSet={this.state.wordSet} allstu={this.state.AllStu} deletechecked={this.state.deletechecked}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n\r\n        </div>\r\n       \r\n\r\n\r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CommonWordsView(props) {\r\n    let CommonWords = [];\r\n    let commonWords_id =[];\r\n\r\n    props.allstu.map((student, i)=>{                            \r\n        if(props.deletechecked.indexOf(student.value) !== -1){\r\n            if(student.words !== null){\r\n            student.words.map((perword,i)=>{\r\n              if(props.wordSet.findIndex(x=>x.id===perword.id)!==-1){ //delete되지 않은 단어인가?  맞다       \r\n                if(CommonWords.length >0){//맨 처음 push하는 것인가? 아니다\r\n                    CommonWords.map((c,i)=>{\r\n                        \r\n                          if(c.id === perword.id){ // 해당 단어장이 이미 있는가? 없다\r\n                            CommonWords[i].common.push({name:student.label, id:student.value})\r\n                            }\r\n                            else if(commonWords_id.includes(perword.id)===false){// 해당 단어장이 이미 있는가? 있다\r\n                                CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                                commonWords_id.push(perword.id);\r\n                            } \r\n                        \r\n                    })\r\n                }else if(CommonWords.length === 0){//맨 처음 push하는 것인가? 맞다\r\n                    CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                    commonWords_id.push(perword.id);\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n    })\r\n    \r\n    return (\r\n      <Scrollbars style={{height:500}}>\r\n          <div style={{width:\"80%\"}}><DeleteListComp commonWords_id={commonWords_id} CommonWords={CommonWords}/></div>\r\n      </Scrollbars>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './components/utility/graphql';\n\n// import WordSetting from './components/WordSetting';\nimport Products from './components/Products';\n// import ProductAdmin from './components/ProductAdmin';\nimport LogIn from './components/auth/LogIn';\n// import Register from './components/auth/Register';\n// import ForgotPassword from './components/auth/ForgotPassword';\n// import ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\n// import ChangePassword from './components/auth/ChangePassword';\n// import ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\n// import Welcome from './components/auth/Welcome';\n// import CsvTable from './components/CSVtablepage'\nimport Temp from './components/temp'\n\n// import Sample from './components/Sample';\n// import MainConsole from './components/mainConsole'\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth} from 'aws-amplify';\n// library.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n    note:[]\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {      \n      \n      // const data = await API.graphql(graphqlOperation(query))\n      // alert(JSON.stringify(data));\n      this._getStudentData()\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(\"ttttt\");\n      const user = await Auth.currentAuthenticatedUser();\n      // alert(`Hi ${user}!!`)\n      this.setUser(user);\n\n    } catch(error) {\n      if (error !== 'No current user') {\n        alert(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \n      alert(JSON.stringify(data.data.listMyTypes.items))\n    })\n  }\n\n  render() {\n\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar logined={this.state.isAuthenticated} auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => (this.state.isAuthenticated?(<Redirect to=\"/mainconsole\" />):(<Home {...props} auth={authProps} />))}/>\n              <Route exact path=\"/products\" render={(props) => (this.state.isAuthenticated?(<Products {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} />\n              {/* <Route exact path=\"/wordsetting\" render={(props) => (this.state.isAuthenticated?(<WordSetting {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} /> */}\n              {/* <Route exact path=\"/csv\" render={(props) => <CsvTable {...props} auth={authProps} />} /> */}\n               <Route exact path=\"/temp\" render={(props) => <Temp {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} /> */}\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              {/* <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n              <Route exact path=\"/mainconsole\" render={(props) => <MainConsole {...props} auth={authProps} />} />\n              <Route exact path=\"/Sample\" render={(props) => <Sample {...props} auth={authProps} />} /> */} */}\n            </Switch>\n            \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      AWSS3: {\n          bucket: 'verdemo', //REQUIRED -  Amazon S3 bucket\n          region: 'ap-northeast-2', //OPTIONAL -  Amazon service region\n      }\n  },\n    \"aws_project_region\": \"ap-northeast-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://6rha74vb45elpo6wue7tw2ladm.appsync-api.ap-northeast-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-53xamyyb3vagfcwl5xylphc43u\"\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}