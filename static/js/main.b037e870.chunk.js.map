{"version":3,"sources":["../node_modules/nexmo/lib sync","components/Navbar.js","components/Footer.js","components/Home.js","components/utility/graphql.js","components/utility/AboutFunction.js","components/utility/confirmreq.js","components/utility/deleteListComp.js","components/auth/academyInfo.js","components/WordSetting.js","components/utility/editstudent.js","components/utility/perWeekTabs.js","components/utility/detailmorestudent.js","components/utility/totalchart.js","components/utility/expansion.js","components/utility/addstudent.js","components/utility/addTestRecord.js","components/utility/addHomework.js","components/utility/sendMail.js","components/utility/tableview.js","components/Products.js","components/ProductAdmin.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","components/CSVtablepage.js","components/Sample.js","components/utility/multiAddStudent.js","components/mainConsole.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ColorButton","withStyles","theme","root","color","palette","getContrastText","backgroundColor","&:hover","Button","Navbar","handleLogOut","_callee","event","regenerator_default","a","wrap","_context","prev","next","preventDefault","Auth","signOut","_this","props","auth","setAuthStatus","setUser","window","location","href","error","console","log","message","stop","react_default","createElement","style","position","width","className","role","aria-label","src","height","alt","this","logined","isAuthenticated","user","username","borderColor","borderWidth","variant","marginLeft","disableElevation","onClick","Component","Footer","class","display","align","title","target","Home","origin","destination","direction","index","react_fullpage_default","scrollOverflow","sectionsColor","onLeave","bind","afterLoad","render","_ref","state","fullpageApi","padding","scrollAnimation_min_default","animateIn","animateOnce","IconTabs","React","TabPanel","children","value","other","Object","objectWithoutProperties","Typography","assign","component","hidden","concat","aria-labelledby","Box","p","a11yProps","aria-controls","useStyles","makeStyles","flexGrow","classes","_React$useState","useState","_React$useState2","slicedToArray","setValue","Paper","elevation","square","Tabs","centered","onChange","newValue","indicatorColor","textColor","Tab","icon","lib_default","axis","onChangeIndex","queryCstudent","studentsWords","queryCword","createStudent","createStudent3","createWord","updateAll","updateWord","updateHomework","updateTestRecord","deleteWord","AboutFunction","open","setOpen","handleClose","iconstyle","IconButton","ContactSupport_default","Dialog","onClose","aria-describedby","DialogContent","DialogContentText","content","DialogActions","autoFocus","Confirm","button","DialogTitle","send","DeleteListComp","dense","updateDeleted","asyncToGenerator","mark","query","API","graphql","graphqlOperation","input","then","r","NotificationManager","success","IDBIndex","reload","_x","apply","arguments","handleAllDelete","_ref2","_callee2","_context2","deleted","data","listMyTypes","items","map","d","i","words","temp","find","x","input_query","_x2","handleDeletefor","_ref3","_callee3","word","man","_context3","_x3","_x4","react_notifications_lib","List","CommonWords","secondary","common","one","push","name","ListItem","ListItemAvatar","Avatar","Description_default","ListItemText","primary","ListItemSecondaryAction","forEach","handleDelete","info","address","grade","config","require","moment","extendMoment","originalMoment","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","WordSetting","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchProducts","res","products","axios","get","api","invokeUrl","sent","setState","t0","handleChange","addchecked","addexpanded","deletechecked","deleteexpended","csvTojson","sender","result","reader","FileReader","files","readAsText","onload","lines","split","headers","length","obj","currentline","j","File","JSON","stringify","replace","type","handleFileInput","S3","uploadFile","bucketName","dirName","region","accessKeyId","secretAccessKey","SaveWords","catch","err","alert","tempD","Math","random","toString","substring","key","link","_getWordData","_callee4","_context4","tt","filter","wordSet","_makestudenttree","AllStu","treeSet","academy","g","classcomp","c","label","student","temptreeSet","parse","nowGrade","nowClass","studentInfo","percentage","assignment","gradeindex","findIndex","classindex","_getStudentData","_callee5","_context5","selectWord","w","selectedWord","includes","toConsumableArray","addSendData","indexOf","wordset","select","_ref6","_callee6","sw","temp2","ass","_context6","warning","abrupt","haveto","due","calendarValue","start","format","end","oncalendarSelect","states","renderSelectionValue","fontSize","componentDidMount","_callee7","_context7","Promise","all","loading","handleChangeMultiple","handleHavetoChange","today","newproduct","AddOrDelete","range","clone","subtract","_this2","react","WordSetting_TabPanel","right","marginBottom","marginTop","accept","htmlFor","FormControl","InputLabel","Select","labelId","multiple","Input","renderValue","selected","Chip","MenuItem","index_browser_default","nodes","checked","expanded","onCheck","onExpand","icons","check","index_es","uncheck","halfCheck","expandClose","expandOpen","expandAll","collapseAll","parentClose","parentOpen","leaf","marginRight","react_custom_scrollbars_lib","borderRadius","margin","TextField","InputLabelProps","shrink","DateRangePicker_default","onSelect","singleDateRange","deleteexpanded","alignItems","CommonWordsView","allstu","commonWords_id","perword","EditStudent","_React$useState3","_React$useState4","setName","_React$useState5","_React$useState6","setGrade","thisname","All","thisgrade","placeholder","fullWidth","AntTabs","borderBottom","indicator","AntTab","textTransform","minWidth","fontWeight","typography","fontWeightRegular","spacing","fontFamily","join","opacity","&$selected","fontWeightMedium","&:focus","disableRipple","demo1","background","paper","demo2","CustomizedTabs","detaila","undefined","detailh","detailt","PhoneAndroid_default","NoteAdd_default","PostAdd_default","perWeekTabs_TabPanel","ListItemIcon","Inbox_default","etc","done","score","average","arr","round","reduce","Line","dx_react_chart_material_ui_es","Path","path","line","arg","y","val","curve","curveCatmullRom","Root","flexDirection","restProps","Label","whiteSpace","_ref4","Item","item","_ref5","compare","_ref7","series","point","targetSeries","targetPoint","TotalChart","toggleCalendar","calendarOpen","toggleCalendarfalse","forWeekChart","yyyy","Number","mm","dd","record","homework","test","count","weekly","month","week","app","td","m","perRecord1","perRecord2","perHomework1","perHomework2","perTest1","perTest2","weekOfMonth","isNaN","day","forDayChart","tendays","fordaychart","DayChart","perRecord","perHomework","perTest","daychart","selection","click","_ref8","targets","_ref9","_this$state","chartData","selectionType","valueField","argumentField","seriesComponent","rootComponent","itemComponent","labelComponent","dx_react_chart_es","firstDayOfMonth","startOf","firstDayOfWeek","offset","diff","ceil","date","heading","pxToRem","secondaryHeading","text","verticalAlign","details","column","flexBasis","helper","borderLeft","divider","main","textDecoration","DetailedExpansionPanel","Tavg","Aavg","TodayAssemble","accumulator","currentValue","AllAssemble","ExpansionPanel","defaultExpanded","ExpansionPanelSummary","expandIcon","ExpandMore_default","styles","index_esm","textAlign","buildStyles","pathColor","ExpansionPanelDetails","totalchart_TotalChart","Divider","ExpansionPanelActions","AddStudent","age","setAge","aclass","setClass","_React$useState7","_React$useState8","handleRegister","Tooltip","arrow","PersonAdd_default","size","buttontitle","float","HandleTestRecord","save","stackid","_loop","Data","arrayObj","delegateYield","pop","HandleHomework","css","trim","sourceURL","react_html_email_lib","headCSS","cellSpacing","borderTop","lineHeight","data-mc-bar","data-mc-baz","download","descendingComparator","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox_Checkbox","indeterminate","inputProps","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","lighten","light","dark","flex","checkeddelete","selectedid","EnhancedTableToolbar","Selectedid","Selected","num","Toolbar","clsx","defineProperty","Grid","container","justify","placement","Delete_default","FilterList_default","table","border","clip","overflow","top","EnhancedTable","setOrder","setOrderBy","setSelected","setSelectedid","_React$useState9","_React$useState10","page","setPage","_React$useState11","_React$useState12","setDense","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","emptyRows","min","total","tableview_EnhancedTableToolbar","TableContainer","Table","newSelecteds","n","newSelectedsid","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","isItemSelected","todayAvg","totalAvg","hover","selectedIndex","newSelected","newSelectedid","handleClick","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch_Switch","Products","Date","getMonth","getDate","Today","Total","todo","selectgrade","selectclass","handleChangeMultiplegrade","handleChangeMultipleclass","valuetext","handleSliderChange","login","todayfilter","totalfilter","Products_TabPanel","deleteIcon","Done_default","OutlinedInput","endAdornment","InputAdornment","labelWidth","Slider","Slider2","Pageview_default","Checkbox","_ref$type","_ref$checked","ProductAdmin","callChecked","checkedlist","checkedItems","tempBox","comp","groupComp","checkboxes","Storage","put","Map","assertThisInitialized","isChecked","prevState","set","Fragment","ProductAdmin_Checkbox","Products_Products","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","inputs","document","getElementsByClassName","classList","contains","remove","hasOwnProperty","getElementById","add","firstname","lastname","email","verificationcode","password","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","handleSubmit","Validate","objectSpread","signIn","history","onInputChange","onSubmit","components_FormErrors","Register","signUpResponse","signUp","attributes","ForgotPassword","forgotPasswordHandler","ForgotPasswordVerification","passwordVerificationHandler","ChangePassword","ChangePasswordConfirmation","Welcome","steptitle","CsvTable","selectATtree","tablevalue","csv","handleRadioChange","handleFileNameChange","filename","handleNext","activeStep","handleBack","Stepper","orientation","Step","StepLabel","StepContent","Radio","labelPlacement","MakeCsvPage","react_csv","startIcon","disabled","columns","field","dist_default","Sample","company","generateRandom","max","floor","nowMonth","nowDay","bookid","createMyType","apiKey","apiSecret","MultiAddStudent","createStyles","formControlLabel","& label","CustomSwitch","switchBase","&$checked","&$checked + $track","track","Switch","MainConsole","formonthchart","thisMonth","thisDay","nowselected","MonthChart","assemble","Taa","Aaa","taa","aaa","ta","aa","rating","ratelength","noStudent","fivemonths","isValid","handleToggle","currentIndex","newChecked","splice","handleListChange","listIndex","handleChartChange","chartIndex","academyinfo","leng","two","justifyContent","borderTopRightRadius","borderBottomRightRadius","FormGroup","trailColor","mainConsole_TabPanel","AccountCircle_default","rotated","library","faEdit","App","isAuthenticating","note","authenticated","currentSession","session","currentAuthenticatedUser","authProps","BrowserRouter","Navbar_Navbar","Route","exact","Redirect","to","Home_Home","WordSetting_WordSetting","CSVtablepage_CsvTable","ProductAdmin_ProductAdmin","auth_LogIn","auth_Register","auth_ForgotPassword","auth_ForgotPasswordVerification","auth_ChangePassword","ChangePasswordConfirm","mainConsole","Sample_Sample","Boolean","hostname","match","Amplify","configure","mandatorySignIn","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","AWSS3","bucket","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_appsync_apiKey","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b037e870.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1540;","import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\nimport Button from '@material-ui/core/Button';\nimport {withStyles} from '@material-ui/core/styles';\n\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText('rgba(90, 105, 191,1.0)'),\n    backgroundColor: 'rgba(90, 105, 191,1.0)',\n    '&:hover': {\n      backgroundColor: 'rgba(90, 105, 191,0.95)',\n      color: '#fff',\n    },\n  },\n}))(Button);\n\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n      window.location.href=\"/\";\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav style={{backgroundColor:'#fff',position:'absolute',width:'100%'}} className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"hexal logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          {\n            this.props.logined?\n\n            <div className=\"navbar-start\">\n          <a href=\"/\" className=\"link-1\">\n            <img  className=\"hovicon effect-1\" src=\"graph.png\" width=\"20\" height=\"20\" alt=\"home\"/>\n          </a>\n          <a href=\"/wordsetting\" className=\"link-1\">\n            <img className=\"hovicon effect-1\" src=\"manual.png\" width=\"20\" height=\"20\" alt=\"word setting\"/>\n          </a>\n          <a href=\"/products\" className=\"link-1\">\n            <img className=\"hovicon effect-1\" src=\"group.png\" width=\"20\" height=\"20\" alt=\"students setting\"/>\n          </a>\n          <a href=\"/csv\" className=\"link-1\">\n            <img className=\"hovicon effect-1\" src=\"fileadd.png\" width=\"20\" height=\"20\" alt=\"students setting\"/>\n          </a>\n        </div>\n        \n        \n        :\n\n\n            <div className=\"navbar-start\">\n            <a href=\"/\" className=\"link-1\">\n              <img  className=\"hovicon effect-1\" src=\"home-run.png\" width=\"28\" height=\"28\" alt=\"home\"/>\n            </a>\n           \n          </div>\n         \n          }\n          \n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                    <Button style={{borderColor:'#ddd',borderWidth:2,color:'#ddd'}} href=\"/register\" variant=\"outlined\">Register</Button>\n                    <ColorButton style={{marginLeft:10}}  href=\"/login\" variant=\"contained\" disableElevation>\n                      Log in\n                    </ColorButton>\n\n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <ColorButton style={{marginLeft:10}}  href=\"/\" variant=\"contained\" onClick={this.handleLogOut} disableElevation>\n                    Logout\n                  </ColorButton>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n\n    )\n  }\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer id=\"footer\" class=\"footer-1\">\n    <div class=\"main-footer widgets-dark typo-light\">\n    <div class=\"container\">\n    <div style={{display:'flex'}}>\n      \n      <div align=\"center\" style={{width:\"20%\"}}>\n        <img  src=\"NEWLOGO2.png\" width=\"50\" height=\"50\" alt=\"home\"/>\n      </div>\n    \n      <div align=\"center\" style={{width:\"60%\"}}>\n        <div class=\"widget no-box\">\n        <h5>회사소개 / 이용약관 / 개인정보취급방침 / 제휴문의</h5>\n        <ul class=\"thumbnail-widget\">\n        <li>\n        <div >\n          <h5>(우) 08378 서울특별시 구로구 디지털로34길 27 대륭포스트타워3차 1004호, 1005호 대표이사 : 정현진</h5>\n          <h5>사업자등록번호 : 220-81-51475 통신판매업 : 제 1684호</h5>\n        </div>\t\n        </li>\n        <li>\n        <div>\n          <h5>문의전화 : 010-4526-1396 (평일 : 10:00~19:00) E-Mail : realhustlecoder@gmail.com</h5>\n        </div>\t\n        </li>\n        <li>\n        <div><h5>ⓒ NextStepLab.</h5></div>\t\n        </li>\n        </ul>\n        </div>\n      </div>\n    \n  \n    \n      <div align=\"center\" style={{width:\"20%\"}}>\n      \n      <div class=\"widget no-box\">\n      <h5 class=\"widget-title\">Contact Us<span></span></h5>\n      \n      <p><a href=\"mailto:info@domain.com\" title=\"glorythemes\">info@domain.com</a></p>\n      <ul class=\"social-footer2\">\n      <li class=\"\"><a title=\"youtube\" target=\"_blank\" href=\"https://www.youtube.com/\"> <img src=\"home-run.png\" width=\"28\" height=\"28\" alt=\"home\"/></a></li>\n      </ul>\n      </div>\n      </div>\n    \n    </div>\n    </div>\n    </div>\n\n    </footer>\n  )\n}\n","import React, { Fragment } from 'react';\nimport Hero from './Hero';\nimport Button from '@material-ui/core/Button';\nimport Footer from './Footer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SwipeableViews from 'react-swipeable-views';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport ScrollAnimation from 'react-animate-on-scroll';\n\n\nexport default class Home extends React.Component {\n  onLeave(origin, destination, direction) {\n    console.log(\"Leaving section \" + origin.index);\n  }\n  afterLoad(origin, destination, direction) {\n    console.log(\"After load: \" + destination.index);\n  }\n  render() {\n    return (\n      <ReactFullpage\n        scrollOverflow={true}\n        sectionsColor={[\"#fff\", \"#fff\", \"#fff\"]}\n        onLeave={this.onLeave.bind(this)}\n        afterLoad={this.afterLoad.bind(this)}\n        render={({ state, fullpageApi }) => {\n          return (\n            <div id=\"fullpage-wrapper\">\n              <div align=\"center\" className=\"section section1\">\n                <div style={{padding:80}} >\n                <ScrollAnimation animateIn='fadeIn'animateOnce={false}>\n\n                <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n                </ScrollAnimation>\n                  \n                  <img style={{height:400}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n                </div>\n              </div>\n              <div className=\"section\">\n              <div style={{height:700}} align=\"center\" >\n                    <img style={{height:500}} src=\"선생님효과.png\" alt=\"teacher\"/>\n              </div>\n              </div>\n              <div className=\"section\">\n                <IconTabs/>\n              </div>\n            </div>\n          );\n        }}\n      />\n    );\n  }\n}\n\n\n// export default function Home() {\n//   return (\n//     // <Fragment>\n//     //   <section>\n//     //       <div style={{width:\"100%\"}}>\n//     //         <br/>\n//     //         <br/>\n//     //         <br/>\n//     //         <br/>\n//     //         <br/>\n//     //         <div style={{width:\"100%\",backgroundColor:\"#fff\",justifyContents:'center'}}>\n\n//     //              <div align=\"center\">\n//     //                  <h1 style={{color:'#5a69bf'}}>새로운 영어학습의 시작</h1>\n//     //                 <img style={{marginBottom:-6,width:800}} src=\"mainimage2.png\" alt=\"conserve energy\" />\n//     //              </div>\n//     //       </div>\n//     //       </div>\n//     //     </section>\n//     //     <section>\n//     //       <div style={{height:700}} align=\"center\" >\n//     //               <img width={1000} height={700} src=\"선생님효과.png\" alt=\"teacher\"/>\n//     //       </div>\n//     //     </section>\n//     //   <section className=\"container\">\n//     //     <div className=\"columns features\">\n//     //         <div className=\"column is-4\">\n//     //             <div className=\"card is-shady\">\n//     //                 <div className=\"card-content\">\n//     //                     <div className=\"content\">\n//     //                         <h4>Energy conservation</h4>\n//     //                         <p>Purus semper eget duis at tellus at urna condimentum mattis. Non blandit massa enim nec. Integer enim neque volutpat ac tincidunt vitae semper quis. Accumsan tortor posuere ac ut consequat semper viverra nam.</p>\n//     //                         <p><a href=\"/\">Learn more</a></p>\n//     //                     </div>\n//     //                 </div>\n//     //             </div>\n//     //         </div>\n           \n//     //         <div className=\"column is-4\">\n//     //             <div className=\"card is-shady\">\n//     //                  <div className=\"card-content\">\n//     //                     <div className=\"content\">\n//     //                         <h4>처음오셨나요?</h4>\n//     //                         <p>샘플버전을 무료로 제공해드립니다! 한번 경험해보세요! </p>\n//     //                         <Button href=\"/Sample\" style={{backgroundColor:'#5a69bf'}} variant=\"contained\" color=\"primary\" disableElevation>\n//     //                              Sample Now!\n//     //                         </Button>\n//     //                     </div>\n//     //                 </div>\n//     //             </div>\n//     //         </div>\n//     //     </div>\n//     // </section>\n//     // <IconTabs/>\n//     // <Footer/>\n//     // </Fragment>\n  \n//   )\n// }\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n  \nfunction a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n  \n\n\nconst useStyles = makeStyles({\n    root: {\n      flexGrow: 1,\n\n    },\n  });\n \nfunction IconTabs() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n    const handleChangeIndex = index => {\n        setValue(index);\n      };\n    return (\n        <div >\n      <Paper elevation={0} square className={classes.root}>\n        <Tabs\n        centered\n          value={value}\n          onChange={handleChange}\n          variant=\"fullWidth\"\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          aria-label=\"icon tabs example\"\n        >\n          <Tab icon={<img width={100} height={100} src=\"1.png\" alt=\"11111\" />}  {...a11yProps(0)} aria-label=\"phone\" />\n          <Tab icon={<img width={100} height={100} src=\"2.png\" alt=\"22222\" />}  {...a11yProps(1)} aria-label=\"favorite\" />\n          <Tab icon={<img width={100} height={100} src=\"3.png\" alt=\"33333\" />}  {...a11yProps(2)} aria-label=\"person\" />\n        </Tabs>\n      </Paper>\n      <SwipeableViews\n        axis={'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect1.png\" alt=\"effect1\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n            <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect2.png\" alt=\"effect2\" />\n            </div>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <div align=\"center\" style={{height:500}}>\n                <img style={{height:500}} src=\"effect3.png\" alt=\"effect3\" />\n            </div>\n      </TabPanel>\n      </SwipeableViews>\n      </div>\n    );\n  }","export const queryCall=`\r\nquery list{\r\n  listMyTypes{\r\n    items{\r\n      id type name grade class link todo words{\r\n        id name link percentage haveto\r\n      } record{id month day words etc}}\r\n    }\r\n  }\r\n`;\r\n\r\nexport const queryCstudent=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}},limit:100){\r\n    items{\r\n      id type name grade class link todo haveto due \r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n      test{id name score month day}\r\n      homework{id name assignment done month day}\r\n    }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const studentsWords = `query list{\r\n  listMyTypes(filter:{type:{contains:\"student\"}}){\r\n    items{\r\n      id name words{id name link due haveto deleted}\r\n    }\r\n}}` //for deleteWord\r\n\r\n\r\nexport const queryCteacher=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"teacher\"}}){\r\n    items{\r\n      id type name grade class\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const queryCword=`\r\nquery list{\r\n  listMyTypes(filter:{type:{contains:\"word\"}}  limit:100){\r\n    items{\r\n      id name link haveto due deleted\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n\r\nexport const createSample= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto} \r\n      record{id month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\n\r\n// id: Math.random().toString(36).substring(7),\r\n// type: \"sample\",\r\n// name: this.state.username,\r\n// address:this.state.company,\r\n// words:[{\r\n//   id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n//   name:\"2020 VOCA.json\",\r\n//   link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n//   haveto:100,\r\n//   due: due\r\n// },{\r\n// id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n// name:\"2020 VOCA2.json\",\r\n// link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n// haveto:100,\r\n// due: due\r\n// }],\r\n// record:record\r\n// });\r\n\r\n\r\nexport const createStudent= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\nexport const createStudent2= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      grade\r\n      class\r\n      words{id name link haveto}\r\n      record{\r\n        id bookid month day words etc\r\n      }\r\n  }\r\n}\r\n`;\r\nexport const createStudent3= `mutation createMyType($input: CreateMyTypeInput!) {\r\n  createMyType(input: $input) {\r\n      id\r\n      type\r\n      name\r\n      address\r\n      words{id name link haveto due} \r\n      record{id bookid month day words etc}\r\n  }\r\n}\r\n`;\r\n\r\nexport const createWord = `mutation createMyType($input: CreateMyTypeInput!) {\r\n    createMyType(input: $input) {\r\n        id\r\n        type\r\n        name\r\n        grade\r\n        link\r\n        address\r\n        deleted\r\n    }\r\n  }\r\n  `;// address => 기간  grade => have to\r\n\r\n  export const updateAll = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        name\r\n        grade\r\n    }\r\n  }\r\n  `;\r\n\r\n  export const updateWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        words{name link due haveto deleted}\r\n    }\r\n  }\r\n  `;\r\n  export const updateHomework = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      homework{id name assignment done month day}\r\n    }\r\n  }\r\n  `;\r\n  export const updateTestRecord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n      id \r\n      test{id name score month day}\r\n    }\r\n  }\r\n  `;\r\n  export const deleteWord = `mutation updateMyType($input: UpdateMyTypeInput!) {\r\n    updateMyType(input: $input) {\r\n        id\r\n        deleted\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  export const deleteWordOrigin = `mutation deleteMyType($input: DeleteMyTypeInput!) {\r\n    deleteMyType(input: $input) {\r\n      id\r\n    }\r\n  }\r\n  `;\r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"465tq4\"\r\n\t// \t\thomework:{name:\"숙제1\" assignment:50 done:20 date:\"20/02/13\"}\r\n  //   }){\r\n  //     homework{name assignment done date}\r\n  //   }\r\n  // }   \r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:[{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"},\r\n  //     {id:\"sdfgsdfg\"month:2,day:3,words:\"test.json\"},\r\n  //     {id:\"strwebsf\"month:2,day:2,words:\"test.json\"},]\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   updateMyType(input:{\r\n  //     id:\"3p4ugo5b31\"\r\n\t// \t\trecord:{id:\"sgragerewara\"month:2,day:4,words:\"test.json\"}\r\n  //   }){\r\n  //     id record{id,month,day,words}\r\n  //   }\r\n  // }  \r\n\r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"test.json\"\r\n  //     type:\"word\"\r\n  //     name:\"test.json\"\r\n  //     link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //     words:[\r\n  //       {\r\n  //         id: null\r\n  //         name: null\r\n  //         link:null\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name link words{id name link}\r\n  //   }\r\n  // }  \r\n\r\n  // mutation create{\r\n  //   createMyType(input:{\r\n  //     id:\"oatem28pmc\"\r\n  //     type:\"student\"\r\n  //     name:\"이병건\"\r\n  //     grade:\"m1\"\r\n  //     percentage:50,\r\n  //     words:[\r\n  //       {\r\n  //         id: \"test.json\"\r\n  //         name: \"test.json\"\r\n  //         link:\"https://wowproject-wow.s3.ap-northeast-2.amazonaws.com/test.json\"\r\n  //       }\r\n  //     ]\r\n  //   }){\r\n  //     id type name grade percentage words{id name link}\r\n  //   }\r\n  // }\r\n\r\n\r\n// mutation create{\r\n//   createToNote(input:{\r\n//     name:\"note\"\r\n//   \tdescription:\"전체숙제\"\r\n//     grades:[{id:\"01\", name:\"중등 1학년\", students:[\r\n//       {id:\"011\" name:\"홍길동\",percentage:86,assignment:\"숙제\"},\r\n//       {id:\"012\" name:\"이민정\",percentage:30,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"02\", name:\"중등 2학년\", students:[\r\n//       {id:\"021\" name:\"박보영\",percentage:100,assignment:\"숙제\"},\r\n//       {id:\"022\" name:\"신민아\",percentage:60,assignment:\"숙제\"}\r\n//     ]},\r\n//     {id:\"03\", name:\"중등 3학년\", students:[\r\n//       {id:\"031\" name:\"이병건\",percentage:50,assignment:\"숙제\"},\r\n//       {id:\"032\" name:\"주호민\",percentage:90,assignment:\"숙제\"}\r\n//     ]}  \r\n//     ]\r\n//   }){\r\n//     id name description grades{id name students{\r\n//       id name percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n// mutation {\r\n//   deleteToNote (\r\n//     input:{\r\n//       id:\"48f61355-996a-4a46-8638-3799aca806c7\"\r\n//     }\r\n//   ) {\r\n//   \tid\r\n//   }\r\n// }\r\n\r\n// const nodes = [{\r\n//   value: 'mid',\r\n//   label: '중학교',\r\n//   children: [\r\n//       { value: 'm1', label: '1학년' },\r\n//       { value: 'm2', label: '2학년' },\r\n//       { value: 'm3', label: '3학년' },\r\n//   ],\r\n// },{\r\n//   value: 'high',\r\n//   label: '고등학교',\r\n//   children: [\r\n//     { value: 'h1', label: '1학년' },\r\n//     { value: 'h2', label: '2학년' },\r\n//     { value: 'h3', label: '3학년' },\r\n//   ],\r\n// }];\r\n\r\n\r\n\r\n\r\n// mutation create{\r\n//   updateToNote(input:{\r\n//     id:\"9957304a-191c-4f7d-b2a5-192ba1151717\"\r\n//     grades:[{ id:\"01\"\r\n//       students:[{id:\"011\" percentage: 30 assignment: \"string\"}]}]    \r\n//   }){\r\n//     id grades{id students{\r\n//       id percentage assignment\r\n//     }}\r\n//   }\r\n// }\r\n\r\n\r\n// mutation create{\r\n// \tcreateMyType(input:{\r\n//     \ttype:\"word\"\r\n//     \tname:\"중3단어\"\r\n// \t\t\tgrade: \"m3\"\r\n//     \twords:\"단어\"\r\n//   }){\r\n// \ttype name grade words\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// input CreateToNoteInput {\r\n// \tid: ID\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [GradeInput]\r\n// }\r\n\r\n// input DeleteToNoteInput {\r\n// \tid: ID\r\n// }\r\n\r\n// type Grade {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [Student]\r\n// }\r\n\r\n// input GradeInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input ModelBooleanFilterInput {\r\n// \tne: Boolean\r\n// \teq: Boolean\r\n// }\r\n\r\n// input ModelFloatFilterInput {\r\n// \tne: Float\r\n// \teq: Float\r\n// \tle: Float\r\n// \tlt: Float\r\n// \tge: Float\r\n// \tgt: Float\r\n// \tcontains: Float\r\n// \tnotContains: Float\r\n// \tbetween: [Float]\r\n// }\r\n\r\n// input ModelIDFilterInput {\r\n// \tne: ID\r\n// \teq: ID\r\n// \tle: ID\r\n// \tlt: ID\r\n// \tge: ID\r\n// \tgt: ID\r\n// \tcontains: ID\r\n// \tnotContains: ID\r\n// \tbetween: [ID]\r\n// \tbeginsWith: ID\r\n// }\r\n\r\n// input ModelIntFilterInput {\r\n// \tne: Int\r\n// \teq: Int\r\n// \tle: Int\r\n// \tlt: Int\r\n// \tge: Int\r\n// \tgt: Int\r\n// \tcontains: Int\r\n// \tnotContains: Int\r\n// \tbetween: [Int]\r\n// }\r\n\r\n// enum ModelSortDirection {\r\n// \tASC\r\n// \tDESC\r\n// }\r\n\r\n// input ModelStringFilterInput {\r\n// \tne: String\r\n// \teq: String\r\n// \tle: String\r\n// \tlt: String\r\n// \tge: String\r\n// \tgt: String\r\n// \tcontains: String\r\n// \tnotContains: String\r\n// \tbetween: [String]\r\n// \tbeginsWith: String\r\n// }\r\n\r\n// type ModelToNoteConnection {\r\n// \titems: [ToNote]\r\n// \tnextToken: String\r\n// }\r\n\r\n// input ModelToNoteFilterInput {\r\n// \tid: ModelIDFilterInput\r\n// \tname: ModelStringFilterInput\r\n// \tdescription: ModelStringFilterInput\r\n// \tand: [ModelToNoteFilterInput]\r\n// \tor: [ModelToNoteFilterInput]\r\n// \tnot: ModelToNoteFilterInput\r\n// }\r\n\r\n// type Mutation {\r\n// \tcreateToNote(input: CreateToNoteInput!): ToNote\r\n// \tupdateToNote(input: UpdateToNoteInput!): ToNote\r\n// \tUpdateGrade(input: UpdateGradeInput!): [Grade]\r\n// \tUpdateStudent(input: UpdateStudentInput!): Student\r\n// \tdeleteToNote(input: DeleteToNoteInput!): ToNote\r\n// \taddGrade(input: [GradeInput]): [Grade]\r\n// \taddStudent(input: [StudentInput]): Student\r\n// }\r\n\r\n// type Query {\r\n// \tgetToNote(id: ID!): ToNote\r\n// \tlistToNotes(filter: ModelToNoteFilterInput, limit: Int, nextToken: String): ModelToNoteConnection\r\n// }\r\n\r\n// type Student {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input StudentInput {\r\n// \tid: ID!\r\n// \tname: String\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// type Subscription {\r\n// \tonCreateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"createToNote\"])\r\n// \tonUpdateToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"updateToNote\"])\r\n// \tonDeleteToNote: ToNote\r\n// \t\t@aws_subscribe(mutations: [\"deleteToNote\"])\r\n// }\r\n\r\n// type ToNote {\r\n// \tid: ID!\r\n// \tname: String!\r\n// \tdescription: String\r\n// \tgrades: [Grade]\r\n// }\r\n\r\n// input UpdateGradeInput {\r\n// \tid: ID\r\n// \tstudents: [StudentInput]\r\n// }\r\n\r\n// input UpdateStudentInput {\r\n// \tid: ID!\r\n// \tpercentage: Int\r\n// \tassignment: String\r\n// }\r\n\r\n// input UpdateToNoteInput {\r\n// \tid: ID!\r\n// \tgrades: [GradeInput]\r\n// }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nexport default function AboutFunction(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div style={props.style}>\r\n          <div style={props.iconstyle}>\r\n        <IconButton onClick={handleClickOpen} aria-label=\"delete\">\r\n          <ContactSupportIcon style={{ color: '#5a69bf' }} />\r\n        </IconButton>\r\n            </div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {props.content}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n              Agree\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function Confirm(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    props.send();\r\n    setOpen(false);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        {props.button}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={()=>handleSend()} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport { Paper } from '@material-ui/core';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Confirm from './confirmreq'\r\n\r\nexport default function DeleteListComp(props) {\r\n  const [dense, setDense] = React.useState(false);\r\n\r\n\r\n\r\nconst updateDeleted = async(query) =>{\r\n    await API.graphql(graphqlOperation(graphql.updateWord, {input: query})).then(r =>{\r\n        NotificationManager.success('delete Success', `${IDBIndex} 단어장이 삭제 되었습니다`,3000);\r\n    });\r\n    window.location.reload();\r\n}\r\n\r\nconst handleAllDelete = async(id) =>{\r\n\r\n        await API.graphql(graphqlOperation(graphql.deleteWord, {input: {\r\n            id: id,\r\n            deleted:true\r\n          }}))\r\n          \r\n        await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n            data.data.listMyTypes.items.map((d,i)=>{\r\n                if(d.words !==null){\r\n                    let temp = d.words.find(x=>x.id !== id);\r\n                    let input_query={\r\n                        id: d.id,\r\n                        words:temp \r\n                    }\r\n                    updateDeleted(input_query);\r\n                }\r\n            })\r\n        });\r\n}\r\n\r\nconst handleDeletefor = async(word,man) =>{\r\n\r\n  await API.graphql(graphqlOperation(graphql.studentsWords)).then(data =>{\r\n    // alert(JSON.stringify(data))\r\n      data.data.listMyTypes.items.map((d,i)=>{\r\n        if(d.id ===man){\r\n          if(d.words !==null){\r\n            let temp = d.words.find(x=>x.id !== word);\r\n            let input_query={\r\n                id: d.id,\r\n                words:temp \r\n            }\r\n            // alert(JSON.stringify(input_query))\r\n            updateDeleted(input_query);\r\n        }\r\n        }\r\n      })\r\n  });\r\n}\r\n\r\nconst handleDelete = (id,data) =>{\r\n    data.forEach(d =>{\r\n      handleDeletefor(id,d.id)\r\n    })\r\n}\r\n\r\n  return (\r\n    <Paper elevation={3}>\r\n        <NotificationContainer/>\r\n            <List dense={dense}>\r\n            {\r\n              props.CommonWords.map((data,i)=>{\r\n                  let secondary = [];\r\n                   data.common.map(one=> secondary.push(` ${one.name} `))\r\n                    return(\r\n                        <ListItem>\r\n                        <ListItemAvatar>\r\n                          <Avatar>\r\n                            <DescriptionIcon />\r\n                          </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                          primary={data.name}\r\n                          secondary={secondary}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <div style={{display:'flex'}}>\r\n                            <Confirm button=\"delete\" title=\"delete\" content={`${secondary}학생의 ${data.name}을 삭제하겠습니까?`} send={()=>handleDelete(data.id,data.common)}/>\r\n                            <Confirm button=\"delete All\" title=\"delete\" content={` ${data.name}을 가진 모든 학생에게서 ${data.name}을 삭제하겠습니까?`} send={()=>handleAllDelete(data.id)}/>\r\n                          </div>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    );\r\n                })      \r\n            }\r\n            </List>\r\n            </Paper>\r\n  );\r\n}\r\n\r\n                      \r\n                        // <div style={{display:'flex'}}>\r\n                        //     <div style={{width:80,margin:10}}>\r\n                        //         {data.name}\r\n                        //     </div>\r\n                        //     <div style={{display:'flex'}}>\r\n                        //         {\r\n                        //             data.common.map((one,i)=>{\r\n                        //                 return(\r\n                        //                 <div style={{margin:10}}>{one.name}</div>\r\n                        //                 );\r\n                        //             })\r\n                        //         }\r\n                        //     </div>\r\n                        // </div>","export const info={\r\n    name:\"정인학원\",\r\n    address:\"의왕시오전동\",\r\n    grade:[14,15,16,17,18],\r\n    class:[\"c\",\"b\",\"a\",\"s\"]\r\n}\r\n\r\n","import React, { Component, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport DateRangePicker from \"react-daterange-picker\";\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport originalMoment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DeleteListComp from './utility/deleteListComp'\r\nimport * as academy from './auth/academyInfo'\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nconst config = require('../config.json');\r\nconst moment = extendMoment(originalMoment);\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nexport default class WordSetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const today = moment();\r\n    this.state = { \r\n      value:0,  \r\n      newproduct: null,\r\n      products: [],\r\n      \r\n      addchecked: [],\r\n      addexpanded: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],\r\n      selectedWord:[],\r\n      AddOrDelete:true,\r\n      select:[],\r\n      calendarValue: moment.range(today.clone().subtract(1, \"days\"), today.clone())//calendar\r\n     };\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n\r\n\r\n  csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    let name = sender.target.files[0].name\r\n\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            let e = new File([JSON.stringify(result)], name.replace('.csv','.json'), {type: \"application/json\"})\r\n            this.handleFileInput(e);\r\n            // var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(result));\r\n            // var dlAnchorElem = document.createElement('a');\r\n            // dlAnchorElem.setAttribute(\"href\",dataStr);\r\n            // dlAnchorElem.setAttribute(\"download\", \"newworkbook.json\");\r\n            // dlAnchorElem.click();\r\n  }\r\n}\r\n  // ▽\r\n  handleFileInput =async(e)=>{\r\n      await S3.uploadFile(e, {\r\n          bucketName: config.S3.bucketName,\r\n          dirName:config.S3.dirName,\r\n          region: config.S3.region,\r\n          accessKeyId: config.S3.accessKeyId,\r\n          secretAccessKey: config.S3.secretAccessKey,\r\n      }).then( d =>{\r\n          this.SaveWords(d);\r\n        }).catch(err =>alert(err));\r\n  }\r\n  // ▽       \r\n\r\n  SaveWords = async(tempD)=>{\r\n    const input_query={\r\n      id: Math.random().toString(36).substring(7),\r\n      type: \"word\",\r\n      name: tempD.key.replace(`${config.S3.dirName}/`,\"\"),\r\n      grade:null, // haveto\r\n      link: tempD.location,\r\n      address:null,\r\n      deleted:false\r\n    };\r\n    // alert(JSON.stringify(input_query))\r\n    NotificationManager.success('Upload Success', '단어장을 저장하였습니다',3000); \r\n    await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(()=>\r\n      this._getWordData()\r\n    );\r\n  }\r\n  // ▽\r\n  _getWordData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCword)).then(data =>{\r\n   \r\n    let tt = data.data.listMyTypes.items.filter(x=> x.deleted === null || x.deleted ===false);\r\n    // alert(JSON.stringify(tt))\r\n      this.setState({wordSet:tt})\r\n    })\r\n  }\r\n \r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectWord=(w)=>{\r\n        if(this.state.selectedWord.includes(w) === false){\r\n            this.setState({\r\n                selectedWord: [...this.state.selectedWord, w]\r\n            });\r\n        }else{\r\n            this.setState({selectedWord: this.state.selectedWord.filter(function(word) { \r\n                return word !== w\r\n            })});\r\n        }  \r\n  }\r\n\r\n  addSendData = () =>{\r\n    \r\n    this.state.AllStu.map((student, i)=>{    \r\n        if(this.state.addchecked.indexOf(student.value) !== -1){ \r\n\r\n              let wordset = this.state.wordSet\r\n\r\n            this.state.select.map(async(sw,i)=>{//선택된 단어장\r\n\r\n \r\n                let temp = student.words!==null?student.words.findIndex(x => x.label === sw):-2\r\n                let temp2 = this.state.wordSet.findIndex(x => x.name === sw)\r\n\r\n              if(temp!==-1&&temp!==-2){\r\n                    NotificationManager.warning('Upload Failed', `${student.label}이 이미 ${sw}을 가지고 있습니다.`,3000);\r\n                    return \"\";\r\n                }\r\n              else if(temp2 !== -1){\r\n\r\n                  wordset[temp2].haveto = this.state.haveto;\r\n                  wordset[temp2].due = `${this.state.calendarValue.start.format(\"YYYY-MM-DD\")}/${this.state.calendarValue.end.format(\"YYYY-MM-DD\")}`\r\n                  const ass = temp===-2?[wordset[temp2]]:student.words.concat(wordset[temp2])\r\n\r\n                  const input_query={\r\n                    id: student.value,\r\n                    words: ass,\r\n                  };\r\n\r\n                await API.graphql(graphqlOperation(graphql.updateWord, {input: input_query})).then(data =>{\r\n                     NotificationManager.success('Upload Success', `${student.label}에게 ${sw}을 업로드 하였습니다.`,3000);\r\n                })\r\n                }else return 0\r\n              })\r\n\r\n        }else return 0;\r\n    })\r\n  }\r\n  \r\n  oncalendarSelect = (calendarValue, states) => {\r\n    this.setState({ calendarValue, states });\r\n  };//calendar\r\n\r\n\r\n\r\n  renderSelectionValue = () => {\r\n    return (\r\n      <div style={{padding:25}}>\r\n        <div id=\"calendar\" style={{display:'flex'}}>\r\n          <strong>Start    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.start.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n        <div style={{display:'flex'}}>\r\n          <strong>End    :   </strong>\r\n          <p style={{fontSize:'1.8em'}}>{this.state.calendarValue.end.format(\"YYYY-MM-DD\")}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };//calendar\r\n\r\n  \r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData(), this._getWordData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n  handleChangeMultiple = event => {\r\n    // alert(event.target.value)\r\n    this.setState({select:event.target.value});\r\n  };\r\n\r\n  handleHavetoChange = event => {\r\n    this.setState({haveto:event.target.value});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n\r\n       \r\n\r\n      <Paper elevation={0} position=\"static\">\r\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\r\n          <Tab label=\"단어장 추가\" {...this.a11yProps(0)} />\r\n          <Tab label=\"단어장 삭제\" {...this.a11yProps(1)} />\r\n        </Tabs>\r\n      </Paper>\r\n      <TabPanel value={this.state.value} index={0}>\r\n        <div>\r\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex'}}>\r\n\r\n        \r\n            <div style={{width:\"30%\"}}>\r\n\r\n\r\n            <div style={{marginBottom:50,display:'flex'}}>\r\n            <div style={{marginTop:15}}>\r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\"  name=\"file\" onChange={e => this.csvTojson(e)} accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  +\r\n                </Button>\r\n              </label>\r\n            </div>\r\n            \r\n            <div id=\"selecter\" style={{width:\"50%\",marginLeft:10}}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel id=\"demo-mutiple-chip-label\">select</InputLabel>\r\n          <Select\r\n            labelId=\"demo-mutiple-chip-label\"\r\n            id=\"demo-mutiple-chip\"\r\n            multiple\r\n            value={this.state.select}\r\n            onChange={event =>this.handleChangeMultiple(event)}\r\n            input={<Input id=\"select-multiple-chip\" />}\r\n            renderValue={selected => (\r\n              <div>\r\n                {\r\n                selected.map((w,i) => (\r\n                   <Chip\r\n                   key={i}\r\n                   label={w.replace('.json','')}\r\n                 />\r\n                ))\r\n                }\r\n              </div>\r\n            )}\r\n            MenuProps={MenuProps}\r\n          >{this.state.wordSet.map(w => (\r\n            <MenuItem key={w.id} value={w.name}>\r\n              {w.name.replace('.json','')}\r\n            </MenuItem>\r\n          ))}\r\n          </Select>\r\n        </FormControl>\r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.addchecked}\r\n                expanded={this.state.addexpanded}\r\n                onCheck={checked =>{ this.setState({ addchecked:checked })}}\r\n                onExpand={expanded =>{ this.setState({ addexpanded:expanded })} }\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />             \r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"100%\",display:'flex'}} >\r\n              <div style={{marginRight:100}}>\r\n\r\n                <div>\r\n                  <strong>WordBook</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                     {//if selected, print that\r\n                          this.state.select.map((word,i)=>{\r\n                            return(\r\n                              <Chip\r\n                                style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                key={word}\r\n                                label={word.replace('.json','')}\r\n                              />\r\n                            );\r\n                        })\r\n                    }\r\n                  </Scrollbars>\r\n                  \r\n                </div>\r\n\r\n                <div>\r\n                  <strong>Students</strong>\r\n                  <Scrollbars style={{ height: 110,width: 300,display:'flex',backgroundColor:\"#F4F5F7\",borderRadius:20 }}>\r\n                  {\r\n                      this.state.AllStu.map((student, i)=>{    \r\n                          if(this.state.addchecked.indexOf(student.value) !== -1){\r\n                              return(\r\n                                <Chip\r\n                                  style={{margin:5,backgroundColor:'#5a69bf',color:'#fff'}}\r\n                                  key={student.label}\r\n                                  label={student.label}\r\n                                />\r\n                          );\r\n                          }\r\n                          return \"\";\r\n                      })\r\n                      }\r\n                  </Scrollbars>\r\n                  \r\n                </div> \r\n\r\n                <div style={{ height: 80,width: 300}}>\r\n                  <strong>Have to</strong>\r\n                  <div>\r\n                      <TextField\r\n                        value={this.state.haveto}\r\n                        onChange={this.handleHavetoChange}\r\n                        id=\"outlined-number\"\r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n\r\n                </div>  \r\n                <div>\r\n                  <div>{this.renderSelectionValue()}</div>\r\n                  <div>\r\n                    <DateRangePicker\r\n                      value={this.state.calendarValue}\r\n                      onSelect={this.oncalendarSelect}\r\n                      singleDateRange={true}\r\n                    />\r\n                  \r\n                </div>\r\n                <div>\r\n                        <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:300}} onClick={()=>{this.addSendData()}}>\r\n                            send\r\n                        </Button>\r\n                </div>\r\n                </div>\r\n              \r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n      <TabPanel value={this.state.value} index={1}>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n        <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n\r\n            <div style={{width:\"30%\"}}>\r\n\r\n            <div className=\"tile is-ancestor\">\r\n                <CheckboxTree\r\n                nodes={this.state.treeSet}\r\n                checked={this.state.deletechecked}\r\n                expanded={this.state.deleteexpanded}\r\n                onCheck={checked => this.setState({ deletechecked:checked })}\r\n                onExpand={expanded => this.setState({ deleteexpanded:expanded })}\r\n                icons={{\r\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n            }}\r\n            />             \r\n            </div>\r\n            </div>\r\n\r\n            <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                    <CommonWordsView wordSet={this.state.wordSet} allstu={this.state.AllStu} deletechecked={this.state.deletechecked}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n      </TabPanel>\r\n\r\n        </div>\r\n       \r\n\r\n\r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction CommonWordsView(props) {\r\n    let CommonWords = [];\r\n    let commonWords_id =[];\r\n\r\n    props.allstu.map((student, i)=>{                            \r\n        if(props.deletechecked.indexOf(student.value) !== -1){\r\n            if(student.words !== null){\r\n            student.words.map((perword,i)=>{\r\n              if(props.wordSet.findIndex(x=>x.id===perword.id)!==-1){ //delete되지 않은 단어인가?  맞다       \r\n                if(CommonWords.length >0){//맨 처음 push하는 것인가? 아니다\r\n                    CommonWords.map((c,i)=>{\r\n                        \r\n                          if(c.id === perword.id){ // 해당 단어장이 이미 있는가? 없다\r\n                            CommonWords[i].common.push({name:student.label, id:student.value})\r\n                            }\r\n                            else if(commonWords_id.includes(perword.id)===false){// 해당 단어장이 이미 있는가? 있다\r\n                                CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                                commonWords_id.push(perword.id);\r\n                            } \r\n                        \r\n                    })\r\n                }else if(CommonWords.length === 0){//맨 처음 push하는 것인가? 맞다\r\n                    CommonWords.push({id:perword.id,name:perword.name,common:[{name:student.label, id:student.value}]})\r\n                    commonWords_id.push(perword.id);\r\n                }\r\n              }\r\n            })\r\n          }\r\n        }\r\n    })\r\n    \r\n    return (\r\n      <Scrollbars style={{height:500}}>\r\n          <div style={{width:\"80%\"}}><DeleteListComp commonWords_id={commonWords_id} CommonWords={CommonWords}/></div>\r\n      </Scrollbars>\r\n    );\r\n  }\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n\r\nexport default function EditStudent(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [name, setName] =  React.useState('');\r\n  const [grade, setGrade] =  React.useState('');\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n//   alert(JSON.stringify(props.All));\r\n\r\n  const handleFileInput = async()=>{\r\n      if(name !==''&& grade!==''){\r\n        await API.graphql(graphqlOperation(graphql.updateAll, {input: {\r\n            id: props.id,\r\n            name: name,\r\n            grade:grade,\r\n          }})).then(handleClose())\r\n      }else{\r\n          alert(\"모두 입력해주세요\")\r\n      }\r\n}\r\n\r\nconst thisname = props.All.find(x => x.id === props.id).name;\r\nconst thisgrade = props.All.find(x => x.id === props.id).grade;\r\n// const todo = props.All.find(x => x.id === props.id).todo;\r\n\r\n\r\n  //   id type name grade link words\r\n  return (\r\n    <div>\r\n      <Button color=\"primary\" onClick={handleClickOpen}>\r\n        Edit\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here. We will send updates\r\n            occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"name\"\r\n            placeholder={thisname}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            value={grade}\r\n            onChange={(e) => setGrade(e.target.value)}\r\n            autoFocus\r\n            margin=\"dense\"\r\n            label=\"grade\"\r\n            placeholder={thisgrade}\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleFileInput} color=\"primary\">\r\n            Edit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd'; //test\r\nimport PostAddIcon from '@material-ui/icons/PostAdd'; //test\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/Inbox';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: '1px solid #e8e8e8',\r\n  },\r\n  indicator: {\r\n    backgroundColor: '#5a69bf',\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles(theme => ({\r\n  root: {\r\n    textTransform: 'none',\r\n    minWidth: 50,\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    marginRight: theme.spacing(4),\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      color: '#5a69bf',\r\n      opacity: 1,\r\n    },\r\n    '&$selected': {\r\n      color: '#5a69bf',\r\n      fontWeight: theme.typography.fontWeightMedium,\r\n    },\r\n    '&:focus': {\r\n      color: '#5a69bf',\r\n    },\r\n  },\r\n  selected: {},\r\n}))(props => <Tab disableRipple {...props} />);\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  padding: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  demo1: {\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  demo2: {\r\n    backgroundColor: '#2e1534',\r\n  },\r\n}));\r\n\r\nexport default function CustomizedTabs(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const data = props.data===[]?[]:props.data;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const detaila = data.detaila===undefined?[]:data.detaila;\r\n  const detailh = data.detailh===undefined?[]:data.detailh;\r\n  const detailt = data.detailt===undefined?[]:data.detailt;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.demo1}>\r\n        <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n          <AntTab  icon={<PhoneAndroidIcon />} {...a11yProps(0)} />\r\n          <AntTab  icon={<NoteAddIcon />}  {...a11yProps(1)} />\r\n          <AntTab  icon={<PostAddIcon />}  {...a11yProps(2)}/>\r\n        </AntTabs>\r\n    </div>\r\n    <div>\r\n                  <TabPanel value={value} index={0}>\r\n                   \r\n                    <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detaila.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.words.replace(\"https://wowproject-wow.s3.amazonaws.com/demo/\",\"\").replace(\".json\",\"\")} secondary={x.etc} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Scrollbars>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={1}>\r\n                  <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detailh.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.name} secondary={x.done} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    </Scrollbars>\r\n                  </TabPanel>\r\n                  <TabPanel value={value} index={2}>\r\n                  <Scrollbars style={{ height: 500 }}>\r\n                    {\r\n                        detailt.map(x=>{\r\n                            return(\r\n                            <ListItem>\r\n                                <ListItemIcon>\r\n                                    <InboxIcon />\r\n                                </ListItemIcon>\r\n                            <ListItemText primary={x.name} secondary={x.score} />\r\n                            </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                   </Scrollbars>\r\n                  </TabPanel>\r\n                </div>\r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n  ","import React,{Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Sparklines, SparklinesBars } from 'react-sparklines';\r\n\r\nconst average = arr => {\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\nexport default class DetailMoreStudent extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          loading:true,  \r\n          expanded:false,\r\n          dialog:false,\r\n          words:this.props.words,\r\n          weekly:this.props.weekly,\r\n          detaila:null\r\n         };\r\n    };\r\n\r\n    handleChange = panel => (event, isExpanded) => {\r\n      this.setState({expanded:isExpanded ? panel : false});\r\n    };\r\n    handleClickOpen = () => {\r\n        this.setState({dialog:true})\r\n      };\r\n    \r\n    handleClose = () => {\r\n        this.setState({dialog:false})\r\n      };\r\n\r\n    componentDidMount =()=>{\r\n        let app =[];\r\n        let homework =[];\r\n        let test =[];\r\n\r\n        this.props.weekly.forEach(x=>{\r\n            let aa = x.detaila.map(a=>a.etc);\r\n            app.push(average(aa))\r\n        })\r\n        alert(JSON.stringify(app))\r\n        this.setState({detaila:app,loading:false})\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.loading?\r\n                    <div></div>:\r\n                    <div>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                            More\r\n                        </Button>\r\n                        <Dialog\r\n                            open={this.state.dialog}\r\n                            onClose={this.handleClose}\r\n                            aria-labelledby=\"alert-dialog-title\"\r\n                            aria-describedby=\"alert-dialog-description\"\r\n                        >\r\n\r\n                            <DialogContent>\r\n                                <div style={{width:100,height:20}}>\r\n\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>\r\n                                <div style={{width:100,height:20}}>\r\n\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>                                \r\n                                <div style={{width:100,height:20}}>\r\n                                        <Sparklines width={100} height={20} data={this.state.detaila}>\r\n                                            <SparklinesBars color=\"blue\"/>\r\n                                        </Sparklines>\r\n                                </div>                              \r\n                                {\r\n                                    this.state.words.map((x,i)=>{\r\n                                        return(\r\n                                            <div>\r\n                                                <ExpansionPanel expanded={this.state.expanded === x.id} onChange={this.handleChange(x.id)}>\r\n                                                <ExpansionPanelSummary\r\n                                                    expandIcon={<ExpandMoreIcon />}\r\n                                                    aria-controls=\"panel1bh-content\"\r\n                                                    id={x.id}\r\n                                                >\r\n                                                    <Typography>{x.name}</Typography>\r\n                                                </ExpansionPanelSummary>\r\n                                                <ExpansionPanelDetails>\r\n                                                    <Typography>\r\n                                                    Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat. Aliquam eget\r\n                                                    maximus est, id dignissim quam.\r\n                                                    </Typography>\r\n                                                </ExpansionPanelDetails>\r\n                                                </ExpansionPanel>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\r\n                                Agree\r\n                            </Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </div>\r\n                }\r\n    </div>\r\n        );\r\n    }\r\n    \r\n  }","\r\n  \r\n  import * as React from 'react';\r\n  import {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    LineSeries,\r\n    Legend,BarSeries,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\n\r\n\r\n  import { Animation,EventTracker,SelectionState,Stack } from '@devexpress/dx-react-chart';\r\n  import {\r\n    curveCatmullRom,\r\n    line,\r\n  } from 'd3-shape';\r\n  import moment from 'moment'\r\n  import DateRangePicker from \"react-daterange-picker\";\r\n  import Dialog from '@material-ui/core/Dialog';\r\n  import DialogActions from '@material-ui/core/DialogActions';\r\n  import DialogContent from '@material-ui/core/DialogContent';\r\n  import Button from '@material-ui/core/Button';\r\n  import { withStyles } from '@material-ui/core/styles';\r\n  import CustomizedTabs from './perWeekTabs'\r\n  import DetailMoreStudent from './detailmorestudent'\r\n  const Line = props => (\r\n    <LineSeries.Path\r\n      {...props}\r\n      path={line()\r\n        .x(({ arg }) => arg)\r\n        .y(({ val }) => val)\r\n        .curve(curveCatmullRom)}\r\n    />\r\n  );\r\n  \r\n  const legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n  const legendLabelStyles = theme => ({\r\n    label: {\r\n      marginBottom: theme.spacing(1),\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  });\r\n  const legendItemStyles = () => ({\r\n    item: {\r\n      flexDirection: 'column-reverse',\r\n    },\r\n  });\r\n  \r\n  const legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n  );\r\n  const legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n  );\r\n  const legendItemBase = ({ classes, ...restProps }) => (\r\n    <Legend.Item className={classes.item} {...restProps} />\r\n  );\r\n  const Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n  const Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n  const Item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\r\n\r\n\r\n\r\n  const compare = (\r\n    { series, point }, { series: targetSeries, point: targetPoint },\r\n  ) => series === targetSeries && point === targetPoint;\r\n\r\n\r\n  export default class TotalChart extends React.PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        loading:false,\r\n        calendarValue: moment(),//calendar\r\n        selection: [],\r\n        calendarOpen:false,\r\n        selected:0,\r\n        daychart:undefined,\r\n        weekly:[],\r\n        };\r\n\r\n\r\n        this.click = ({ targets }) => {\r\n          const target = targets[0];\r\n          if (target) {\r\n          if(target.point!==undefined){\r\n              this.setState(({ selection,daychart }) => ({\r\n                selection: selection[0] && compare(selection[0], target) ? [] : [target],\r\n                selected:target.point\r\n              }));\r\n            }\r\n          }\r\n        };\r\n      }\r\n\r\n      toggleCalendar=()=>{\r\n        this.setState({ calendarOpen:true });\r\n      }\r\n      toggleCalendarfalse=()=>{\r\n        this.setState({ calendarOpen:false });\r\n      }\r\n      oncalendarSelect = (calendarValue, states) => {\r\n        this.toggleCalendarfalse()\r\n        this.setState({ calendarValue });\r\n        this.forWeekChart()\r\n      };//calendar\r\n\r\n    \r\n      forWeekChart=()=>{\r\n        const yyyy = Number(this.state.calendarValue.format(\"YYYY\"));\r\n        const mm = Number(this.state.calendarValue.format(\"MM\"));\r\n        const dd = Number(this.state.calendarValue.format(\"DD\"));\r\n  \r\n        const record = this.props.record\r\n        const homework = this.props.homework\r\n        const test = this.props.test\r\n        let count = 0;\r\n        let weekly = [\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n          {month:0,week:0,arg:'', app:[],homework:[],test:[], detaila:[],detailh:[],detailt:[]},\r\n\r\n      ];\r\n        let td = moment([yyyy, mm, dd]);\r\n\r\n        let m =0;\r\n        let d =0;\r\n        let w =0;\r\n        let index=0;\r\n        let perRecord1 = []\r\n        let perRecord2 = []\r\n        let perHomework1 = []\r\n        let perHomework2 = [];\r\n        let percentage =0\r\n        let perTest1 = []\r\n        let perTest2 = []\r\n\r\n        for(let i=40;i>-1;i--){\r\n\r\n          m = moment(td).subtract(i, 'day').subtract(1, 'month').format('MM')\r\n          d = moment(td).subtract(i, 'day').format('DD')\r\n          w = weekOfMonth(moment(`${d}/${m}/2020`, \"DD/MM/YYYY\"))\r\n          \r\n          if(isNaN(w)===false){\r\n            // alert(`${m}월${d}일 // ${JSON.stringify(weekly[index])}`);\r\n            m=Number(m)\r\n            d=Number(d)\r\n            index = weekly.findIndex(x=>x.month === m&&x.week ===w);\r\n  \r\n            if(index===-1){\r\n              count++\r\n              index = count\r\n              weekly[index].month = m; \r\n              weekly[index].week = w;\r\n              weekly[index].arg =`${m}월${w}주`\r\n            }\r\n  \r\n            if(record !==null){\r\n                perRecord1 = record.filter(x=>x.month===m && Number(x.day)===d);\r\n                perRecord2 = perRecord1.map(x => x.etc)\r\n                weekly[index].detaila=weekly[index].detaila.concat(perRecord1);\r\n                weekly[index].app=weekly[index].app.concat(perRecord2);\r\n            }\r\n              \r\n            if(homework!==null){\r\n                perHomework1 = homework.filter(x=>Number(x.month)===m && Number(x.day)===d)\r\n                perHomework2 = perHomework1.map(x => {\r\n                percentage = Math.round((x.done/x.assignment)*100)\r\n                  return percentage\r\n                });\r\n                weekly[index].detailh=weekly[index].detailh.concat(perHomework1);\r\n                weekly[index].homework=weekly[index].homework.concat(perHomework2);\r\n            }\r\n              \r\n             if(test!==null){\r\n                perTest1 = test.filter(x=>x.month===m && Number(x.day)===d)\r\n                perTest2 = perTest1.map(x => {\r\n                  return x.score\r\n                });\r\n                weekly[index].detailt=weekly[index].detailt.concat(perTest1);\r\n                weekly[index].test=weekly[index].test.concat(perTest2);\r\n             }   \r\n\r\n          }\r\n      }\r\n      \r\n      weekly.forEach((x,i)=>{\r\n        weekly[i].app = average(x.app)\r\n        weekly[i].homework = average(x.homework)\r\n        weekly[i].test = average(x.test)\r\n      })\r\n\r\n      this.setState({weekly:weekly,loading:true})\r\n      }\r\n    \r\n      forDayChart=(y,m,d)=>{\r\n      let tendays = [];\r\n      let td = [y, m, d];\r\n      for(let i=9;i>-1;i--){\r\n          const d = moment(td).subtract(i, 'day').format('DD')\r\n          tendays.push(d);\r\n      }\r\n      \r\n      return tendays\r\n    }//for day chart 1\r\n    \r\n    updateAll=(y,m,d)=>{\r\n      const record = this.props.record\r\n      const homework = this.props.homework\r\n      const test = this.props.test\r\n\r\n    \r\n      const fordaychart = this.forDayChart(y,m,d);\r\n      \r\n      let DayChart = [\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        {day:null,app:[],homework:[],test:[],info:{homework:[],record:[],test:[]}},\r\n        ]\r\n\r\n        fordaychart.forEach((day,i)=>{\r\n          if(DayChart[i].day ===null){DayChart[i].day = day;}\r\n          // record.forEach(x=> alert(`${x.day}   ${day}  ${Number(x.day)===Number(day)}`  ))\r\n         \r\n          let perRecord = record.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => x.etc);\r\n          DayChart[i].app=DayChart[i].app.concat(perRecord);\r\n          \r\n\r\n          let perHomework = homework.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => {\r\n            const percentage = Math.round((x.done/x.assignment)*100)\r\n            DayChart[i].info.homework.push({name:percentage,percentage:percentage});\r\n            return percentage\r\n          });\r\n          DayChart[i].homework=DayChart[i].homework.concat(perHomework);\r\n          \r\n\r\n          let perTest = test.filter(x=>x.month===m && Number(x.day)===Number(day)).map(x => {\r\n            DayChart[i].info.test.push({name:x.score,score:x.score});\r\n            return x.score\r\n          });\r\n          DayChart[i].test=DayChart[i].test.concat(perTest);\r\n          \r\n          \r\n      })\r\n\r\n      this.setState({daychart:DayChart,loading:true})\r\n    }\r\n\r\n\r\n\r\n\r\n    componentDidMount=()=>{\r\n      this.forWeekChart()\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n      const {weekly: chartData,selection,selected} = this.state;\r\n\r\n      return (\r\n            <div>\r\n            {\r\n              this.state.loading?\r\n              <div style={{display:'flex'}}>\r\n                <div style={{width:400}}>\r\n                  \r\n                  <div style={{margin:20}}>\r\n                                        {/* <DetailMoreStudent words={this.props.words} weekly={chartData}/> */}\r\n                                        <Button variant=\"outlined\" color=\"primary\" onClick={this.toggleCalendar}>\r\n                                            {this.state.calendarValue.format(\"YY/MM/DD\")}\r\n                                        </Button>\r\n                                        <Dialog\r\n                                            open={this.state.calendarOpen}\r\n                                            onClose={this.toggleCalendarfalse}\r\n                                            aria-labelledby=\"alert-dialog-title\"\r\n                                            aria-describedby=\"alert-dialog-description\"\r\n                                        >\r\n                                            \r\n                                            <DialogContent>\r\n                                                <DateRangePicker\r\n                                                    selectionType='single'\r\n                                                    value={this.state.calendarValue}\r\n                                                    onSelect={this.oncalendarSelect}\r\n                                                    singleDateRange={true}\r\n                                                />\r\n                                            </DialogContent>\r\n                                            <DialogActions>\r\n                                            <Button onClick={this.toggleCalendarfalse} color=\"primary\">\r\n                                                Disagree\r\n                                            </Button>\r\n                                            </DialogActions>\r\n                                        </Dialog>\r\n                                        </div>\r\n              <Chart\r\n                data={chartData}\r\n              >\r\n                <ArgumentAxis />\r\n                <ValueAxis />\r\n                <BarSeries\r\n                name=\"homework\"\r\n                color='#F4F5F7'\r\n                valueField=\"homework\"\r\n                argumentField=\"arg\"\r\n              />\r\n                <BarSeries\r\n                name=\"app\"\r\n                color='#5a69bf'\r\n                valueField=\"app\"\r\n                argumentField=\"arg\"\r\n              />\r\n                <LineSeries\r\n                  name=\"test\"\r\n                  color='#ddd'\r\n                  valueField=\"test\"\r\n                  argumentField=\"arg\"\r\n                  seriesComponent={Line}\r\n                />\r\n              \r\n                <Legend position=\"bottom\" rootComponent={Root} itemComponent={Item} labelComponent={Label} />\r\n                <Animation />\r\n                <Stack />\r\n                <EventTracker onClick={this.click} />\r\n                <SelectionState selection={selection} />\r\n\r\n              </Chart>\r\n                </div>\r\n                <div style={{width:300}}>\r\n                <CustomizedTabs data={chartData[selected]}/>\r\n                </div>\r\n               \r\n              </div>\r\n              :<div>\r\n                <p>loading</p>\r\n              </div>\r\n            }\r\n          </div>\r\n         \r\n      );\r\n    }\r\n  }\r\n  \r\n  const average = arr => {\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\n  function weekOfMonth (input) {\r\n    const firstDayOfMonth = input.clone().startOf('month');\r\n    const firstDayOfWeek = firstDayOfMonth.clone().startOf('week');\r\n    const offset = firstDayOfMonth.diff(firstDayOfWeek, 'days');\r\n  \r\n    return Math.ceil((input.date() + offset) / 7);\r\n  }","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {  buildStyles,CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport EditStudent from './editstudent'\r\nimport TotalChart from './totalchart';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '50%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DetailedExpansionPanel(props) {\r\n  const classes = useStyles();\r\n  const [selected, setselected] = React.useState('');\r\n  let Tavg = 0;\r\n  let Aavg = 0;\r\n  const words = props.All.find(x => x.id === props.id).words;\r\n  \r\n  if(props.TodayAssemble.length >0){\r\n    Tavg =props.TodayAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/props.TodayAssemble.length;\r\n  }\r\n  if(props.AllAssemble.length>0){\r\n    Aavg =props.AllAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/props.AllAssemble.length;\r\n  }\r\n\r\n  // alert(props.record)\r\n  return (\r\n    <div className={classes.root}>\r\n      <ExpansionPanel defaultExpanded={false}>\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n        >\r\n          <div styles={{width:50}} className={classes.column}>\r\n            <Typography className={classes.heading}>{props.name}</Typography>\r\n          </div>\r\n          <div style={{display:'flex'}} className={classes.column}>\r\n\r\n              <div style={{width:100}}>\r\n              <CircularProgressbarWithChildren value={Math.round(Tavg)}>\r\n                <div style={{textAlign:'center' }}>\r\n                  <p style={{ fontSize: 15,marginBottom:-10}}>Today</p>                   \r\n                  <strong style={{ fontSize: 35}}>{Math.round(Tavg)}</strong> \r\n                  <strong style={{ fontSize: 20}}>%</strong> \r\n                </div>\r\n\r\n              </CircularProgressbarWithChildren>\r\n              </div>\r\n\r\n              <div style={{width:100,marginLeft:30}}>\r\n              <CircularProgressbarWithChildren \r\n              styles={buildStyles({\r\n                textColor: '#DC2C1A',\r\n                pathColor: '#5a69bf',\r\n                backgroundColor: '#DC2C1A',\r\n                })} value={Math.round(Aavg)}>\r\n                <div style={{textAlign:'center' }}>\r\n                  <p id=\"pfont\" style={{ fontSize: 15,marginBottom:-10}}>Total</p>                   \r\n                  <strong style={{ fontSize: 35,color:'#5a69bf'}}>{Math.round(Aavg)}</strong> \r\n                  <strong style={{ fontSize: 20,color:'#5a69bf'}}>%</strong> \r\n                </div>\r\n              </CircularProgressbarWithChildren>\r\n              </div>\r\n\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n\r\n        {words !== null?\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <div style={{width:'100%'}}>\r\n            <TotalChart\r\n              words={words}\r\n              record={props.record}\r\n              homework={props.homework}\r\n              test={props.test}\r\n            />\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n        :\r\n        <div></div>\r\n        }\r\n        <Divider />\r\n        <ExpansionPanelActions>\r\n          \r\n          <EditStudent id={props.id} All={props.All}/>\r\n        </ExpansionPanelActions>\r\n      </ExpansionPanel>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport * as academy from '../auth/academyInfo';\r\nimport AboutMultiple from './AboutFunction'\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\n\r\nexport default function AddStudent() {\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState('');  \r\n  const [aclass, setClass] = React.useState('');\r\n  const [name, setName] = React.useState('');\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n\r\n  const handleRegister = async() =>{\r\n    if(age !== '' && aclass !== '' && name !==''){\r\n      const input_query={\r\n        id: Math.random().toString(36).substring(7),\r\n        type: \"student\",\r\n        name: name,\r\n        grade:age,\r\n        class:aclass\r\n      };\r\n      await API.graphql(graphqlOperation(graphql.createStudent, {input: input_query})).then(r =>{\r\n          NotificationManager.success('Upload Success', `${name} 학생이 저장 되었습니다`,3000);\r\n          handleClose()     \r\n      });\r\n    }else{\r\n      NotificationManager.error('failed', `항목을 모두 채워주세요`,3000);\r\n    }\r\n  }\r\n\r\n  const handleAgeChange = event => {\r\n    setAge(event.target.value);\r\n  };\r\n  const handleclassChange = event => {\r\n    setClass(event.target.value);\r\n  };\r\n  const handlenameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n\r\n const csvTojson = (sender)=>{\r\n        // check file extd\r\n    var result = [];\r\n    var reader = new FileReader();\r\n    reader.readAsText(sender.target.files[0],'EUC-KR');\r\n    reader.onload = (sender) => {\r\n        //csv to json\r\n        var data = sender.target.result;\r\n            let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n            var headers=lines[0].split(\",\");\r\n            for(var i=1;i<lines.length;i++){\r\n                var obj = {};\r\n                var currentline=lines[i].split(\",\");\r\n                for(var j=0;j<headers.length;j++){\r\n                    obj[headers[j]] = currentline[j];\r\n                }\r\n                result.push(obj);\r\n            }\r\n            handleFileInput(result);\r\n  }\r\n}\r\n\r\n  const handleFileInput =(e)=>{ //multiple\r\n    try {\r\n        let res = JSON.parse(e)\r\n        res.map(async(man,i)=>{\r\n          const input_query={\r\n            id: Math.random().toString(36).substring(7),\r\n            type: \"student\",\r\n            name: man.name,\r\n            grade:man.grade,\r\n            class:man.class\r\n          };\r\n          await API.graphql(graphqlOperation(graphql.createStudent, {input: input_query})).then(r =>{\r\n            if(i === res.length-1){\r\n              // alert(`${i}--${res.length}--${res[0].name} 외 ${res.length}명이 저장 되었습니다`)\r\n              NotificationManager.success('Upload Success', `${res[0].name} 외 ${res.length}명이 저장 되었습니다`,3000);             \r\n          }\r\n         });\r\n      });\r\n  } catch (err) {\r\n      console.error(err);\r\n  }\r\n      // const input_query={\r\n      //   id: tempD.key,\r\n      //   type: \"word\",\r\n      //   name: tempD.key,\r\n      //   grade:null,\r\n      //   percentage:null ,\r\n      //   words: tempD.location,\r\n      // };\r\n      \r\n      // await API.graphql(graphqlOperation(graphql.createWord, {input: input_query})).then(this._getWordData());\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <NotificationContainer/>\r\n      <Tooltip title=\"Add Student\" arrow>\r\n      <IconButton  onClick={handleClickOpen}>\r\n                        <PersonAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                    </IconButton>\r\n      </Tooltip>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">학생추가</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            한명의 학생을 등록하는 페이지입니다. 여러명의 학생을 한번에 등록하려면 아래의 링크를 참조하세요.\r\n              <AboutMultiple buttontitle={\"Multiple 기능 사용법\"} content={\"f\"}/>\r\n          </DialogContentText>\r\n          <div style={{float:'right'}}>\r\n              <FormControl style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">학년</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={age}\r\n                onChange={handleAgeChange}\r\n                >\r\n                {\r\n                  academy.info.grade.map((g,i)=>{\r\n                    return(\r\n                    <MenuItem value={g}>{g}</MenuItem>\r\n                    );\r\n                  })\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">반</InputLabel>\r\n                <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={aclass}\r\n                onChange={handleclassChange}\r\n                >\r\n                {\r\n                  academy.info.class.map((c,i)=>{\r\n                    return(\r\n                    <MenuItem value={c}>{c}</MenuItem>\r\n                    );\r\n                  })\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            </div>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"학생이름\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={name}\r\n          onChange={handlenameChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n         \r\n              <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\" onChange={csvTojson}  name=\"file\" accept=\".csv\"/>\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Multiple\r\n                </Button>\r\n              </label>\r\n\r\n        \r\n          <Button onClick={handleRegister} color=\"primary\">\r\n            Register\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function HandleTestRecord() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n  \r\n                    if(lines[0] ===\"name,id,test,score,month,day\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,assignment,done,date`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n    const save = async(query) =>{\r\n        await API.graphql(graphqlOperation(graphql.updateTestRecord, {input: query})).then(r =>{\r\n            console.log(r);\r\n         });\r\n    }\r\n\r\n      const handleFileInput = async(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n\r\n            let stackid =[];\r\n\r\n            for(let i =0;i<res.length-1;i++){\r\n                if(stackid.includes(res[i].id)){\r\n\r\n                }else{\r\n                    let input_query=undefined;\r\n                         \r\n                    await API.graphql(graphqlOperation( `\r\n                         query list{\r\n                             listMyTypes(filter:{id:{contains:\"${res[i].id}\"}}){\r\n                               items{\r\n                                 id test{id name score month day}\r\n                               }\r\n                             }\r\n                           }`)).then(r =>{\r\n                            \r\n                             let Data = r.data.listMyTypes.items[0].test\r\n\r\n                             const filtered = res.filter(x=>x.id === res[i].id)\r\n                             const arrayObj = filtered.map(man => {\r\n                                     return {\r\n                                         id:Math.random().toString(36).substring(7),\r\n                                         name:man.test,\r\n                                         score:man.score,\r\n                                         month:man.month,\r\n                                         day:man.day\r\n                                     };\r\n                                   });\r\n                                   \r\n                            if(Data !== null){     \r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    test:Data.concat(arrayObj)\r\n                                }\r\n                            }else{\r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    test:arrayObj\r\n                                }\r\n                            }  \r\n                           \r\n                            save(input_query)\r\n                            NotificationManager.success('Upload Success', `${res[i].name} 외 ${arrayObj.length}개의 숙제결과가 저장 되었습니다`,3000);\r\n                        })     \r\n                        stackid.push(res[i].id)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n          <Tooltip title=\"Add Test\" arrow>\r\n                <IconButton onClick={handleClickOpen} color=\"primary\" aria-label=\"upload homeworkDialog\" component=\"span\">\r\n                <NoteAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                </IconButton>\r\n                </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    <img src=\"testmanual.png\" alt=\"students setting\"/>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <input onChange={csvTojson}  name=\"file\" accept=\".csv\"  style={{display:'none'}} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n      );\r\n\r\n}","import React from 'react';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nexport default function HandleHomework() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n  \r\n                    if(lines[0] ===\"name,id,homework,assignment,done,month,day\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,assignment,done,date`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n    const save = async(query) =>{\r\n        await API.graphql(graphqlOperation(graphql.updateHomework, {input: query})).then(r =>{\r\n            console.log(r);\r\n         });\r\n    }\r\n\r\n      const handleFileInput = async(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n\r\n            let stackid =[];\r\n\r\n            for(let i =0;i<res.length-1;i++){\r\n                if(stackid.includes(res[i].id)){\r\n\r\n                }else{\r\n                    let input_query=undefined;\r\n                         \r\n                    await API.graphql(graphqlOperation( `\r\n                         query list{\r\n                             listMyTypes(filter:{id:{contains:\"${res[i].id}\"}}){\r\n                               items{\r\n                                 id homework{id name assignment done month day}\r\n                               }\r\n                             }\r\n                           }`)).then(r =>{\r\n                             let Data = r.data.listMyTypes.items[0].homework\r\n\r\n                             const filtered = res.filter(x=>x.id === res[i].id)\r\n                             const arrayObj = filtered.map(man => {\r\n                                     return {\r\n                                         id:Math.random().toString(36).substring(7),\r\n                                         name:man.homework,\r\n                                         assignment:man.assignment,\r\n                                         done:man.done,\r\n                                         month:man.month,\r\n                                         day:man.day\r\n                                     };\r\n                                   });\r\n                            \r\n                            if(Data !== null){     \r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    homework:Data.concat(arrayObj)\r\n                                }\r\n                            }else{\r\n                                input_query={\r\n                                    id:res[i].id,\r\n                                    homework:arrayObj\r\n                                }\r\n                            }  \r\n                            save(input_query)\r\n                            NotificationManager.success('Upload Success', `${res[i].name} 외 ${arrayObj.length}개의 숙제결과가 저장 되었습니다`,3000);\r\n                        })     \r\n                        stackid.push(res[i].id)\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n          <Tooltip title=\"Add Homework\" arrow>\r\n                <IconButton onClick={handleClickOpen} color=\"primary\" aria-label=\"upload homeworkDialog\" component=\"span\">\r\n                <PostAddIcon size=\"large\" style={{ color: '#5a69bf' }}/>\r\n                </IconButton>\r\n                </Tooltip>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                <img src=\"homeworkmanual.png\" alt=\"students setting\"/>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <input onChange={csvTojson}  name=\"file\" accept=\".csv\"  style={{display:'none'}} id=\"icon-button-file\" type=\"file\" />\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Button color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n                            Upload\r\n                        </Button>\r\n                    </label>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n      );\r\n\r\n}","import React from 'react'\r\nimport { Box, Email, Image, Item, Span, A,renderEmail } from 'react-html-email'\r\nimport axios from 'axios';\r\n\r\nconst css = `\r\n@media only screen and (max-device-width: 480px) {\r\n  font-size: 20px !important;\r\n}`.trim()\r\n\r\nconst sourceURL = 'https://raw.githubusercontent.com/chromakode/react-html-email/master/examples/kitchenSink.js'\r\n\r\nconst email = (\r\n  <Email title=\"Test Email\" headCSS={css}>\r\n    <Item>\r\n      <Span fontSize={15}>Hello, world!</Span>\r\n    </Item>\r\n    <Item>\r\n      <Box cellSpacing={20} width=\"100%\" style={{ borderTop: '3px solid black' }}>\r\n        <Item>\r\n          <Span color=\"gray\" lineHeight={20}>Generated by <A href=\"https://github.com/chromakode/react-html-email\">react-html-email</A></Span>\r\n          <Image data-mc-bar=\"bar\" data-mc-baz=\"baz\" alt=\"react\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/React.js_logo.svg/100px-React.js_logo.svg.png\" width={100} height={100} />\r\n          <A download={sourceURL} href={sourceURL}>Source code</A>\r\n        </Item>\r\n      </Box>\r\n    </Item>\r\n  </Email>\r\n)\r\n\r\nexport default async function submitEmail(){\r\n\r\n    const messageHtml =  renderEmail(email);\r\n    alert(messageHtml);\r\n    await axios.post('/addUser',{\r\n        userName: 'Fred',\r\n        userEmail:\"sosdfg728@naver.com\"\r\n    }).then((response)=>{\r\n                if (response.data.msg === 'success'){\r\n                    alert(\"Email sent, awesome!\"); \r\n                }else if(response.data.msg === 'fail'){\r\n                    alert(\"Oops, something went wrong. Try again\")\r\n                }\r\n            })\r\n        }\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Confirm from './confirmreq';\r\nimport submitEmail from './sendMail'\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'name' },\r\n  { id: 'id', numeric: true, disablePadding:  false, label: 'id' },\r\n  { id: 'grade', numeric: true, disablePadding: false, label: 'grade' },\r\n  { id: 'class', numeric: true, disablePadding: false, label: 'class' },\r\n  { id: 'todayAvg', numeric: true, disablePadding: false, label: 'today' },\r\n  { id: 'totalAvg', numeric: true, disablePadding: false, label: 'total' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\n\r\nconst checkeddelete = async(selectedid) =>{\r\n  selectedid.map(async(d,i)=>{\r\n    await API.graphql(graphqlOperation(graphql.deleteWordOrigin,{input: {id:d}})).then(data =>{\r\n      if(selectedid.length-1 ===i){\r\n        window.location.reload();\r\n        // NotificationManager.success('delete Success', `${selectedid[0]}이외 ${selectedid.length-1} 명이 삭제 되었습니다`,3000);\r\n      }\r\n      })\r\n  })\r\n}//보류 시바ㅅ거스ㅡ\r\n\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const {Selected} = props;\r\n  const {Selectedid} = props;\r\n  const num = props.Selected.length\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: num > 0,\r\n      })}\r\n    >\r\n      {num > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {num} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Students\r\n        </Typography>\r\n      )}\r\n\r\n      {num > 0 ? (\r\n        <Grid   container direction=\"row\" justify=\"flex-end\">\r\n        \r\n          <Grid item>\r\n          <Tooltip title=\"Delete\" placement=\"top-end\">\r\n              {/* <Button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd'}} onClick={()=>checkeddelete(Selectedid)}>\r\n                Delete\r\n              </Button> */}\r\n              <IconButton onClick={()=>checkeddelete(Selectedid)} aria-label=\"delete\">\r\n                <DeleteIcon />\r\n              </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n      </Grid>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\" >\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\n// EnhancedTableToolbar.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [selectedid, setSelectedid] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    const All = props.All;\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = All.map(n => n.label);\r\n      const newSelectedsid = All.map(n => n.value);\r\n      setSelected(newSelecteds);\r\n      setSelectedid(newSelectedsid);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n    setSelectedid([]);\r\n  };\r\n\r\n  const handleClick = (event, name,id) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n\r\n\r\n    let newSelected = [];\r\n    let newSelectedid = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n      newSelectedid = newSelectedid.concat(selectedid, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n      newSelectedid = newSelectedid.concat(selectedid.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n      newSelectedid = newSelectedid.concat(selectedid.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n      newSelectedid = newSelectedid.concat(\r\n        selectedid.slice(0, selectedIndex),\r\n        selectedid.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n    setSelectedid(newSelectedid);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, All.length - page * rowsPerPage);\r\n\r\n  const total =props.total;\r\n  const today =props.today;\r\n  const grade = props.grade;\r\n  const aclass = props.class;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <NotificationContainer/>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar Selectedid={selectedid} Selected={selected} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={All.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(All, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.label);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                    if(grade.includes(row.grade) && row.todayAvg <= today&& row.totalAvg <= total && aclass.includes(row.class) ){\r\n                        return (\r\n                            <TableRow\r\n                              hover\r\n                              onClick={event => handleClick(event, row.label, row.value)}\r\n                              role=\"checkbox\"\r\n                              aria-checked={isItemSelected}\r\n                              tabIndex={-1}\r\n                              key={row.value}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell padding=\"checkbox\">\r\n                                <Checkbox\r\n                                  checked={isItemSelected}\r\n                                  inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                {row.label}\r\n                              </TableCell>\r\n                              <TableCell align=\"right\">{row.value.split(\"-\")[0]}</TableCell>\r\n                              <TableCell align=\"right\">{row.grade}</TableCell>\r\n                              <TableCell align=\"right\">{row.class}</TableCell>\r\n                              <TableCell align=\"right\">{row.todayAvg}</TableCell>\r\n                              <TableCell align=\"right\">{row.totalAvg}</TableCell>\r\n                              </TableRow>\r\n                          );\r\n                    }\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={All.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component, Fragment } from 'react';\n// import Product from './Product';\nimport axios from \"axios\";\nimport CheckboxTree from 'react-checkbox-tree';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport {API, graphqlOperation } from 'aws-amplify';\nimport * as graphql from './utility/graphql';\nimport DetailedExpansionPanel from './utility/expansion';\nimport AddStudent from './utility/addstudent'\n\n\nimport AboutFunction from './utility/AboutFunction';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\n\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport HandleTestRecord from './utility/addTestRecord'\nimport HandleHomework from './utility/addHomework';\nimport Slider from '@material-ui/core/Slider';\nimport PageviewIcon from '@material-ui/icons/Pageview';\nimport EnhancedTable from './utility/tableview';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport * as academy from './auth/academyInfo';\nimport IconButton from '@material-ui/core/IconButton';\nconst config = require('../config.json');\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\n\nexport default class Products extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      login:this.props.auth.isAuthenticated,\n\n      addchecked: [],\n      addexpanded: [], // tree view\n\n      deletechecked:[],\n      deleteexpended:[], // table view\n\n      value:0,\n      newproduct: null,\n      products: [],\n      checked: [],\n      expanded: [],\n      loading:true,\n      AllStu:null,\n      treeSet:null, date: new Date(),\n      All:null,\n\n      selectgrade:[],\n      selectclass:[],\n\n      todayfilter:100,\n      totalfilter:100,\n     };\n};\nhandleChange = (event, newValue) => {\n  this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\n}\n\na11yProps = (index) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nonChange = date => this.setState({ date })\n\n  fetchProducts = async () => {\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  _makestudenttree=(data)=>{\n    let AllStu = [];\n\n  \n    let treeSet = academy.info.grade.map((g)=>{\n      let classcomp = academy.info.class.map((c,i)=>{\n        return {value:`${c}${g}`,label:c,children:[]}\n      });\n     return {value:g,label:g,children:classcomp}\n   });\n\n     data.forEach((student,i)=>{\n        let temp =[];\n        let temptreeSet = JSON.parse(JSON.stringify(treeSet));\n       let nowGrade = student.grade;\n       let nowClass= student.class;\n       //react-checkbox-tree 양식에 맞도록 재가공\n       let TodayAssemble =[];\n       let AllAssemble = [];       \n\n   \n       if(student.record !== null){\n         temp = student.record.filter(item => \n           item.month === Number(new Date().getMonth())  && item.day === Number(new Date().getDate())\n         );\n         TodayAssemble=temp.map(data => {return data.etc});\n         \n         AllAssemble = student.record.map(item => {\n               return item.etc\n         });\n       }    \n       let Today =0;\n       let Total =0;\n       if(TodayAssemble.length >0){\n         Today =TodayAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/TodayAssemble.length;\n       }\n       if(AllAssemble.length>0){\n         Total =AllAssemble.reduce((accumulator, currentValue) => accumulator + currentValue)/AllAssemble.length;\n       }\n       let studentInfo = { \n         value: student.id , \n         grade: student.grade,\n         class:student.class,\n         label: student.name, \n         words:student.words, \n         todo:student.todo, \n         record:student.record,  \n         TodayAssemble:TodayAssemble,// 오늘 퍼센트 배열\n         AllAssemble:AllAssemble,//전체 퍼센트 배열\n         todayAvg:Math.round(Today),\n         totalAvg:Math.round(Total),\n         homework:student.homework,\n         test:student.test}\n      \n         let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\n       \n         let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\n\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\n        treeSet[gradeindex] = temptreeSet[gradeindex]\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\n           AllStu.push(studentInfo);   \n           // alert(JSON.stringify(treeSet))\n     })\n\n     treeSet.forEach((i,index)=>{\n       let temp = i.children.filter(j=>j.children.length!==0)    \n        treeSet[index].children =temp\n      })\n      treeSet= treeSet.filter(x=>x.children.length!==0);\n      this.setState({treeSet:treeSet,AllStu:AllStu,All:data,selectgrade:academy.info.grade,selectclass:academy.info.class});\n  }\n \n  _getStudentData = async() =>{\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{\n      this._makestudenttree(data.data.listMyTypes.items)\n      \n    })\n  }\n\n  componentDidMount = async() => {\n    await Promise.all([this._getStudentData()]).then((d)=>{\n      this.setState({loading:false})\n    }\n    )   \n  }\n\n  //selecter\n  handleChangeMultiplegrade = event => {\n    this.setState({selectgrade:event.target.value});\n    // alert(event.target.value)\n  };\n  handleChangeMultipleclass = event => {\n    this.setState({selectclass:event.target.value});\n    // alert(event.target.value)\n  };\n\n  //slider\n  valuetext=(value) =>{\n    return `${value}% 이하`;\n  }\n\n  handleSliderChange = (event, newValue) => {\n    // this.setState({Slider:Number(event.target.value)});\n   return newValue\n  };\n\n  \n\n  render() {\n    return (\n      <div>\n        {\n          this.state.loading?\n          <p>loading</p>\n          :\n        <Fragment>\n        \n        <div style={{height:70}}/>\n        <section style={{marginTop:-270,backgroundColor:'#fff'}} className=\"section\">\n        <div className=\"container\">\n        <h1 style={{color:'#5a69bf'}}>학생 데이터/관리</h1>\n        <p className=\"subtitle is-5\">학생들의 데이터를 확인하거나 등록/삭제를 할 수 있습니다.</p> \n        <br/><br/><br/><br/><br/><br/>\n        <div style={{float:'right'}}><AddStudent/></div>   \n        <div style={{float:'right'}}><HandleHomework/></div>   \n        <div style={{float:'right'}}><HandleTestRecord/></div>   \n        <Paper elevation={0} square>\n        <Tabs indicatorColor=\"primary\" textColor=\"primary\" value={this.state.value} onChange={this.handleChange} aria-label=\"simple tabs example\">\n          <Tab label=\"table\" {...this.a11yProps(0)} />\n          <Tab label=\"tree\" {...this.a11yProps(1)} />\n        </Tabs>\n      </Paper>        \n        <br />\n        <TabPanel value={this.state.value} index={1}>\n          <div>\n          <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:30}} content={\"f\"}/>\n        <div style={{display:'flex',marginTop:30}}>\n          <div style={{width:\"30%\"}}>\n            <div className=\"tile is-ancestor\">\n              <CheckboxTree\n              nodes={this.state.treeSet}\n              checked={this.state.checked}\n              expanded={this.state.expanded}\n              onCheck={checked => this.setState({ checked })}\n              onExpand={expanded => this.setState({ expanded })}\n              icons={{\n                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\n                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\n                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\n                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\n                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\n                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\n                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\n                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\n                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\n                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\n            }}\n          />             \n            </div>\n          </div>\n          <div  style={{width:750}}>\n\n            {\n              this.state.AllStu.map((student, i)=>{\n                if(this.state.checked.indexOf(student.value) !== -1){\n                  return(\n                    <DetailedExpansionPanel \n                      All={this.state.All} \n                      id={student.value} \n                      name={student.label} \n                      TodayAssemble={student.TodayAssemble}\n                      AllAssemble={student.AllAssemble}\n                      record={student.record}\n                      homework={student.homework}\n                      test={student.test}/>\n                  );// to utility/expansion  ->  calendar and editstudent\n                }\n                return \"\";\n              })\n            }\n\n          </div>   \n        </div>      \n        </div>          \n        </TabPanel>\n        <TabPanel value={this.state.value} index={0}> \n        <div>\n        <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:30}} content={\"f\"}/>\n        <div style={{display:'flex',marginTop:30}}>\n          <div id=\"selecter\" style={{width:\"30%\"}}>\n            <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"demo-mutiple-chip-label\">반을 선택하세요</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-chip-label\"\n            id=\"demo-mutiple-chip\"\n            multiple\n            value={this.state.selectgrade}\n            onChange={event =>this.handleChangeMultiplegrade(event)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div>\n                {selected.map(value => (\n                  <Chip key={value} label={value} deleteIcon={<DoneIcon />}/>\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {academy.info.grade.map(grade => (\n              <MenuItem key={grade} value={grade}>\n                {grade}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n            </div>\n            <div id=\"selecter\" style={{width:\"30%\"}}>\n            <FormControl style={{width:\"100%\"}}>\n          <InputLabel id=\"demo-mutiple-chip-label\">학년을 선택하세요</InputLabel>\n          <Select\n            labelId=\"demo-mutiple-chip-label\"\n            id=\"demo-mutiple-chip\"\n            multiple\n            value={this.state.selectclass}\n            onChange={event =>this.handleChangeMultipleclass(event)}\n            input={<Input id=\"select-multiple-chip\" />}\n            renderValue={selected => (\n              <div>\n                {selected.map(value => (\n                  <Chip key={value} label={value} deleteIcon={<DoneIcon />}/>\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {academy.info.class.map(aclass => (\n              <MenuItem key={aclass} value={aclass}>\n                {aclass}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n            </div>\n            \n              <div style={{width:\"15%\",marginTop:20,marginLeft:30}}>\n              <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Total</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={this.state.todayfilter}\n              onChange={event=>this.setState({todayfilter:event.target.value})}\n              endAdornment={<InputAdornment position=\"end\">이하</InputAdornment>}\n              labelWidth={60}\n            />\n            </FormControl>\n              </div>\n              <div style={{width:\"15%\",marginTop:20,marginLeft:30}}>\n              <FormControl variant=\"outlined\">\n              <InputLabel htmlFor=\"outlined-adornment-amount\">Total</InputLabel>\n              <OutlinedInput\n              id=\"outlined-adornment-amount\"\n              value={this.state.totalfilter}\n              onChange={event=>this.setState({totalfilter:event.target.value})}\n              endAdornment={<InputAdornment position=\"end\">이하</InputAdornment>}\n              labelWidth={60}\n            />\n            </FormControl>\n              </div>\n            <div id=\"slider\" style={{marginTop:10,marginLeft:30}}>\n            <IconButton onClick={()=>this.setState({Slider:this.state.Slider2})}  aria-label=\"search\">\n              <PageviewIcon fontSize=\"large\" style={{ color: '#5a69bf' }}/>\n            </IconButton>\n            </div>\n          </div>\n          <EnhancedTable \n            grade={this.state.selectgrade}\n            class={this.state.selectclass}\n            total={this.state.totalfilter}\n            today={this.state.todayfilter}\n            All={this.state.AllStu}/>\n             {/*to utility/Tableview  */}\n             </div>\n        </TabPanel>        \n      </div>  \n\n      {/* :<p>xxxxxxxxxx</p>} */}\n         \n        </section>\n      </Fragment>\n        }\n      </div>\n      \n    )\n  }\n}\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-prevent-tabpanel-${index}`}\n      aria-labelledby={`scrollable-prevent-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}","import React from 'react'\nimport {API, graphqlOperation,Storage } from 'aws-amplify';\nimport Products from './Products'\n\nconst query=`\nquery list{\n  listMyTypes(filter:{type:{contains:\"word\"}}){\n    items{\n      id type name grade percentage words\n    }\n  }\n}\n`\n\n\nconst Checkbox = ({ type = 'checkbox', name, checked = false, onChange }) => (\n  <input style={{display:'none'}} type={type} name={name} checked={checked} onChange={onChange} />\n);\n\nexport default class ProductAdmin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      checkedItems: new Map(),\n      checkboxes:[]\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const item = e.target.name;\n    const isChecked = e.target.checked; \n\n    this.setState(prevState => ({ checkedItems: prevState.checkedItems.set(item, isChecked) }));\n  }\n\n\n  callChecked=()=>{\n    let checkedlist =[];\n    this.state.checkedItems.forEach((value,key)=>{\n      if(value === true){\n        checkedlist.push(key);\n      }\n     });\n     alert(checkedlist);\n  }\n\n\n  componentDidMount = async() => {\n    await API.graphql(graphqlOperation(query)).then(data =>{\n      let tempBox = [];\n      data.data.listMyTypes.items.map((comp,i)=>{\n        // alert(JSON.stringify(comp))\n        let groupComp ={\n          name: comp.name,\n          key: comp.name,\n          label: comp.name\n        }\n        tempBox.push(groupComp);\n    })\n    this.setState({checkboxes:tempBox})\n    Storage.put('test.txt', 'Hello')\n    .then (result => console.log(result)) // {key: \"test.txt\"}\n    .catch(err => console.log(err));\n    return \"\";  \n  })\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div style={{display:'flex'}}>\n\n        {\n         this.state.checkboxes.map(item => (\n            <label key={item.key}>\n              <div style={{backgroundColor:this.state.checkedItems.get(item.name)?\"red\":\"blue\", margin:10}} >{item.name}</div>\n              <Checkbox name={item.name} checked={this.state.checkedItems.get(item.name)} onChange={this.handleChange} />\n            </label>\n          ))\n        }\n        </div>\n        <Products/>\n      </React.Fragment>\n    );\n  }\n}","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\nimport Paper from '@material-ui/core/Paper';\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\");\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <div style={{backgroundColor:'#fff'}}>\n      <div style={{height:150}}/>\n      <section className=\"section auth\">\n        <div style={{display:'flex'}}  className=\"container\">\n          <div style={{width:'50%'}}>\n            <img src=\"secure.jpg\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\n          \n          </div>\n       \n          <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\n          <form onSubmit={this.handleSubmit}>\n            <h1>Login</h1>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>User ID</p>\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p style={{width:400}} className=\"control\">\n                <p>Password</p>\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <FormErrors formerrors={this.state.errors} />\n                <button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </Paper>\n        </div>\n      </section>\n      <div style={{height:150}}/>\n      \n      </div>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\nimport Paper from '@material-ui/core/Paper';\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: email\n        }\n      });\n      this.props.history.push(\"/welcome\");\n      console.log(signUpResponse);\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n\n<div style={{backgroundColor:'#fff'}}>\n<div style={{height:150}}/>\n<section className=\"section auth\">\n  <div style={{display:'flex'}}  className=\"container\">\n    <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\n    <form onSubmit={this.handleSubmit}>\n      <h1>Register</h1>\n      <div className=\"field\">\n        <p style={{width:400}} className=\"control\">\n        <p>Name</p>\n          <input \n            className=\"input\" \n            type=\"text\"\n            id=\"username\"\n            aria-describedby=\"userNameHelp\"\n            placeholder=\"Enter username\"\n            value={this.state.username}\n            onChange={this.onInputChange}\n          />\n        </p>\n      </div>\n      <div className=\"field\">\n        <p style={{width:400}} className=\"control\">\n          <p>Email</p>\n          <input \n           className=\"input\" \n           type=\"email\"\n           id=\"email\"\n           aria-describedby=\"emailHelp\"\n           placeholder=\"Enter email\"\n           value={this.state.email}\n           onChange={this.onInputChange}\n          />\n        </p>\n      </div>\n      <div className=\"field\">\n        <p style={{width:400}} className=\"control has-icons-left\">\n          <p>Password</p>\n          <input \n            className=\"input\" \n            type=\"password\"\n            id=\"password\"\n            placeholder=\"Password\"\n            value={this.state.password}\n            onChange={this.onInputChange}\n          />\n        </p>\n      </div>\n      <div className=\"field\">\n        <p style={{width:400}} className=\"control has-icons-left\">\n          <p>Confirm Password</p>\n          <input \n            className=\"input\" \n            type=\"password\"\n            id=\"confirmpassword\"\n            placeholder=\"Confirm password\"\n            value={this.state.confirmpassword}\n            onChange={this.onInputChange}\n          />\n        </p>\n      </div>\n      <div className=\"field\">\n        <p className=\"control\">\n          <FormErrors formerrors={this.state.errors} />\n          <button style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\n            Register\n          </button>\n        </p>\n      </div>\n    </form>\n  </Paper>\n  <div style={{width:'50%',marginLeft:30}}>\n      <img src=\"art.png\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\n    </div>\n  </div>\n</section>\n<div style={{height:150}}/>\n\n</div>\n    );\n  }\n}\n\nexport default Register;\n\n\n ","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  }\n\n  forgotPasswordHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Forgot your password?</h1>\n          <p>\n            Please enter the email address associated with your account and we'll\n            email you a password reset link.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.forgotPasswordHandler}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\n\nclass ForgotPasswordVerification extends Component {\n  state = {\n    verificationcode: \"\",\n    email: \"\",\n    newpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  passwordVerificationHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Set new password</h1>\n          <p>\n            Please enter the verification code sent to your email address below,\n            your email address and a new password.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.passwordVerificationHandler}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationCodeHelp\"\n                  placeholder=\"Enter verification code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\n\nclass ChangePassword extends Component {\n  state = {\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"oldpassword\"\n                  placeholder=\"Old password\"\n                  value={this.state.oldpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePassword;","import React, { Component } from \"react\";\n\nclass ChangePasswordConfirmation extends Component {\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <p>Your password has been successfully updated!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePasswordConfirmation;","import React from 'react';\n\nexport default function Welcome() {\n  return (\n    <section style={{backgroundColor:'#fff',height:800}} className=\"section auth\">\n      <div style={{textAlign:'center'}}>\n        <img src=\"mail.jpg\" width=\"400\" height=\"400\" alt=\"hexal logo\" />\n        <h1>Welcome!</h1>\n        <p>You have successfully registered a new account.</p>\n        <p>We've sent you a email. Please click on the confirmation link to verify your account.</p>\n      </div>\n    </section>\n  )\n}\n","import React, { Component, Fragment } from 'react';\r\nimport axios from \"axios\";\r\nimport CheckboxTree from 'react-checkbox-tree';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport S3 from 'react-s3';\r\nimport * as graphql from './utility/graphql';\r\nimport '../index.css';\r\nimport AboutFunction from './utility/AboutFunction';\r\nimport MaterialTable from 'material-table';\r\nimport \"react-daterange-picker/dist/css/react-calendar.css\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport {CSVLink, CSVDownload} from \"react-csv\";\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport * as academy from './auth/academyInfo'\r\n\r\nconst config = require('../config.json');\r\n\r\nconst steptitle =[\r\n    '어떠한 작업을 하시겠습니까?', \r\n    '대상 학생을 선택해주세요', \r\n    '엑셀파일을 다운로드 받으세요.',\r\n    '다운받은 파일을 다음과 같은 형식으로 작성하신 후, 아래의 버튼을 눌러 업로드 해주세요'\r\n]\r\n\r\nexport default class CsvTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      value:1,  \r\n      newproduct: null,\r\n      tablevalue: [],\r\n\r\n      deletechecked:[],\r\n      deleteexpended:[],\r\n      \r\n      haveto:100,\r\n      loading:true,\r\n      AllStu:null,\r\n      treeSet:null,\r\n      wordSet:[],activeStep:0,\r\n      type:\"숙제\",\r\n      filename:'filename'\r\n     };\r\n};\r\n \r\n\r\n  fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\r\n      const products = res.data;\r\n      this.setState({ products: products });\r\n    } catch (err) {\r\n      console.log(`An error has occurred: ${err}`);\r\n    }\r\n  }\r\n\r\n  a11yProps = (index) => {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  handleChange = (event, newValue) => {\r\n    this.setState({ value: newValue,addchecked: [],addexpanded: [],deletechecked:[],deleteexpended:[]});\r\n  }\r\n  _makestudenttree=(data)=>{\r\n    let AllStu = [];\r\n\r\n  \r\n    let treeSet = academy.info.grade.map((g)=>{\r\n      let classcomp = academy.info.class.map((c,i)=>{\r\n        return {value:`${c}${g}`,label:c,children:[]}\r\n      });\r\n     return {value:g,label:g,children:classcomp}\r\n   });\r\n\r\n     data.forEach((student,i)=>{\r\n      let temptreeSet = JSON.parse(JSON.stringify(treeSet));\r\n       let nowGrade = student.grade;\r\n       let nowClass= student.class;\r\n       //react-checkbox-tree 양식에 맞도록 재가공\r\n       let studentInfo = { value: student.id , label: student.name,grade:nowGrade,class:nowClass, percentage:student.percentage, assignment:student.assignment,words:student.words };\r\n       \r\n       let gradeindex =treeSet.findIndex(x=>x.value===nowGrade);\r\n       let classindex =treeSet[gradeindex].children.findIndex(x=>x.value===`${nowClass}${nowGrade}`);\r\n\r\n        temptreeSet[gradeindex].children[classindex].children.push(studentInfo)\r\n        treeSet[gradeindex] = temptreeSet[gradeindex]\r\n          //  console.log(`treeSet[${gradeindex}].children[${classindex}].children`)\r\n           AllStu.push(studentInfo);   \r\n           // alert(JSON.stringify(treeSet))\r\n     })\r\n\r\n     treeSet.forEach((i,index)=>{\r\n       let temp = i.children.filter(j=>j.children.length!==0)    \r\n        treeSet[index].children =temp\r\n      })\r\n      treeSet= treeSet.filter(x=>x.children.length!==0);\r\n     this.setState({treeSet:treeSet,AllStu:AllStu});\r\n  }\r\n\r\n  _getStudentData = async() =>{\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{   \r\n      this._makestudenttree(data.data.listMyTypes.items)\r\n    })\r\n  }\r\n\r\n  selectATtree=(w)=>{\r\n      let tablevalue=[]\r\n    this.state.AllStu.forEach(i=>{\r\n        w.forEach(j=>{\r\n            if(i.value === j){\r\n                tablevalue.push(i)\r\n            }\r\n        })\r\n    })\r\n\r\n    tablevalue=tablevalue.map(x=>{\r\n        return {name:x.label,id:x.value}\r\n    })\r\n\r\n    let csv=null\r\n    if(this.state.type ===\"숙제\"){\r\n        csv =[\r\n            ['name', 'id','homework','asignment','done','month','day']\r\n          ];\r\n    }else{\r\n        csv =[\r\n            ['name', 'id','test','score','month','day']\r\n        ];\r\n    }\r\n\r\n    tablevalue.forEach(x=>{\r\n        let temp = [];\r\n        temp.push(x.name)\r\n        temp.push(x.id)\r\n        csv.push(temp);\r\n    })  \r\n    this.setState({csv:csv,tablevalue:tablevalue,deletechecked:w})\r\n  }\r\n\r\n  handleRadioChange = event => {\r\n    this.setState({type:event.target.value})\r\n  };\r\n  handleFileNameChange = event => {\r\n    this.setState({filename:event.target.value});\r\n  };\r\n\r\n  handleNext = () => {\r\n    this.setState({activeStep:this.state.activeStep+1})\r\n  };\r\n\r\n  handleBack = () => {\r\n    this.setState({activeStep:this.state.activeStep-1})\r\n  };\r\n\r\n  componentDidMount = async() => {\r\n    await Promise.all([this._getStudentData()]).then((d)=>{\r\n      this.setState({loading:false})\r\n    //   console.log(Math.random().toString(36).substring(2, 15))\r\n    }\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.loading?\r\n          <p>loading</p>\r\n          :\r\n        <Fragment>\r\n                  <div style={{height:70}}/>\r\n                  <NotificationContainer/>\r\n        <section style={{backgroundColor:'#fff'}} className=\"section\">\r\n        {/* {this.props.auth.isAuthenticated?  */}\r\n        \r\n        <div>\r\n        <div>\r\n      <div>\r\n      <AboutFunction style={{width:'100%',height:50}} iconstyle={{position:'absolute',right:100}} content={\"f\"}/>\r\n      <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n        {steptitle.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n            <StepContent>\r\n                <div>\r\n                    {index===0&&\r\n                        <div style={{width:400}}>\r\n                            <FormControlLabel\r\n                                value=\"숙제\"\r\n                                control={<Radio\r\n                                color=\"default\"\r\n                                    checked={this.state.type === '숙제'}\r\n                                    onChange={this.handleRadioChange}\r\n                                />}\r\n                                label=\"숙제결과 입력\"\r\n                                labelPlacement=\"End\"\r\n                                />\r\n                             <FormControlLabel\r\n                                value=\"시험\"\r\n                                control={<Radio\r\n                                color=\"default\"\r\n                                    checked={this.state.type === '시험'}\r\n                                    onChange={this.handleRadioChange}\r\n                                />}\r\n                                label=\"시험결과 입력\"\r\n                                labelPlacement=\"End\"\r\n                                />     \r\n                                \r\n                          \r\n                        </div>\r\n                    }\r\n                    {index===1&&\r\n                    <div id=\"addWordToStudent\" style={{display:'flex',marginTop:30}}>\r\n                        <div style={{width:\"30%\"}}>\r\n                            <div className=\"tile is-ancestor\">\r\n                                <CheckboxTree\r\n                                nodes={this.state.treeSet}\r\n                                checked={this.state.deletechecked}\r\n                                expanded={this.state.deleteexpanded}\r\n                                onCheck={checked => this.selectATtree(checked)}\r\n                                onExpand={expanded => this.setState({ deleteexpanded:expanded })}\r\n                                icons={{\r\n                                check: <FontAwesomeIcon className=\"rct-icon rct-icon-check\" icon=\"check-square\" />,\r\n                                uncheck: <FontAwesomeIcon className=\"rct-icon rct-icon-uncheck\" icon={['fas', 'square']} />,\r\n                                halfCheck: <FontAwesomeIcon className=\"rct-icon rct-icon-half-check\" icon=\"check-square\" />,\r\n                                expandClose: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-close\" icon=\"chevron-right\" />,\r\n                                expandOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-open\" icon=\"chevron-down\" />,\r\n                                expandAll: <FontAwesomeIcon className=\"rct-icon rct-icon-expand-all\" icon=\"plus-square\" />,\r\n                                collapseAll: <FontAwesomeIcon className=\"rct-icon rct-icon-collapse-all\" icon=\"minus-square\" />,\r\n                                parentClose: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-close\" icon=\"folder\" />,\r\n                                parentOpen: <FontAwesomeIcon className=\"rct-icon rct-icon-parent-open\" icon=\"folder-open\" />,\r\n                                leaf: <FontAwesomeIcon className=\"rct-icon rct-icon-leaf-close\" icon=\"file\" />\r\n                            }}\r\n                            />             \r\n                            </div>\r\n                        </div>\r\n                        <div id=\"seleted_Comp_Box\" style={{width:\"70%\",borderRadius:50,alignItems:'center'}} >\r\n                            <div style={{width: '100%',display:'flex'}} id=\"selected_Student_Name\">\r\n                            <MakeCsvPage tablevalue={this.state.tablevalue}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>}\r\n                    {index===2&&\r\n                        <div style={{height:150}}>\r\n                           <TextField\r\n                                value={this.state.filename}\r\n                                onChange={this.handleFileNameChange}\r\n                                type=\"text\"\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                            />\r\n                           <CSVLink filename={`${this.state.filename}.csv`} data={this.state.csv}>\r\n                           <Button variant=\"contained\" color=\"primary\" startIcon={<img src=\"spreadsheet.png\" width=\"20\" height=\"20\" alt=\"spreadsheet\"/>}>download</Button>\r\n                            </CSVLink>\r\n                        </div>\r\n                    }\r\n                           \r\n                </div>\r\n              <div>\r\n                <div>\r\n                  <Button\r\n                    disabled={this.state.activeStep === 0}\r\n                    onClick={this.handleBack}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleNext}\r\n                  >\r\n                    {this.state.activeStep === steptitle.length - 1 ? 'Finish' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </StepContent>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n       \r\n        </div>  \r\n        </section>\r\n      </Fragment>\r\n        }\r\n      </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nfunction MakeCsvPage(props) {\r\n    const [state, setState] = React.useState({\r\n      columns: [\r\n        { title: 'name', field: 'name' },\r\n        { title: 'full ID', field: 'id' },\r\n      ],\r\n    });\r\n\r\n    // 'homework','assignment','done','month','day'\r\n\r\n    return (\r\n        <div>\r\n      <MaterialTable\r\n        title=\"Select\"\r\n        columns={state.columns}\r\n        data={props.tablevalue }\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n\r\n","import React, { Component } from 'react';\r\nimport FormErrors from \"./FormErrors\";\r\nimport Validate from \"./utility/FormValidation\";\r\nimport { Auth } from \"aws-amplify\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './utility/graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport moment from 'moment'\r\n\r\nexport default class Sample extends Component {\r\n  state = {\r\n    username: \"\",\r\n    company: \"\",\r\n    key:\"\",\r\n    errors: {\r\n      cognito: null,\r\n      blankfield: false\r\n    }\r\n  };\r\n\r\n\r\n  \r\n  generateRandom = (min, max) =>{\r\n    var ranNum = Math.floor(Math.random()*(max-min+1)) + min;\r\n    return ranNum;\r\n  }\r\n\r\n  handleFileInput =(e)=>{ //multiple\r\n\r\n    let input_query =[]\r\n    let due = `${moment().format('YYYY-MM-DD')}/${moment().add(7, 'day').format('YYYY-MM-DD')}`\r\n\r\n        let record = [];\r\n        let nowMonth = Number(moment().format('MM'));\r\n        let nowDay = Number(moment().format('DD'));\r\n        for(let i=0;i<40;i++){\r\n            const d = Number(moment().subtract(i, 'day').format('DD'))\r\n            if(d>nowDay){\r\n                nowMonth = nowMonth -1\r\n            }\r\n\r\n              record.push({\r\n                id:Math.random().toString(36).substring(7),\r\n                bookid:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n                month:nowMonth,\r\n                day: d,\r\n                words:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n                etc:this.generateRandom(0, 99)\r\n              },{\r\n                id:Math.random().toString(36).substring(7),\r\n                bookid:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n                month:nowMonth,\r\n                day: d,\r\n                words:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n                etc:this.generateRandom(0, 99)\r\n              });\r\n            \r\n              nowDay = d\r\n        }\r\n\r\n        input_query.push({\r\n            id: Math.random().toString(36).substring(7),\r\n            type: \"sample\",\r\n            name: this.state.username,\r\n            address:this.state.company,\r\n            words:[{\r\n              id:\"04453285-6e33-495e-8a40-c5a15ea3cf1f\",\r\n              name:\"2020 VOCA.json\",\r\n              link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n              haveto:100,\r\n              due: due\r\n          },{\r\n            id:\"2c148799-a0e2-4b92-a2d3-66e4a7b8866d\",\r\n            name:\"2020 VOCA2.json\",\r\n            link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n            haveto:100,\r\n            due: due\r\n        }],\r\n           record:record\r\n          });\r\n          \r\n          input_query.forEach(async(query,i) =>{\r\n            await API.graphql(graphqlOperation(graphql.createStudent3, {input: query})).then(result=>{\r\n              let temp =result.data.createMyType.id;\r\n              this.setState({key:temp.split(\"-\")[0]})\r\n            })\r\n          })\r\n}\r\n\r\n\r\n  clearErrorState = () => {\r\n    this.setState({\r\n      errors: {\r\n        cognito: null,\r\n        blankfield: false\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    // Form validation\r\n    this.clearErrorState();\r\n    const error = Validate(event, this.state);\r\n    if (error) {\r\n      this.setState({\r\n        errors: { ...this.state.errors, ...error }\r\n      });\r\n    }\r\n\r\n    // AWS Cognito integration here\r\n    try {\r\n      const user = await Auth.signIn(this.state.username, this.state.password);\r\n      console.log(user);\r\n      this.props.auth.setAuthStatus(true);\r\n      this.props.auth.setUser(user);\r\n      this.props.history.push(\"/\");\r\n    }catch(error) {\r\n      let err = null;\r\n      !error.message ? err = { \"message\": error } : err = error;\r\n      this.setState({\r\n        errors: {\r\n          ...this.state.errors,\r\n          cognito: err\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{backgroundColor:'#fff'}}>\r\n          <NotificationContainer/>\r\n      <div style={{height:150}}/>\r\n      <section className=\"section auth\">\r\n        <div style={{display:'flex'}}  className=\"container\">\r\n          <div style={{width:'50%'}}>\r\n            <img src=\"secure.jpg\" width=\"80%\" height=\"80%\" alt=\"secure\"/>\r\n          \r\n          </div>\r\n       \r\n          <Paper elevation={3} style={{padding:30,width:\"50%\"}}>\r\n            <h1>Get Sample!</h1>\r\n            <div style={{width:\"70%\"}}>\r\n                <TextField\r\n                fullWidth\r\n                style={{ margin: 8 }}\r\n                id=\"company\"\r\n                label=\"Company Name\"\r\n                type=\"text\"\r\n                value={this.state.password}\r\n                onChange={this.onInputChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}/>\r\n            </div>\r\n            <div style={{width:\"70%\"}}>\r\n                <TextField\r\n                fullWidth\r\n                style={{ margin: 8 }}\r\n                id=\"username\"\r\n                label=\"User Name\"\r\n                type=\"text\"\r\n                value={this.state.username}\r\n                onChange={this.onInputChange}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                />\r\n\r\n                <Button onClick={() => { this.handleFileInput(); }} style={{backgroundColor:'#5a69bf',borderWidth:2,borderColor:'#ddd',color:'#ddd',width:400}} className=\"button is-success\">\r\n                    get Key\r\n                </Button>\r\n                <div>\r\n                    <p>{`key: ${this.state.key}`}</p>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n        </div>\r\n      </section>\r\n      <div style={{height:150}}/>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {API, graphqlOperation } from 'aws-amplify';\r\nimport * as graphql from './graphql';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport moment from 'moment'\r\nconst Nexmo = require('nexmo');\r\nconst nexmo = new Nexmo({\r\n  apiKey: '954aa91e',\r\n  apiSecret: 'uVGSbCKUeetd59Lj',\r\n});\r\n\r\nconst from = 'Nexmo';\r\nconst to = '821045261396';\r\nconst text = 'Hello from Nexmo';\r\n\r\nexport default function MultiAddStudent() {\r\n\r\n      const generateRandom = (min, max) =>{\r\n        var ranNum = Math.floor(Math.random()*(max-min+1)) + min;\r\n        return ranNum;\r\n      }\r\n\r\n      const csvTojson = (sender)=>{\r\n            // check file extd\r\n        var result = [];\r\n        var reader = new FileReader();\r\n        reader.readAsText(sender.target.files[0],'EUC-KR');\r\n        reader.onload = (sender) => {\r\n            //csv to json\r\n            var data = sender.target.result;\r\n                let lines = data.split(/\\r\\n|\\n/);  // 줄바꿈으로 나눔\r\n                    if(lines[0] ===\"name,grade,class\"){\r\n                        var headers=lines[0].split(\",\");\r\n                        for(var i=1;i<lines.length;i++){\r\n                            var obj = {};\r\n                            var currentline=lines[i].split(\",\");\r\n                            for(var j=0;j<headers.length;j++){\r\n                                obj[headers[j]] = currentline[j];\r\n                            }\r\n                            result.push(obj);\r\n                        }\r\n                        result.pop();\r\n                        handleFileInput(JSON.stringify(result));\r\n                    }else{\r\n                        NotificationManager.error('Upload Success', `name,grade,class`,3000);   \r\n                    }\r\n      }\r\n    }\r\n\r\n\r\n\r\n      const handleFileInput =(e)=>{ //multiple\r\n\r\n            let res = JSON.parse(e)\r\n            let input_query =[]\r\n            res.forEach((man,i)=>{\r\n                \r\n                let record = [];\r\n                let nowMonth = Number(moment().format('MM'));\r\n                let nowDay = Number(moment().format('DD'));\r\n                for(let i=0;i<40;i++){\r\n                    const d = Number(moment().subtract(i, 'day').format('DD'))\r\n                    if(d>nowDay){\r\n                        nowMonth = nowMonth -1\r\n                    }\r\n                    if(i>20){\r\n                      record.push({\r\n                        id:Math.random().toString(36).substring(7),\r\n                        bookid:\"4691a31b-b7e7-4bdf-b0f0-15c8731eef74\",\r\n                        month:nowMonth,\r\n                        day: d,\r\n                        words:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n                        etc:generateRandom(0, 99)\r\n                      }\r\n                      );\r\n                    }else{\r\n                      record.push({\r\n                        id:Math.random().toString(36).substring(7),\r\n                        bookid:\"aa3c5394-1161-4496-adb5-17cada2786d8\",\r\n                        month:nowMonth,\r\n                        day: d,\r\n                        words:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n                        etc:generateRandom(0, 99)\r\n                      }\r\n                      );\r\n                    }\r\n                      nowDay = d\r\n                }\r\n\r\n                input_query.push({\r\n                    id: Math.random().toString(36).substring(7),\r\n                    type: \"student\",\r\n                    name: man.name,\r\n                    grade:man.grade,\r\n                    class:man.class,\r\n                    words:[{\r\n                      id:\"4691a31b-b7e7-4bdf-b0f0-15c8731eef74\",\r\n                      name:\"2020 VOCA2.json\",\r\n                      link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA2.json\",\r\n                      haveto:100,\r\n                      due: \"2020-03-10/2020-03-17\"\r\n                  },{\r\n                    id:\"aa3c5394-1161-4496-adb5-17cada2786d8\",\r\n                    name:\"2020 VOCA.json\",\r\n                    link:\"https://wowproject-wow.s3.amazonaws.com/demo/2020 VOCA.json\",\r\n                    haveto:120,\r\n                    due: \"2020-03-07/2020-03-15\"\r\n                }],\r\n                   record:record \r\n                  });\r\n              \r\n                  // API.graphql(graphqlOperation(graphql.createStudent, {input: input_query}))\r\n          });\r\n\r\n          input_query.forEach(async(query,i) =>{\r\n            await API.graphql(graphqlOperation(graphql.createStudent, {input: query})).then(result=>{\r\n              if(input_query.length-1===i){\r\n                NotificationManager.success('Upload Success', `${input_query[0].name} 이외 ${input_query.length}명이 저장 되었습니다.`,3000);  \r\n              }\r\n            })\r\n          })\r\n          window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <NotificationContainer/>\r\n            <input id=\"contained-button-file\" style={{display:'none'}} type=\"file\" onChange={csvTojson}  name=\"file\" accept=\".csv\"/>\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                      Multiple\r\n                    </Button>\r\n                  </label>\r\n                  \r\n        </div>\r\n      );\r\n\r\n}","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {\r\n    Chart,\r\n    BarSeries,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\n  import { Animation } from '@devexpress/dx-react-chart';\r\n  import { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\r\n  import List from '@material-ui/core/List';\r\n  import ListItem from '@material-ui/core/ListItem';\r\n  import ListItemText from '@material-ui/core/ListItemText';\r\n  import Switch from '@material-ui/core/Switch';\r\n  import Tabs from '@material-ui/core/Tabs';\r\n  import Tab from '@material-ui/core/Tab';\r\n  import Typography from '@material-ui/core/Typography';\r\n  import Box from '@material-ui/core/Box';\r\n  import ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n  import Avatar from '@material-ui/core/Avatar';\r\n  import AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n  import {API, graphqlOperation } from 'aws-amplify';\r\n  import * as graphql from './utility/graphql';\r\n  import * as academyinfo from './auth/academyInfo'\r\n  import moment from 'moment'\r\n  import { withStyles,createStyles } from '@material-ui/core/styles';\r\n  import FormGroup from '@material-ui/core/FormGroup';\r\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n  import Divider from '@material-ui/core/Divider';\r\n  import Button from '@material-ui/core/Button';\r\n  import MultiAddStudent from './utility/multiAddStudent';\r\n  import DateRangePicker from \"react-daterange-picker\";\r\n  import Dialog from '@material-ui/core/Dialog';\r\n  import DialogActions from '@material-ui/core/DialogActions';\r\n  import DialogContent from '@material-ui/core/DialogContent';\r\n  import Footer from './Footer';\r\n  import MakeCsvPage from './utility/makeCSV'\r\n  const styles = createStyles({\r\n    formControlLabel: { color:'#fff', \r\n    '& label': { color:'#fff' } }\r\n });//left side toggle label font color\r\n\r\n  const CustomSwitch = withStyles({\r\n    switchBase: {\r\n      color: '$ddd',\r\n      '&$checked': {\r\n        color: '#FFF',\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: '#FFF',\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);//left side toggle color\r\n\r\n\r\nclass MainConsole extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          checked:academyinfo.info.grade,\r\n          listIndex:0,\r\n          chartIndex:0,\r\n          All:[],\r\n          ratelength:0,\r\n          loading:true,\r\n          MonthChart:[],\r\n          DayChart:[],\r\n          noStudent:false,\r\n          Taa:0,  //now selected TodayAssembleAvg\r\n          Aaa:0, //now selected TodayAssembleAvg\r\n          calendarValue: moment(),//calendar\r\n          calendarOpen:false\r\n        };\r\n      }\r\n\r\n      toggleCalendar=()=>{\r\n\r\n        this.setState({ calendarOpen:true });\r\n      }\r\n      toggleCalendarfalse=()=>{\r\n        this.setState({ calendarOpen:false });\r\n      }\r\n      oncalendarSelect = (calendarValue, states) => {\r\n        this.toggleCalendarfalse()\r\n        this.setState({ calendarValue });\r\n        this.updateAll()\r\n      };//calendar\r\n    \r\n      \r\n      queryCstudent = async(formonthchart,fordaychart,thisMonth,thisDay) =>{\r\n\r\n    await API.graphql(graphqlOperation(graphql.queryCstudent)).then(data =>{\r\n        let nowselected = [] //left side age selector\r\n        let MonthChart = [{month:null,assemble:[]},{month:null,assemble:[]},{month:null,assemble:[]},{month:null,assemble:[]},{month:null,assemble:[]}]\r\n        let DayChart = [\r\n            {day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},\r\n            {day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]},{day:null,assemble:[]}\r\n            ]\r\n        let Taa =0; //now selected TodayAssembleAvg\r\n        let Aaa =0; //now selected TodayAssembleAvg\r\n        let Data = data.data.listMyTypes.items;\r\n\r\n        if(Data.length>0){\r\n            Data.map((d,i)=>{\r\n                let TodayAssemble = []\r\n                let AllAssemble = []\r\n\r\n                if(this.state.checked.includes(d.grade)){\r\n                    if(d.record !==null && d.record.length>0){\r\n    \r\n                        formonthchart.map((month,i)=>{\r\n                            let temp = d.record.filter(x=>x.month===Number(month)).map(x => x.etc);\r\n                            if(MonthChart[i].month ===null){\r\n                                MonthChart[i].month = month;\r\n                            }\r\n                            MonthChart[i].assemble=MonthChart[i].assemble.concat(temp);\r\n                        })//for month chart 3\r\n\r\n    \r\n                        fordaychart.map((day,i)=>{\r\n                            let temp = d.record.filter(x=>x.month===Number(day.m) && x.day===Number(day.d)).map(x => x.etc);\r\n                    \r\n                            if(DayChart[i].day ===null){\r\n                                DayChart[i].day = day.d;\r\n                            }\r\n                            DayChart[i].assemble=DayChart[i].assemble.concat(temp);\r\n                        })//for day chart 3\r\n\r\n\r\n                        d.record.map((record,i)=>{ \r\n                                if(record.month === thisMonth && record.day === thisDay){ //나중에 수정\r\n                                    TodayAssemble.push(record.etc)\r\n                                    }\r\n                                AllAssemble.push(record.etc)   \r\n                        })//per student's record\r\n                }    \r\n                    const taa = average(TodayAssemble) ===undefined?0:average(TodayAssemble); \r\n                    const aaa = average(AllAssemble)\r\n                    \r\n                    nowselected.push({name:d.name,grade:d.grade,ta:TodayAssemble,aa:AllAssemble,taa:taa,aaa:aaa})\r\n                }\r\n            });\r\n            \r\n            Taa = average(nowselected.map(x=>x.taa))===undefined?0:average(nowselected.map(x=>x.taa)) //체크된 학생 전부가 오늘 얼마나 숙제를 했는지\r\n            Aaa = average(nowselected.map(x=>x.aaa)) //체크된 학생 전부가 지금까지 숙제한 퍼센트   \r\n            \r\n            MonthChart.map(d=>{\r\n                d.assemble = average(d.assemble)\r\n            });//for month chart 4\r\n            DayChart.map(d=>{\r\n                d.assemble = average(d.assemble)\r\n            });//for day chart 4\r\n            \r\n\r\n            let rating = nowselected.sort((a, b) => a.ta < b.ta ? -1 : a.ta < b.ta ? 1 : 0);\r\n\r\n            this.setState({\r\n                All:nowselected,\r\n                rating:rating,\r\n                loading:false,\r\n                ratelength:rating.length,\r\n                DayChart:DayChart,\r\n                MonthChart:MonthChart,\r\n                Taa:Taa,\r\n                Aaa:Aaa\r\n            });\r\n        }else{\r\n            this.setState({noStudent:true,loading:false})\r\n        }\r\n\r\n    })\r\n  }\r\n\r\n\r\n  formonthchart=(y,m,d)=>{\r\n    let fivemonths = [];\r\n    let td = [y, m, d];\r\n    for(let i=4;i>-1;i--){\r\n        const d = moment(td).subtract(i, 'month').format('MM')\r\n        fivemonths.push(d);\r\n    }\r\n    return fivemonths\r\n  }//for month chart 1\r\n  \r\n\r\n  forDayChart=(y,m,d)=>{\r\n    let tendays = [];\r\n    let td = [y, m, d];\r\n    for(let i=9;i>-1;i--){\r\n        const m = moment(td).subtract(i, 'day').subtract(1, 'month').format('MM')\r\n        const d = moment(td).subtract(i, 'day').format('DD')\r\n        let day =moment(`${d}/${m}/2020`, \"DD/MM/YYYY\")\r\n        if(moment(day).isValid()===true){\r\n            tendays.push({m:moment(day).format(\"MM\"),d:moment(day).format(\"DD\")});\r\n        }\r\n    }\r\n    return tendays\r\n  }//for day chart 1\r\n  \r\n  updateAll=()=>{\r\n    const y = Number(this.state.calendarValue.format(\"YYYY\"));\r\n    const m = Number(this.state.calendarValue.format(\"MM\"));\r\n    const d = Number(this.state.calendarValue.format(\"DD\"));\r\n    \r\n    const formonthchart = this.formonthchart(y,m,d);//for month chart 2\r\n    const fordaychart = this.forDayChart(y,m,d);//for day chart 2\r\n    this.queryCstudent(formonthchart,fordaychart,m,d);\r\n  }\r\n\r\n  componentDidMount =()=>{\r\n    this.updateAll();\r\n  }\r\n\r\n\r\n    handleToggle = value => () => {\r\n        const currentIndex = this.state.checked.indexOf(value);\r\n        const newChecked = [...this.state.checked];\r\n    \r\n        if (currentIndex === -1) {\r\n          newChecked.push(value);\r\n        } else {\r\n          newChecked.splice(currentIndex, 1);\r\n        }\r\n        this.updateAll();\r\n        this.setState({checked:newChecked})\r\n      }; //left side age toggle\r\n\r\n\r\n    handleListChange = (event, newValue) => {\r\n        this.setState({listIndex:newValue});\r\n      };\r\n\r\n    handleChartChange = (event, newValue) => {\r\n        this.setState({chartIndex:newValue});\r\n      };\r\n\r\n  render() {\r\n    let leng = this.state.ratelength;\r\n    let one = [0,1,2] //상위 3명\r\n    let two = [leng-1,leng-2,leng-3] //하위 3명\r\n\r\n    return (\r\n        <div>\r\n            <div style={{height:70}}/>\r\n            {\r\n                this.state.loading?\r\n                    <div></div>:\r\n                        <div>\r\n                            {\r\n                                this.state.noStudent?\r\n                                <div style={{width:'100%',height:500,display: 'flex', flex: 1, justifyContent: 'center', alignItems: 'center',backgroundColor:'#fff'}}>\r\n                                    <div>\r\n                                    <img src=\"NEWLOGO.png\" width=\"28\" height=\"28\" alt=\"home\"/>\r\n                                        <MultiAddStudent/>\r\n                                    </div>\r\n                                </div>:\r\n                                <div style={{width:'100%',display:'flex',backgroundColor:'#F4F5F7'}}>    \r\n                                <div>\r\n                                    <div style={{margin:20}}>\r\n                                    <Button variant=\"outlined\" color=\"primary\" onClick={this.toggleCalendar}>\r\n                                        {this.state.calendarValue.format(\"YY/MM/DD\")}\r\n                                    </Button>\r\n                                    <Dialog\r\n                                        open={this.state.calendarOpen}\r\n                                        onClose={this.toggleCalendarfalse}\r\n                                        aria-labelledby=\"alert-dialog-title\"\r\n                                        aria-describedby=\"alert-dialog-description\"\r\n                                    >\r\n                                        \r\n                                        <DialogContent>\r\n                                            <DateRangePicker\r\n                                                selectionType='single'\r\n                                                value={this.state.calendarValue}\r\n                                                onSelect={this.oncalendarSelect}\r\n                                                singleDateRange={true}\r\n                                            />\r\n                                        </DialogContent>\r\n                                        <DialogActions>\r\n                                        <Button onClick={this.toggleCalendarfalse} color=\"primary\">\r\n                                            Disagree\r\n                                        </Button>\r\n                                        </DialogActions>\r\n                                    </Dialog>\r\n                                    </div>\r\n                                    <div style={{width:150,backgroundColor:'#5a69bf',padding:20,borderTopRightRadius:30,borderBottomRightRadius:30,marginTop:30}} >\r\n                                    <FormGroup>\r\n                                    {academyinfo.info.grade.map((d,i)=>{\r\n                                        return(\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                <CustomSwitch\r\n                                                    onChange={this.handleToggle(d)}\r\n                                                    checked={this.state.checked.indexOf(d) !== -1}\r\n                                                    value=\"checkedA\"\r\n                                                />\r\n                                                }\r\n                                                label={<Typography style={styles.formControlLabel}>{d}</Typography>}\r\n                                            />\r\n                                        )\r\n                                    })}\r\n                                     </FormGroup>\r\n                                     </div>    \r\n                                     <div>\r\n    \r\n                                     </div>    \r\n                            </div>\r\n                            \r\n                            {\r\n                            leng<3?\r\n    \r\n                            <div>너무적어</div>:\r\n                            <div style={{display:'flex',width:'100%',padding:20,backgroundColor:'#F4F5F7'}}>\r\n                            <div style={{width:\"40%\"}}>\r\n\r\n                          \r\n                                    <div style={{display:'flex',backgroundColor:'#fff',margin:10,padding:30,borderRadius:50}}>\r\n                                        \r\n                                            <div style={{width:\"40%\",margin:20}}>\r\n                                                <CircularProgressbarWithChildren \r\n                                                    value={this.state.Taa}\r\n                                                    styles={buildStyles({\r\n                                                        trailColor: '#F4F5F7',\r\n                                                        pathColor: '#5a69bf',\r\n                                                      })}\r\n                                                    >\r\n                                                    <div style={{textAlign:'center' }}>\r\n                                                    <p style={{ fontSize: 15,marginBottom:-10}}>Today</p>                   \r\n                                                    <strong style={{ fontSize: 35}}>{this.state.Taa}</strong> \r\n                                                    <strong style={{ fontSize: 20}}>%</strong> \r\n                                                    </div>\r\n                                                </CircularProgressbarWithChildren>\r\n                                            </div>\r\n                                            <Divider orientation=\"vertical\"/>\r\n                                            <div style={{width:\"40%\",margin:20}}>\r\n                                                <CircularProgressbarWithChildren \r\n                                                    value={this.state.Aaa}\r\n                                                    styles={buildStyles({\r\n                                                        trailColor: '#F4F5F7',\r\n                                                        pathColor: '#5a69bf',\r\n                                                      })}\r\n                                                    >\r\n                                                    <div style={{textAlign:'center' }}>\r\n                                                    <p style={{ fontSize: 15,marginBottom:-10}}>Total</p>                   \r\n                                                    <strong style={{ fontSize: 35}}>{this.state.Aaa}</strong> \r\n                                                    <strong style={{ fontSize: 20}}>%</strong> \r\n                                                    </div>\r\n                                                </CircularProgressbarWithChildren>\r\n                                            </div>\r\n                                        \r\n                                    </div>\r\n                                    <div style={{margin:10,backgroundColor:'#fff'}}>\r\n                                    <Tabs\r\n                                        variant=\"fullWidth\"\r\n                                        value={this.state.listIndex}\r\n                                        onChange={this.handleListChange}\r\n                                        indicatorColor=\"primary\"\r\n                                        textColor=\"primary\"\r\n                                    >\r\n                                        <Tab icon={<img width={50} height={50} src=\"trophy.png\" alt=\"trophy\" />}/>\r\n                                        <Tab icon={<img width={50} height={50} src=\"alert.png\" alt=\"alert\" />} />\r\n                                    </Tabs>\r\n                                    <TabPanel value={this.state.listIndex} index={1}>\r\n                                    {\r\n                                                      one.map((d,i)=>{\r\n                                                        return(\r\n                                                            <List>\r\n                                                            <ListItem>\r\n                                                                <ListItemAvatar>\r\n                                                                <Avatar>\r\n                                                                    <AccountCircleIcon />\r\n                                                                </Avatar>\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText \r\n                                                                primary={`${this.state.rating[d].name}(${this.state.rating[d].grade})`} \r\n                                                                secondary={`Today : ${this.state.rating[d].taa}/ Total : ${this.state.rating[d].aaa}`} />\r\n                                                            </ListItem>\r\n                                                            </List>\r\n                                                        )\r\n                                                    })\r\n                                       }\r\n                                    </TabPanel>\r\n                                    <TabPanel value={this.state.listIndex} index={0}>\r\n                                       {\r\n                                                      two.map((d,i)=>{\r\n                                                        return(\r\n                                                            <List>\r\n                                                            <ListItem>\r\n                                                                <ListItemAvatar>\r\n                                                                <Avatar>\r\n                                                                    <AccountCircleIcon />\r\n                                                                </Avatar>\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText \r\n                                                                primary={`${this.state.rating[d].name}(${this.state.rating[d].grade})`} \r\n                                                                secondary={`Today : ${this.state.rating[d].taa}/ Total : ${this.state.rating[d].aaa}`} />\r\n                                                            </ListItem>\r\n                                                            </List>\r\n                                                        )\r\n                                                    })\r\n                                       }\r\n                                    </TabPanel>                        \r\n                                    </div>\r\n                                    </div>\r\n                            \r\n                                <div style={{width:\"60%\"}}>\r\n                                <Paper>\r\n                                    <Tabs\r\n                                        value={this.state.chartIndex}\r\n                                        onChange={this.handleChartChange}\r\n                                        indicatorColor=\"primary\"\r\n                                        textColor=\"primary\"\r\n                                    >\r\n                                        <Tab label=\"daily\"/>\r\n                                        <Tab label=\"monthly\"/>\r\n                                    </Tabs>\r\n                                    <TabPanel value={this.state.chartIndex} index={0}>\r\n                                        <Chart data={this.state.DayChart}>\r\n                                            <ArgumentAxis />\r\n                                            <ValueAxis/>\r\n                                            <BarSeries\r\n                                                rotated={true}\r\n                                                color='#5a69bf'\r\n                                                valueField=\"assemble\"\r\n                                                argumentField=\"day\"\r\n                                            />\r\n                                            <Animation />\r\n                                        </Chart>\r\n                                    </TabPanel>\r\n                                    <TabPanel value={this.state.chartIndex} index={1}>\r\n                                        <Chart data={this.state.MonthChart}>\r\n                                            <ArgumentAxis />\r\n                                            <ValueAxis/>\r\n                                            <BarSeries\r\n                                                rotated={true}\r\n                                                color='#5a69bf'\r\n                                                valueField=\"assemble\"\r\n                                                argumentField=\"month\"\r\n                                            />\r\n                                            <Animation />\r\n                                        </Chart>\r\n                                    </TabPanel>                        \r\n                                </Paper>\r\n                                    \r\n                                </div>\r\n                                </div>\r\n                    \r\n                        } \r\n                    </div>\r\n                            }\r\n              \r\n            </div>\r\n            }\r\n            <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst average = arr => {\r\n\r\n    if(arr.length>0){\r\n        return Math.round(arr.reduce( ( p, c ) => p + c, 0 ) / arr.length)\r\n    }else if(arr.length ===1 ){\r\n        return arr[0]\r\n    }else{\r\n        return 0\r\n    }\r\n};\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nexport default MainConsole;\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch,Redirect } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport WordSetting from './components/WordSetting';\nimport Products from './components/Products';\nimport ProductAdmin from './components/ProductAdmin';\nimport LogIn from './components/auth/LogIn';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\nimport ChangePassword from './components/auth/ChangePassword';\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\nimport Welcome from './components/auth/Welcome';\nimport CsvTable from './components/CSVtablepage'\n\nimport Sample from './components/Sample';\nimport MainConsole from './components/mainConsole'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Auth} from 'aws-amplify';\nlibrary.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null,\n    note:[]\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {      \n      \n      // const data = await API.graphql(graphqlOperation(query))\n      // alert(JSON.stringify(data));\n\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(session);\n      const user = await Auth.currentAuthenticatedUser();\n      // alert(`Hi ${user}!!`)\n      this.setUser(user);\n\n    } catch(error) {\n      if (error !== 'No current user') {\n        alert(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar logined={this.state.isAuthenticated} auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => (this.state.isAuthenticated?(<Redirect to=\"/mainconsole\" />):(<Home {...props} auth={authProps} />))}/>\n              <Route exact path=\"/products\" render={(props) => (this.state.isAuthenticated?(<Products {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} />\n              <Route exact path=\"/wordsetting\" render={(props) => (this.state.isAuthenticated?(<WordSetting {...props} auth={authProps} />):(<Redirect to=\"/login\" />))} />\n              <Route exact path=\"/csv\" render={(props) => <CsvTable {...props} auth={authProps} />} />\n              <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} />\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n              <Route exact path=\"/mainconsole\" render={(props) => <MainConsole {...props} auth={authProps} />} />\n              <Route exact path=\"/Sample\" render={(props) => <Sample {...props} auth={authProps} />} />\n            </Switch>\n            \n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from 'aws-amplify';\nimport config from './config';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n    Auth: {\n      mandatorySignIn: true,\n      region: config.cognito.REGION,\n      userPoolId: config.cognito.USER_POOL_ID,\n      userPoolWebClientId: config.cognito.APP_CLIENT_ID\n    },\n    Storage: {\n      AWSS3: {\n          bucket: 'verdemo', //REQUIRED -  Amazon S3 bucket\n          region: 'ap-northeast-2', //OPTIONAL -  Amazon service region\n      }\n  },\n    \"aws_project_region\": \"ap-northeast-2\",\n    \"aws_appsync_graphqlEndpoint\": \"https://6rha74vb45elpo6wue7tw2ladm.appsync-api.ap-northeast-2.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"ap-northeast-2\",\n    \"aws_appsync_authenticationType\": \"API_KEY\",\n    \"aws_appsync_apiKey\": \"da2-53xamyyb3vagfcwl5xylphc43u\"\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}